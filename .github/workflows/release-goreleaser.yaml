name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  goreleaser:
    permissions:
      contents: write
      id-token: write
      packages: write
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
      image: ${{ steps.digest.outputs.image }}
      digest: ${{ steps.digest.outputs.digest }}
    runs-on: ubuntu-latest
    steps:
      - uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          swap-storage: false
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: |
          set -e
          git fetch --force --tags
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: backend/go.mod
          cache-dependency-path: backend/go.sum
      - name: Build assets
        run: |
          set -e
          VERSION=${{ github.ref_name }} make build-backend-assets
          rm -rf ./frontend/node_modules
      - name: Login
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@cee1b8e05ae5b2593a75e197229729eabaa9f8ec # v0.20.2
      - name: Run GoReleaser
        id: goreleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --timeout 90m
          workdir: backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KOCACHE: /tmp/ko-cache
      - name: Upload artifacts.json
        uses: svenstaro/upload-release-action@81c65b7cd4de9b2570615ce3aad67a41de5b1a13 # 2.11.2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: backend/dist/artifacts.json
          asset_name: artifacts.json
          tag: ${{ github.ref }}
      - name: Upload metadata.json
        uses: svenstaro/upload-release-action@81c65b7cd4de9b2570615ce3aad67a41de5b1a13 # 2.11.2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: backend/dist/metadata.json
          asset_name: metadata.json
          tag: ${{ github.ref }}
      - name: Generate subject
        id: hash
        env:
          ARTIFACTS: "${{ steps.goreleaser.outputs.artifacts }}"
        run: |
          set -euo pipefail
          cd backend
          checksum_file=$(echo "$ARTIFACTS" | jq -r '.[] | select (.type=="Checksum") | .path')
          hashes=$(cat $checksum_file | base64 -w0)
          echo "hashes=$hashes" >> $GITHUB_OUTPUT
      - name: Image digest
        id: digest
        env:
          ARTIFACTS: "${{ steps.goreleaser.outputs.artifacts }}"
        run: |
          set -euo pipefail
          image_and_digest=$(echo "$ARTIFACTS" | jq -r '.[] | select (.type=="Docker Manifest") | .path')
          image=$(echo "${image_and_digest}" | cut -d'@' -f1 | cut -d':' -f1)
          digest=$(echo "${image_and_digest}" | cut -d'@' -f2)
          echo "image=$image" >> "$GITHUB_OUTPUT"
          echo "digest=$digest" >> "$GITHUB_OUTPUT"

  provenance:
    needs:
      - goreleaser
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: "${{ needs.goreleaser.outputs.hashes }}"
      upload-assets: true

  image-provenance:
    needs:
      - goreleaser
    permissions:
      actions: read
      id-token: write
      packages: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ${{ needs.goreleaser.outputs.image }}
      digest: ${{ needs.goreleaser.outputs.digest }}
      registry-username: ${{ github.actor }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}
