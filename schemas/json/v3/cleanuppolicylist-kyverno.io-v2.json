{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "CleanupPolicyList is a list of CleanupPolicy",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "enum": [
        "kyverno.io/v2"
      ],
      "type": [
        "string",
        "null"
      ]
    },
    "items": {
      "description": "List of cleanuppolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "items": {
        "description": "CleanupPolicy defines a rule for resource cleanup.",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "enum": [
              "kyverno.io/v2"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "enum": [
              "CleanupPolicy"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "metadata": {
            "allOf": [
              {
                "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
                "properties": {
                  "annotations": {
                    "additionalProperties": {
                      "default": "",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "creationTimestamp": {
                    "allOf": [
                      {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "format": "date-time",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    ],
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                  },
                  "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                    "format": "int64",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "deletionTimestamp": {
                    "allOf": [
                      {
                        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                        "format": "date-time",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    ],
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                  },
                  "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                    "items": {
                      "default": "",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "type": [
                      "array",
                      "null"
                    ],
                    "x-kubernetes-list-type": "set",
                    "x-kubernetes-patch-strategy": "merge"
                  },
                  "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "generation": {
                    "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                    "format": "int64",
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "labels": {
                    "additionalProperties": {
                      "default": "",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                    "items": {
                      "allOf": [
                        {
                          "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                          "properties": {
                            "apiVersion": {
                              "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "fieldsType": {
                              "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "fieldsV1": {
                              "allOf": [
                                {
                                  "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                }
                              ],
                              "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type."
                            },
                            "manager": {
                              "description": "Manager is an identifier of the workflow managing these fields.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "operation": {
                              "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "subresource": {
                              "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "time": {
                              "allOf": [
                                {
                                  "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                                  "format": "date-time",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              ],
                              "description": "Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over."
                            }
                          },
                          "type": [
                            "object",
                            "null"
                          ]
                        }
                      ],
                      "default": {}
                    },
                    "type": [
                      "array",
                      "null"
                    ],
                    "x-kubernetes-list-type": "atomic"
                  },
                  "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                    "items": {
                      "allOf": [
                        {
                          "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                          "properties": {
                            "apiVersion": {
                              "default": "",
                              "description": "API version of the referent.",
                              "type": "string"
                            },
                            "blockOwnerDeletion": {
                              "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "controller": {
                              "description": "If true, this reference points to the managing controller.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "kind": {
                              "default": "",
                              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "name": {
                              "default": "",
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                              "type": "string"
                            },
                            "uid": {
                              "default": "",
                              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                              "type": "string"
                            }
                          },
                          "required": [
                            "apiVersion",
                            "kind",
                            "name",
                            "uid"
                          ],
                          "type": [
                            "object",
                            "null"
                          ],
                          "x-kubernetes-map-type": "atomic"
                        }
                      ],
                      "default": {}
                    },
                    "type": [
                      "array",
                      "null"
                    ],
                    "x-kubernetes-list-map-keys": [
                      "uid"
                    ],
                    "x-kubernetes-list-type": "map",
                    "x-kubernetes-patch-merge-key": "uid",
                    "x-kubernetes-patch-strategy": "merge"
                  },
                  "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "selfLink": {
                    "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "type": [
                  "object",
                  "null"
                ]
              }
            ],
            "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
          },
          "spec": {
            "description": "Spec declares policy behaviors.",
            "properties": {
              "conditions": {
                "description": "Conditions defines the conditions used to select the resources which will be cleaned up.",
                "properties": {
                  "all": {
                    "description": "AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass.",
                    "items": {
                      "properties": {
                        "key": {
                          "description": "Key is the context entry (using JMESPath) for conditional rule evaluation.",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "message": {
                          "description": "Message is an optional display message",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "operator": {
                          "description": "Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan",
                          "enum": [
                            "Equals",
                            "NotEquals",
                            "AnyIn",
                            "AllIn",
                            "AnyNotIn",
                            "AllNotIn",
                            "GreaterThanOrEquals",
                            "GreaterThan",
                            "LessThanOrEquals",
                            "LessThan",
                            "DurationGreaterThanOrEquals",
                            "DurationGreaterThan",
                            "DurationLessThanOrEquals",
                            "DurationLessThan"
                          ],
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "value": {
                          "description": "Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.",
                          "x-kubernetes-preserve-unknown-fields": true
                        }
                      },
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "type": [
                      "array",
                      "null"
                    ]
                  },
                  "any": {
                    "description": "AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass.",
                    "items": {
                      "properties": {
                        "key": {
                          "description": "Key is the context entry (using JMESPath) for conditional rule evaluation.",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "message": {
                          "description": "Message is an optional display message",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "operator": {
                          "description": "Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan",
                          "enum": [
                            "Equals",
                            "NotEquals",
                            "AnyIn",
                            "AllIn",
                            "AnyNotIn",
                            "AllNotIn",
                            "GreaterThanOrEquals",
                            "GreaterThan",
                            "LessThanOrEquals",
                            "LessThan",
                            "DurationGreaterThanOrEquals",
                            "DurationGreaterThan",
                            "DurationLessThanOrEquals",
                            "DurationLessThan"
                          ],
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "value": {
                          "description": "Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.",
                          "x-kubernetes-preserve-unknown-fields": true
                        }
                      },
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "type": [
                      "array",
                      "null"
                    ]
                  }
                },
                "type": [
                  "object",
                  "null"
                ]
              },
              "context": {
                "description": "Context defines variables and data sources that can be used during rule execution.",
                "items": {
                  "description": "ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.",
                  "oneOf": [
                    {
                      "required": [
                        "configMap"
                      ]
                    },
                    {
                      "required": [
                        "apiCall"
                      ]
                    },
                    {
                      "required": [
                        "imageRegistry"
                      ]
                    },
                    {
                      "required": [
                        "variable"
                      ]
                    },
                    {
                      "required": [
                        "globalReference"
                      ]
                    }
                  ],
                  "properties": {
                    "apiCall": {
                      "description": "APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.",
                      "properties": {
                        "data": {
                          "description": "The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.",
                          "items": {
                            "description": "RequestData contains the HTTP POST data",
                            "properties": {
                              "key": {
                                "description": "Key is a unique identifier for the data value",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value is the data value",
                                "x-kubernetes-preserve-unknown-fields": true
                              }
                            },
                            "required": [
                              "key",
                              "value"
                            ],
                            "type": [
                              "object",
                              "null"
                            ]
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        },
                        "default": {
                          "description": "Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "jmesPath": {
                          "description": "JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "method": {
                          "default": "GET",
                          "description": "Method is the HTTP request type (GET or POST). Defaults to GET.",
                          "enum": [
                            "GET",
                            "POST"
                          ],
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "service": {
                          "description": "Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.",
                          "properties": {
                            "caBundle": {
                              "description": "CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "headers": {
                              "description": "Headers is a list of optional HTTP headers to be included in the request.",
                              "items": {
                                "properties": {
                                  "key": {
                                    "description": "Key is the header key",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value is the header value",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "key",
                                  "value"
                                ],
                                "type": [
                                  "object",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "url": {
                              "description": "URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "url"
                          ],
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "urlPath": {
                          "description": "URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "configMap": {
                      "description": "ConfigMap is the ConfigMap reference.",
                      "properties": {
                        "name": {
                          "description": "Name is the ConfigMap name.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the ConfigMap namespace.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "globalReference": {
                      "description": "GlobalContextEntryReference is a reference to a cached global context entry.",
                      "properties": {
                        "jmesPath": {
                          "description": "JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "Name of the global context entry",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "imageRegistry": {
                      "description": "ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.",
                      "properties": {
                        "imageRegistryCredentials": {
                          "description": "ImageRegistryCredentials provides credentials that will be used for authentication with registry",
                          "properties": {
                            "allowInsecureRegistry": {
                              "description": "AllowInsecureRegistry allows insecure access to a registry.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "providers": {
                              "description": "Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.",
                              "items": {
                                "description": "ImageRegistryCredentialsProvidersType provides the list of credential providers required.",
                                "enum": [
                                  "default",
                                  "amazon",
                                  "azure",
                                  "google",
                                  "github"
                                ],
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "secrets": {
                              "description": "Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            }
                          },
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "jmesPath": {
                          "description": "JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "reference": {
                          "description": "Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest",
                          "type": "string"
                        }
                      },
                      "required": [
                        "reference"
                      ],
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "Name is the variable name.",
                      "type": "string"
                    },
                    "variable": {
                      "description": "Variable defines an arbitrary JMESPath context variable that can be defined inline.",
                      "properties": {
                        "default": {
                          "description": "Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "jmesPath": {
                          "description": "JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "value": {
                          "description": "Value is any arbitrary JSON object representable in YAML or JSON form.",
                          "x-kubernetes-preserve-unknown-fields": true
                        }
                      },
                      "type": [
                        "object",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": [
                    "object",
                    "null"
                  ]
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "deletionPropagationPolicy": {
                "description": "DeletionPropagationPolicy defines how resources will be deleted (Foreground, Background, Orphan).",
                "enum": [
                  "Foreground",
                  "Background",
                  "Orphan"
                ],
                "type": [
                  "string",
                  "null"
                ]
              },
              "exclude": {
                "description": "ExcludeResources defines when cleanuppolicy should not be applied. The exclude\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the name or role.",
                "not": {
                  "required": [
                    "any",
                    "all"
                  ]
                },
                "properties": {
                  "all": {
                    "description": "All allows specifying resources which will be ANDed",
                    "items": {
                      "description": "ResourceFilter allow users to \"AND\" or \"OR\" between resources",
                      "properties": {
                        "clusterRoles": {
                          "description": "ClusterRoles is the list of cluster-wide role names for the user.",
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        },
                        "resources": {
                          "description": "ResourceDescription contains information about the resource being created or modified.",
                          "not": {
                            "required": [
                              "name",
                              "names"
                            ]
                          },
                          "properties": {
                            "annotations": {
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "description": "Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).",
                              "type": [
                                "object",
                                "null"
                              ]
                            },
                            "kinds": {
                              "description": "Kinds is a list of resource kinds.",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "names": {
                              "description": "Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "namespaceSelector": {
                              "description": "NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": [
                                      "object",
                                      "null"
                                    ]
                                  },
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                }
                              },
                              "type": [
                                "object",
                                "null"
                              ],
                              "x-kubernetes-map-type": "atomic"
                            },
                            "namespaces": {
                              "description": "Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "operations": {
                              "description": "Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.",
                              "items": {
                                "description": "AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.",
                                "enum": [
                                  "CREATE",
                                  "CONNECT",
                                  "UPDATE",
                                  "DELETE"
                                ],
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "selector": {
                              "description": "Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": [
                                      "object",
                                      "null"
                                    ]
                                  },
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                }
                              },
                              "type": [
                                "object",
                                "null"
                              ],
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "roles": {
                          "description": "Roles is the list of namespaced role names for the user.",
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        },
                        "subjects": {
                          "description": "Subjects is the list of subject names like users, user groups, and service accounts.",
                          "items": {
                            "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.",
                            "properties": {
                              "apiGroup": {
                                "description": "APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "kind": {
                                "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the object being referenced.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "kind",
                              "name"
                            ],
                            "type": [
                              "object",
                              "null"
                            ],
                            "x-kubernetes-map-type": "atomic"
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        }
                      },
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "type": [
                      "array",
                      "null"
                    ]
                  },
                  "any": {
                    "description": "Any allows specifying resources which will be ORed",
                    "items": {
                      "description": "ResourceFilter allow users to \"AND\" or \"OR\" between resources",
                      "properties": {
                        "clusterRoles": {
                          "description": "ClusterRoles is the list of cluster-wide role names for the user.",
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        },
                        "resources": {
                          "description": "ResourceDescription contains information about the resource being created or modified.",
                          "not": {
                            "required": [
                              "name",
                              "names"
                            ]
                          },
                          "properties": {
                            "annotations": {
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "description": "Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).",
                              "type": [
                                "object",
                                "null"
                              ]
                            },
                            "kinds": {
                              "description": "Kinds is a list of resource kinds.",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "names": {
                              "description": "Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "namespaceSelector": {
                              "description": "NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": [
                                      "object",
                                      "null"
                                    ]
                                  },
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                }
                              },
                              "type": [
                                "object",
                                "null"
                              ],
                              "x-kubernetes-map-type": "atomic"
                            },
                            "namespaces": {
                              "description": "Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "operations": {
                              "description": "Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.",
                              "items": {
                                "description": "AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.",
                                "enum": [
                                  "CREATE",
                                  "CONNECT",
                                  "UPDATE",
                                  "DELETE"
                                ],
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "selector": {
                              "description": "Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": [
                                      "object",
                                      "null"
                                    ]
                                  },
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                }
                              },
                              "type": [
                                "object",
                                "null"
                              ],
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "roles": {
                          "description": "Roles is the list of namespaced role names for the user.",
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        },
                        "subjects": {
                          "description": "Subjects is the list of subject names like users, user groups, and service accounts.",
                          "items": {
                            "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.",
                            "properties": {
                              "apiGroup": {
                                "description": "APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "kind": {
                                "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the object being referenced.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "kind",
                              "name"
                            ],
                            "type": [
                              "object",
                              "null"
                            ],
                            "x-kubernetes-map-type": "atomic"
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        }
                      },
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "type": [
                      "array",
                      "null"
                    ]
                  }
                },
                "type": [
                  "object",
                  "null"
                ]
              },
              "match": {
                "description": "MatchResources defines when cleanuppolicy should be applied. The match\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the user name or role.\nAt least one kind is required.",
                "not": {
                  "required": [
                    "any",
                    "all"
                  ]
                },
                "properties": {
                  "all": {
                    "description": "All allows specifying resources which will be ANDed",
                    "items": {
                      "description": "ResourceFilter allow users to \"AND\" or \"OR\" between resources",
                      "properties": {
                        "clusterRoles": {
                          "description": "ClusterRoles is the list of cluster-wide role names for the user.",
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        },
                        "resources": {
                          "description": "ResourceDescription contains information about the resource being created or modified.",
                          "not": {
                            "required": [
                              "name",
                              "names"
                            ]
                          },
                          "properties": {
                            "annotations": {
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "description": "Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).",
                              "type": [
                                "object",
                                "null"
                              ]
                            },
                            "kinds": {
                              "description": "Kinds is a list of resource kinds.",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "names": {
                              "description": "Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "namespaceSelector": {
                              "description": "NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": [
                                      "object",
                                      "null"
                                    ]
                                  },
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                }
                              },
                              "type": [
                                "object",
                                "null"
                              ],
                              "x-kubernetes-map-type": "atomic"
                            },
                            "namespaces": {
                              "description": "Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "operations": {
                              "description": "Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.",
                              "items": {
                                "description": "AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.",
                                "enum": [
                                  "CREATE",
                                  "CONNECT",
                                  "UPDATE",
                                  "DELETE"
                                ],
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "selector": {
                              "description": "Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": [
                                      "object",
                                      "null"
                                    ]
                                  },
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                }
                              },
                              "type": [
                                "object",
                                "null"
                              ],
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "roles": {
                          "description": "Roles is the list of namespaced role names for the user.",
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        },
                        "subjects": {
                          "description": "Subjects is the list of subject names like users, user groups, and service accounts.",
                          "items": {
                            "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.",
                            "properties": {
                              "apiGroup": {
                                "description": "APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "kind": {
                                "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the object being referenced.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "kind",
                              "name"
                            ],
                            "type": [
                              "object",
                              "null"
                            ],
                            "x-kubernetes-map-type": "atomic"
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        }
                      },
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "type": [
                      "array",
                      "null"
                    ]
                  },
                  "any": {
                    "description": "Any allows specifying resources which will be ORed",
                    "items": {
                      "description": "ResourceFilter allow users to \"AND\" or \"OR\" between resources",
                      "properties": {
                        "clusterRoles": {
                          "description": "ClusterRoles is the list of cluster-wide role names for the user.",
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        },
                        "resources": {
                          "description": "ResourceDescription contains information about the resource being created or modified.",
                          "not": {
                            "required": [
                              "name",
                              "names"
                            ]
                          },
                          "properties": {
                            "annotations": {
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "description": "Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).",
                              "type": [
                                "object",
                                "null"
                              ]
                            },
                            "kinds": {
                              "description": "Kinds is a list of resource kinds.",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "names": {
                              "description": "Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "namespaceSelector": {
                              "description": "NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": [
                                      "object",
                                      "null"
                                    ]
                                  },
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                }
                              },
                              "type": [
                                "object",
                                "null"
                              ],
                              "x-kubernetes-map-type": "atomic"
                            },
                            "namespaces": {
                              "description": "Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).",
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "operations": {
                              "description": "Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.",
                              "items": {
                                "description": "AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.",
                                "enum": [
                                  "CREATE",
                                  "CONNECT",
                                  "UPDATE",
                                  "DELETE"
                                ],
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "selector": {
                              "description": "Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "type": [
                                      "object",
                                      "null"
                                    ]
                                  },
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "additionalProperties": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": [
                                    "object",
                                    "null"
                                  ]
                                }
                              },
                              "type": [
                                "object",
                                "null"
                              ],
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "roles": {
                          "description": "Roles is the list of namespaced role names for the user.",
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        },
                        "subjects": {
                          "description": "Subjects is the list of subject names like users, user groups, and service accounts.",
                          "items": {
                            "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.",
                            "properties": {
                              "apiGroup": {
                                "description": "APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "kind": {
                                "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the object being referenced.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "kind",
                              "name"
                            ],
                            "type": [
                              "object",
                              "null"
                            ],
                            "x-kubernetes-map-type": "atomic"
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        }
                      },
                      "type": [
                        "object",
                        "null"
                      ]
                    },
                    "type": [
                      "array",
                      "null"
                    ]
                  }
                },
                "type": "object"
              },
              "schedule": {
                "description": "The schedule in Cron format",
                "type": "string"
              }
            },
            "required": [
              "match",
              "schedule"
            ],
            "type": "object"
          },
          "status": {
            "description": "Status contains policy runtime data.",
            "properties": {
              "conditions": {
                "items": {
                  "description": "Condition contains details for one aspect of the current state of this API Resource.",
                  "properties": {
                    "lastTransitionTime": {
                      "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "message": {
                      "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                      "maxLength": 32768,
                      "type": "string"
                    },
                    "observedGeneration": {
                      "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                      "format": "int64",
                      "minimum": 0,
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "reason": {
                      "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                      "maxLength": 1024,
                      "minLength": 1,
                      "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                      "type": "string"
                    },
                    "status": {
                      "description": "status of the condition, one of True, False, Unknown.",
                      "enum": [
                        "True",
                        "False",
                        "Unknown"
                      ],
                      "type": "string"
                    },
                    "type": {
                      "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                      "maxLength": 316,
                      "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                      "type": "string"
                    }
                  },
                  "required": [
                    "lastTransitionTime",
                    "message",
                    "reason",
                    "status",
                    "type"
                  ],
                  "type": [
                    "object",
                    "null"
                  ]
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "lastExecutionTime": {
                "format": "date-time",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "type": [
              "object",
              "null"
            ]
          }
        },
        "required": [
          "spec"
        ],
        "type": [
          "object",
          "null"
        ],
        "x-kubernetes-group-version-kind": [
          {
            "group": "kyverno.io",
            "kind": "CleanupPolicy",
            "version": "v2"
          }
        ],
        "x-kubernetes-selectable-fields": []
      },
      "type": [
        "array",
        "null"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "enum": [
        "CleanupPolicyList"
      ],
      "type": [
        "string",
        "null"
      ]
    },
    "metadata": {
      "allOf": [
        {
          "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
          "properties": {
            "continue": {
              "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
              "type": [
                "string",
                "null"
              ]
            },
            "remainingItemCount": {
              "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
              "format": "int64",
              "type": [
                "integer",
                "null"
              ]
            },
            "resourceVersion": {
              "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": [
                "string",
                "null"
              ]
            },
            "selfLink": {
              "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "type": [
            "object",
            "null"
          ]
        }
      ],
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
    }
  },
  "required": [
    "items"
  ],
  "type": "object",
  "x-kubernetes-group-version-kind": [
    {
      "group": "kyverno.io",
      "kind": "CleanupPolicyList",
      "version": "v2"
    }
  ],
  "x-kubernetes-selectable-fields": []
}
