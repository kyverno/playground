{"openapi":"3.0.0","info":{"title":"Kubernetes CRD Swagger","version":"v0.1.0"},"paths":{"/apis/kyverno.io/v2beta1/cleanuppolicies":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"list objects of kind CleanupPolicy","operationId":"listKyvernoIoV2beta1CleanupPolicyForAllNamespaces","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicyList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicyList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"CleanupPolicy"}},"parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/clustercleanuppolicies":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"list objects of kind ClusterCleanupPolicy","operationId":"listKyvernoIoV2beta1ClusterCleanupPolicy","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicyList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicyList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterCleanupPolicy"}},"post":{"tags":["kyvernoIo_v2beta1"],"description":"create a ClusterCleanupPolicy","operationId":"createKyvernoIoV2beta1ClusterCleanupPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"post","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterCleanupPolicy"}},"delete":{"tags":["kyvernoIo_v2beta1"],"description":"delete collection of ClusterCleanupPolicy","operationId":"deleteKyvernoIoV2beta1CollectionClusterCleanupPolicy","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"deletecollection","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterCleanupPolicy"}},"parameters":[{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/clustercleanuppolicies/{name}":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"read the specified ClusterCleanupPolicy","operationId":"readKyvernoIoV2beta1ClusterCleanupPolicy","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterCleanupPolicy"}},"put":{"tags":["kyvernoIo_v2beta1"],"description":"replace the specified ClusterCleanupPolicy","operationId":"replaceKyvernoIoV2beta1ClusterCleanupPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterCleanupPolicy"}},"delete":{"tags":["kyvernoIo_v2beta1"],"description":"delete a ClusterCleanupPolicy","operationId":"deleteKyvernoIoV2beta1ClusterCleanupPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"gracePeriodSeconds","in":"query","description":"The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.","schema":{"type":"integer","uniqueItems":true}},{"name":"orphanDependents","in":"query","description":"Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.","schema":{"type":"boolean","uniqueItems":true}},{"name":"propagationPolicy","in":"query","description":"Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"delete","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterCleanupPolicy"}},"patch":{"tags":["kyvernoIo_v2beta1"],"description":"partially update the specified ClusterCleanupPolicy","operationId":"patchKyvernoIoV2beta1ClusterCleanupPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterCleanupPolicy"}},"parameters":[{"name":"name","in":"path","description":"name of the ClusterCleanupPolicy","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/clustercleanuppolicies/{name}/status":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"read status of the specified ClusterCleanupPolicy","operationId":"readKyvernoIoV2beta1ClusterCleanupPolicyStatus","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterCleanupPolicy"}},"put":{"tags":["kyvernoIo_v2beta1"],"description":"replace status of the specified ClusterCleanupPolicy","operationId":"replaceKyvernoIoV2beta1ClusterCleanupPolicyStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterCleanupPolicy"}},"patch":{"tags":["kyvernoIo_v2beta1"],"description":"partially update status of the specified ClusterCleanupPolicy","operationId":"patchKyvernoIoV2beta1ClusterCleanupPolicyStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterCleanupPolicy"}},"parameters":[{"name":"name","in":"path","description":"name of the ClusterCleanupPolicy","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/clusterpolicies":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"list objects of kind ClusterPolicy","operationId":"listKyvernoIoV2beta1ClusterPolicy","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicyList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicyList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterPolicy"}},"post":{"tags":["kyvernoIo_v2beta1"],"description":"create a ClusterPolicy","operationId":"createKyvernoIoV2beta1ClusterPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"post","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterPolicy"}},"delete":{"tags":["kyvernoIo_v2beta1"],"description":"delete collection of ClusterPolicy","operationId":"deleteKyvernoIoV2beta1CollectionClusterPolicy","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"deletecollection","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterPolicy"}},"parameters":[{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/clusterpolicies/{name}":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"read the specified ClusterPolicy","operationId":"readKyvernoIoV2beta1ClusterPolicy","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterPolicy"}},"put":{"tags":["kyvernoIo_v2beta1"],"description":"replace the specified ClusterPolicy","operationId":"replaceKyvernoIoV2beta1ClusterPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterPolicy"}},"delete":{"tags":["kyvernoIo_v2beta1"],"description":"delete a ClusterPolicy","operationId":"deleteKyvernoIoV2beta1ClusterPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"gracePeriodSeconds","in":"query","description":"The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.","schema":{"type":"integer","uniqueItems":true}},{"name":"orphanDependents","in":"query","description":"Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.","schema":{"type":"boolean","uniqueItems":true}},{"name":"propagationPolicy","in":"query","description":"Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"delete","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterPolicy"}},"patch":{"tags":["kyvernoIo_v2beta1"],"description":"partially update the specified ClusterPolicy","operationId":"patchKyvernoIoV2beta1ClusterPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterPolicy"}},"parameters":[{"name":"name","in":"path","description":"name of the ClusterPolicy","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/clusterpolicies/{name}/status":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"read status of the specified ClusterPolicy","operationId":"readKyvernoIoV2beta1ClusterPolicyStatus","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterPolicy"}},"put":{"tags":["kyvernoIo_v2beta1"],"description":"replace status of the specified ClusterPolicy","operationId":"replaceKyvernoIoV2beta1ClusterPolicyStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterPolicy"}},"patch":{"tags":["kyvernoIo_v2beta1"],"description":"partially update status of the specified ClusterPolicy","operationId":"patchKyvernoIoV2beta1ClusterPolicyStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"ClusterPolicy"}},"parameters":[{"name":"name","in":"path","description":"name of the ClusterPolicy","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/namespaces/{namespace}/cleanuppolicies":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"list objects of kind CleanupPolicy","operationId":"listKyvernoIoV2beta1NamespacedCleanupPolicy","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicyList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicyList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"CleanupPolicy"}},"post":{"tags":["kyvernoIo_v2beta1"],"description":"create a CleanupPolicy","operationId":"createKyvernoIoV2beta1NamespacedCleanupPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"post","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"CleanupPolicy"}},"delete":{"tags":["kyvernoIo_v2beta1"],"description":"delete collection of CleanupPolicy","operationId":"deleteKyvernoIoV2beta1CollectionNamespacedCleanupPolicy","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"deletecollection","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"CleanupPolicy"}},"parameters":[{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/namespaces/{namespace}/cleanuppolicies/{name}":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"read the specified CleanupPolicy","operationId":"readKyvernoIoV2beta1NamespacedCleanupPolicy","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"CleanupPolicy"}},"put":{"tags":["kyvernoIo_v2beta1"],"description":"replace the specified CleanupPolicy","operationId":"replaceKyvernoIoV2beta1NamespacedCleanupPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"CleanupPolicy"}},"delete":{"tags":["kyvernoIo_v2beta1"],"description":"delete a CleanupPolicy","operationId":"deleteKyvernoIoV2beta1NamespacedCleanupPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"gracePeriodSeconds","in":"query","description":"The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.","schema":{"type":"integer","uniqueItems":true}},{"name":"orphanDependents","in":"query","description":"Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.","schema":{"type":"boolean","uniqueItems":true}},{"name":"propagationPolicy","in":"query","description":"Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"delete","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"CleanupPolicy"}},"patch":{"tags":["kyvernoIo_v2beta1"],"description":"partially update the specified CleanupPolicy","operationId":"patchKyvernoIoV2beta1NamespacedCleanupPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"CleanupPolicy"}},"parameters":[{"name":"name","in":"path","description":"name of the CleanupPolicy","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/namespaces/{namespace}/cleanuppolicies/{name}/status":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"read status of the specified CleanupPolicy","operationId":"readKyvernoIoV2beta1NamespacedCleanupPolicyStatus","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"CleanupPolicy"}},"put":{"tags":["kyvernoIo_v2beta1"],"description":"replace status of the specified CleanupPolicy","operationId":"replaceKyvernoIoV2beta1NamespacedCleanupPolicyStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"CleanupPolicy"}},"patch":{"tags":["kyvernoIo_v2beta1"],"description":"partially update status of the specified CleanupPolicy","operationId":"patchKyvernoIoV2beta1NamespacedCleanupPolicyStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"CleanupPolicy"}},"parameters":[{"name":"name","in":"path","description":"name of the CleanupPolicy","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/namespaces/{namespace}/policies":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"list objects of kind Policy","operationId":"listKyvernoIoV2beta1NamespacedPolicy","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"Policy"}},"post":{"tags":["kyvernoIo_v2beta1"],"description":"create a Policy","operationId":"createKyvernoIoV2beta1NamespacedPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"post","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"Policy"}},"delete":{"tags":["kyvernoIo_v2beta1"],"description":"delete collection of Policy","operationId":"deleteKyvernoIoV2beta1CollectionNamespacedPolicy","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"deletecollection","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"Policy"}},"parameters":[{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/namespaces/{namespace}/policies/{name}":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"read the specified Policy","operationId":"readKyvernoIoV2beta1NamespacedPolicy","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"Policy"}},"put":{"tags":["kyvernoIo_v2beta1"],"description":"replace the specified Policy","operationId":"replaceKyvernoIoV2beta1NamespacedPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"Policy"}},"delete":{"tags":["kyvernoIo_v2beta1"],"description":"delete a Policy","operationId":"deleteKyvernoIoV2beta1NamespacedPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"gracePeriodSeconds","in":"query","description":"The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.","schema":{"type":"integer","uniqueItems":true}},{"name":"orphanDependents","in":"query","description":"Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.","schema":{"type":"boolean","uniqueItems":true}},{"name":"propagationPolicy","in":"query","description":"Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"delete","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"Policy"}},"patch":{"tags":["kyvernoIo_v2beta1"],"description":"partially update the specified Policy","operationId":"patchKyvernoIoV2beta1NamespacedPolicy","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"Policy"}},"parameters":[{"name":"name","in":"path","description":"name of the Policy","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/namespaces/{namespace}/policies/{name}/status":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"read status of the specified Policy","operationId":"readKyvernoIoV2beta1NamespacedPolicyStatus","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"Policy"}},"put":{"tags":["kyvernoIo_v2beta1"],"description":"replace status of the specified Policy","operationId":"replaceKyvernoIoV2beta1NamespacedPolicyStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"Policy"}},"patch":{"tags":["kyvernoIo_v2beta1"],"description":"partially update status of the specified Policy","operationId":"patchKyvernoIoV2beta1NamespacedPolicyStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"Policy"}},"parameters":[{"name":"name","in":"path","description":"name of the Policy","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/namespaces/{namespace}/policyexceptions":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"list objects of kind PolicyException","operationId":"listKyvernoIoV2beta1NamespacedPolicyException","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyExceptionList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyExceptionList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"PolicyException"}},"post":{"tags":["kyvernoIo_v2beta1"],"description":"create a PolicyException","operationId":"createKyvernoIoV2beta1NamespacedPolicyException","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"post","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"PolicyException"}},"delete":{"tags":["kyvernoIo_v2beta1"],"description":"delete collection of PolicyException","operationId":"deleteKyvernoIoV2beta1CollectionNamespacedPolicyException","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"deletecollection","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"PolicyException"}},"parameters":[{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/namespaces/{namespace}/policyexceptions/{name}":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"read the specified PolicyException","operationId":"readKyvernoIoV2beta1NamespacedPolicyException","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"PolicyException"}},"put":{"tags":["kyvernoIo_v2beta1"],"description":"replace the specified PolicyException","operationId":"replaceKyvernoIoV2beta1NamespacedPolicyException","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"PolicyException"}},"delete":{"tags":["kyvernoIo_v2beta1"],"description":"delete a PolicyException","operationId":"deleteKyvernoIoV2beta1NamespacedPolicyException","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"gracePeriodSeconds","in":"query","description":"The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.","schema":{"type":"integer","uniqueItems":true}},{"name":"orphanDependents","in":"query","description":"Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.","schema":{"type":"boolean","uniqueItems":true}},{"name":"propagationPolicy","in":"query","description":"Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"delete","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"PolicyException"}},"patch":{"tags":["kyvernoIo_v2beta1"],"description":"partially update the specified PolicyException","operationId":"patchKyvernoIoV2beta1NamespacedPolicyException","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}},"required":true},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"PolicyException"}},"parameters":[{"name":"name","in":"path","description":"name of the PolicyException","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/policies":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"list objects of kind Policy","operationId":"listKyvernoIoV2beta1PolicyForAllNamespaces","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"Policy"}},"parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}]},"/apis/kyverno.io/v2beta1/policyexceptions":{"get":{"tags":["kyvernoIo_v2beta1"],"description":"list objects of kind PolicyException","operationId":"listKyvernoIoV2beta1PolicyExceptionForAllNamespaces","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyExceptionList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyExceptionList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"kyverno.io","version":"v2beta1","kind":"PolicyException"}},"parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}]}},"components":{"schemas":{"io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions":{"description":"DeleteOptions may be provided when deleting an API object.","type":"object","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"dryRun":{"description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","type":"array","items":{"type":"string","default":""},"x-kubernetes-list-type":"atomic"},"gracePeriodSeconds":{"description":"The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.","type":"integer","format":"int64"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"orphanDependents":{"description":"Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.","type":"boolean"},"preconditions":{"description":"Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"}]},"propagationPolicy":{"description":"Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.","type":"string"}},"x-kubernetes-group-version-kind":[{"group":"","kind":"DeleteOptions","version":"v1"},{"group":"admissionregistration.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"admissionregistration.k8s.io","kind":"DeleteOptions","version":"v1alpha1"},{"group":"admissionregistration.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"apps","kind":"DeleteOptions","version":"v1"},{"group":"apps","kind":"DeleteOptions","version":"v1beta1"},{"group":"apps","kind":"DeleteOptions","version":"v1beta2"},{"group":"authentication.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"authentication.k8s.io","kind":"DeleteOptions","version":"v1alpha1"},{"group":"authentication.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"authorization.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"authorization.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"autoscaling","kind":"DeleteOptions","version":"v1"},{"group":"autoscaling","kind":"DeleteOptions","version":"v2"},{"group":"autoscaling","kind":"DeleteOptions","version":"v2beta1"},{"group":"autoscaling","kind":"DeleteOptions","version":"v2beta2"},{"group":"batch","kind":"DeleteOptions","version":"v1"},{"group":"batch","kind":"DeleteOptions","version":"v1beta1"},{"group":"certificates.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"certificates.k8s.io","kind":"DeleteOptions","version":"v1alpha1"},{"group":"certificates.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"coordination.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"coordination.k8s.io","kind":"DeleteOptions","version":"v1alpha1"},{"group":"coordination.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"discovery.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"discovery.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"events.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"events.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"extensions","kind":"DeleteOptions","version":"v1beta1"},{"group":"flowcontrol.apiserver.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"flowcontrol.apiserver.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"flowcontrol.apiserver.k8s.io","kind":"DeleteOptions","version":"v1beta2"},{"group":"flowcontrol.apiserver.k8s.io","kind":"DeleteOptions","version":"v1beta3"},{"group":"internal.apiserver.k8s.io","kind":"DeleteOptions","version":"v1alpha1"},{"group":"networking.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"networking.k8s.io","kind":"DeleteOptions","version":"v1alpha1"},{"group":"networking.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"node.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"node.k8s.io","kind":"DeleteOptions","version":"v1alpha1"},{"group":"node.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"policy","kind":"DeleteOptions","version":"v1"},{"group":"policy","kind":"DeleteOptions","version":"v1beta1"},{"group":"rbac.authorization.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"rbac.authorization.k8s.io","kind":"DeleteOptions","version":"v1alpha1"},{"group":"rbac.authorization.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"resource.k8s.io","kind":"DeleteOptions","version":"v1alpha3"},{"group":"scheduling.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"scheduling.k8s.io","kind":"DeleteOptions","version":"v1alpha1"},{"group":"scheduling.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"storage.k8s.io","kind":"DeleteOptions","version":"v1"},{"group":"storage.k8s.io","kind":"DeleteOptions","version":"v1alpha1"},{"group":"storage.k8s.io","kind":"DeleteOptions","version":"v1beta1"},{"group":"storagemigration.k8s.io","kind":"DeleteOptions","version":"v1alpha1"}]},"io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1":{"description":"FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map 'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item 'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list 'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff","type":"object"},"io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta":{"description":"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.","type":"object","properties":{"continue":{"description":"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.","type":"string"},"remainingItemCount":{"description":"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.","type":"integer","format":"int64"},"resourceVersion":{"description":"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency","type":"string"},"selfLink":{"description":"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.","type":"string"}}},"io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry":{"description":"ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.","type":"object","properties":{"apiVersion":{"description":"APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.","type":"string"},"fieldsType":{"description":"FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"","type":"string"},"fieldsV1":{"description":"FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"}]},"manager":{"description":"Manager is an identifier of the workflow managing these fields.","type":"string"},"operation":{"description":"Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.","type":"string"},"subresource":{"description":"Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.","type":"string"},"time":{"description":"Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"}]}}},"io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta":{"description":"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.","type":"object","properties":{"annotations":{"description":"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations","type":"object","additionalProperties":{"type":"string","default":""}},"creationTimestamp":{"description":"CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"}]},"deletionGracePeriodSeconds":{"description":"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.","type":"integer","format":"int64"},"deletionTimestamp":{"description":"DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"}]},"finalizers":{"description":"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.","type":"array","items":{"type":"string","default":""},"x-kubernetes-list-type":"set","x-kubernetes-patch-strategy":"merge"},"generateName":{"description":"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency","type":"string"},"generation":{"description":"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.","type":"integer","format":"int64"},"labels":{"description":"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels","type":"object","additionalProperties":{"type":"string","default":""}},"managedFields":{"description":"ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.","type":"array","items":{"default":{},"allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"}]},"x-kubernetes-list-type":"atomic"},"name":{"description":"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names","type":"string"},"namespace":{"description":"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces","type":"string"},"ownerReferences":{"description":"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.","type":"array","items":{"default":{},"allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"}]},"x-kubernetes-list-map-keys":["uid"],"x-kubernetes-list-type":"map","x-kubernetes-patch-merge-key":"uid","x-kubernetes-patch-strategy":"merge"},"resourceVersion":{"description":"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency","type":"string"},"selfLink":{"description":"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.","type":"string"},"uid":{"description":"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids","type":"string"}}},"io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference":{"description":"OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.","type":"object","required":["apiVersion","kind","name","uid"],"properties":{"apiVersion":{"description":"API version of the referent.","type":"string","default":""},"blockOwnerDeletion":{"description":"If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.","type":"boolean"},"controller":{"description":"If true, this reference points to the managing controller.","type":"boolean"},"kind":{"description":"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string","default":""},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names","type":"string","default":""},"uid":{"description":"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids","type":"string","default":""}},"x-kubernetes-map-type":"atomic"},"io.k8s.apimachinery.pkg.apis.meta.v1.Patch":{"description":"Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.","type":"object"},"io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions":{"description":"Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.","type":"object","properties":{"resourceVersion":{"description":"Specifies the target ResourceVersion","type":"string"},"uid":{"description":"Specifies the target UID.","type":"string"}}},"io.k8s.apimachinery.pkg.apis.meta.v1.Status":{"description":"Status is a return value for calls that don't return other objects.","type":"object","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"code":{"description":"Suggested HTTP return code for this status, 0 if not set.","type":"integer","format":"int32"},"details":{"description":"Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"}],"x-kubernetes-list-type":"atomic"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"message":{"description":"A human-readable description of the status of this operation.","type":"string"},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","default":{},"allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"}]},"reason":{"description":"A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.","type":"string"},"status":{"description":"Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status","type":"string"}},"x-kubernetes-group-version-kind":[{"group":"","kind":"Status","version":"v1"}]},"io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause":{"description":"StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.","type":"object","properties":{"field":{"description":"The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"","type":"string"},"message":{"description":"A human-readable description of the cause of the error.  This field may be presented as-is to a reader.","type":"string"},"reason":{"description":"A machine-readable description of the cause of the error. If this value is empty there is no information available.","type":"string"}}},"io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails":{"description":"StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.","type":"object","properties":{"causes":{"description":"The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.","type":"array","items":{"default":{},"allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"}]},"x-kubernetes-list-type":"atomic"},"group":{"description":"The group attribute of the resource associated with the status StatusReason.","type":"string"},"kind":{"description":"The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"name":{"description":"The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).","type":"string"},"retryAfterSeconds":{"description":"If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.","type":"integer","format":"int32"},"uid":{"description":"UID of the resource. (when there is a single resource which can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids","type":"string"}}},"io.k8s.apimachinery.pkg.apis.meta.v1.Time":{"description":"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.","type":"string","format":"date-time"},"io.kyverno.v2beta1.CleanupPolicy":{"description":"CleanupPolicy defines a rule for resource cleanup.","type":"object","required":["spec"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"}]},"spec":{"description":"Spec declares policy behaviors.","type":"object","required":["match","schedule"],"properties":{"conditions":{"description":"Conditions defines the conditions used to select the resources which will be cleaned up.","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}}},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"exclude":{"description":"ExcludeResources defines when cleanuppolicy should not be applied. The exclude\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the name or role.","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}}}},"match":{"description":"MatchResources defines when cleanuppolicy should be applied. The match\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the user name or role.\nAt least one kind is required.","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}}}},"schedule":{"description":"The schedule in Cron format","type":"string"}}},"status":{"description":"Status contains policy runtime data.","type":"object","properties":{"conditions":{"type":"array","items":{"description":"Condition contains details for one aspect of the current state of this API Resource.","type":"object","required":["lastTransitionTime","message","reason","status","type"],"properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","type":"string","format":"date-time"},"message":{"description":"message is a human readable message indicating details about the transition.\nThis may be an empty string.","type":"string","maxLength":32768},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.","type":"integer","format":"int64","minimum":0},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.","type":"string","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"},"status":{"description":"status of the condition, one of True, False, Unknown.","type":"string","enum":["True","False","Unknown"]},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase.","type":"string","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"}}}},"lastExecutionTime":{"type":"string","format":"date-time"}}}},"x-kubernetes-group-version-kind":[{"group":"kyverno.io","kind":"CleanupPolicy","version":"v2beta1"}],"x-kubernetes-selectable-fields":[]},"io.kyverno.v2beta1.CleanupPolicyList":{"description":"CleanupPolicyList is a list of CleanupPolicy","type":"object","required":["items"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of cleanuppolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md","type":"array","items":{"$ref":"#/components/schemas/io.kyverno.v2beta1.CleanupPolicy"}},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"}]}},"x-kubernetes-group-version-kind":[{"group":"kyverno.io","kind":"CleanupPolicyList","version":"v2beta1"}],"x-kubernetes-selectable-fields":[]},"io.kyverno.v2beta1.ClusterCleanupPolicy":{"description":"ClusterCleanupPolicy defines rule for resource cleanup.","type":"object","required":["spec"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"}]},"spec":{"description":"Spec declares policy behaviors.","type":"object","required":["match","schedule"],"properties":{"conditions":{"description":"Conditions defines the conditions used to select the resources which will be cleaned up.","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}}},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"exclude":{"description":"ExcludeResources defines when cleanuppolicy should not be applied. The exclude\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the name or role.","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}}}},"match":{"description":"MatchResources defines when cleanuppolicy should be applied. The match\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the user name or role.\nAt least one kind is required.","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}}}},"schedule":{"description":"The schedule in Cron format","type":"string"}}},"status":{"description":"Status contains policy runtime data.","type":"object","properties":{"conditions":{"type":"array","items":{"description":"Condition contains details for one aspect of the current state of this API Resource.","type":"object","required":["lastTransitionTime","message","reason","status","type"],"properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","type":"string","format":"date-time"},"message":{"description":"message is a human readable message indicating details about the transition.\nThis may be an empty string.","type":"string","maxLength":32768},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.","type":"integer","format":"int64","minimum":0},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.","type":"string","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"},"status":{"description":"status of the condition, one of True, False, Unknown.","type":"string","enum":["True","False","Unknown"]},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase.","type":"string","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"}}}},"lastExecutionTime":{"type":"string","format":"date-time"}}}},"x-kubernetes-group-version-kind":[{"group":"kyverno.io","kind":"ClusterCleanupPolicy","version":"v2beta1"}],"x-kubernetes-selectable-fields":[]},"io.kyverno.v2beta1.ClusterCleanupPolicyList":{"description":"ClusterCleanupPolicyList is a list of ClusterCleanupPolicy","type":"object","required":["items"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of clustercleanuppolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md","type":"array","items":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterCleanupPolicy"}},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"}]}},"x-kubernetes-group-version-kind":[{"group":"kyverno.io","kind":"ClusterCleanupPolicyList","version":"v2beta1"}],"x-kubernetes-selectable-fields":[]},"io.kyverno.v2beta1.ClusterPolicy":{"description":"ClusterPolicy declares validation, mutation, and generation behaviors for matching resources.","type":"object","required":["spec"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"}]},"spec":{"description":"Spec declares policy behaviors.","type":"object","properties":{"admission":{"description":"Admission controls if rules are applied during admission.\nOptional. Default value is \"true\".","type":"boolean","default":true},"applyRules":{"description":"ApplyRules controls how rules in a policy are applied. Rule are processed in\nthe order of declaration. When set to `One` processing stops after a rule has\nbeen applied i.e. the rule matches and results in a pass, fail, or error. When\nset to `All` all rules in the policy are processed. The default is `All`.","type":"string","enum":["All","One"]},"background":{"description":"Background controls if rules are applied to existing resources during a background scan.\nOptional. Default value is \"true\". The value must be set to \"false\" if the policy rule\nuses variables that are only available in the admission review request (e.g. user name).","type":"boolean","default":true},"failurePolicy":{"description":"Deprecated, use failurePolicy under the webhookConfiguration instead.","type":"string","enum":["Ignore","Fail"]},"generateExisting":{"description":"Deprecated, use generateExisting under the generate rule instead","type":"boolean"},"generateExistingOnPolicyUpdate":{"description":"Deprecated, use generateExisting instead","type":"boolean"},"mutateExistingOnPolicyUpdate":{"description":"Deprecated, use mutateExistingOnPolicyUpdate under the mutate rule instead","type":"boolean"},"rules":{"description":"Rules is a list of Rule instances. A Policy contains multiple rules and\neach rule can validate, mutate, or generate resources.","type":"array","items":{"description":"Rule defines a validation, mutation, or generation control for matching resources.\nEach rules contains a match declaration to select resources, and an optional exclude\ndeclaration to specify which resources to exclude.","type":"object","required":["match","name"],"properties":{"celPreconditions":{"description":"CELPreconditions are used to determine if a policy rule should be applied by evaluating a\nset of CEL conditions. It can only be used with the validate.cel subrule","type":"array","items":{"description":"MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.","type":"object","required":["expression","name"],"properties":{"expression":{"description":"Expression represents the expression which will be evaluated by CEL. Must evaluate to bool.\nCEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests.\n'oldObject' - The existing object. The value is null for CREATE requests.\n'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest).\n'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.","type":"string"},"name":{"description":"Name is an identifier for this match condition, used for strategic merging of MatchConditions,\nas well as providing an identifier for logging purposes. A good name should be descriptive of\nthe associated expression.\nName must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and\nmust start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or\n'123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an\noptional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.","type":"string"}}}},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"exclude":{"description":"ExcludeResources defines when this policy rule should not be applied. The exclude\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the name or role.","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}}}},"generate":{"description":"Generation is used to create new resources.","type":"object","properties":{"apiVersion":{"description":"APIVersion specifies resource apiVersion.","type":"string"},"clone":{"description":"Clone specifies the source resource used to populate each generated resource.\nAt most one of Data or Clone can be specified. If neither are provided, the generated\nresource will be created with default data only.","type":"object","properties":{"name":{"description":"Name specifies name of the resource.","type":"string"},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"}}},"cloneList":{"description":"CloneList specifies the list of source resource used to populate each generated resource.","type":"object","properties":{"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels`.\nwildcard characters are not supported.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"data":{"description":"Data provides the resource declaration used to populate each generated resource.\nAt most one of Data or Clone must be specified. If neither are provided, the generated\nresource will be created with default data only.","x-kubernetes-preserve-unknown-fields":true},"foreach":{"description":"ForEach applies generate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"array","items":{"type":"object","properties":{"apiVersion":{"description":"APIVersion specifies resource apiVersion.","type":"string"},"clone":{"description":"Clone specifies the source resource used to populate each generated resource.\nAt most one of Data or Clone can be specified. If neither are provided, the generated\nresource will be created with default data only.","type":"object","properties":{"name":{"description":"Name specifies name of the resource.","type":"string"},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"}}},"cloneList":{"description":"CloneList specifies the list of source resource used to populate each generated resource.","type":"object","properties":{"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels`.\nwildcard characters are not supported.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"data":{"description":"Data provides the resource declaration used to populate each generated resource.\nAt most one of Data or Clone must be specified. If neither are provided, the generated\nresource will be created with default data only.","x-kubernetes-preserve-unknown-fields":true},"kind":{"description":"Kind specifies resource kind.","type":"string"},"list":{"description":"List specifies a JMESPath expression that results in one or more elements\nto which the validation logic is applied.","type":"string"},"name":{"description":"Name specifies the resource name.","type":"string"},"namespace":{"description":"Namespace specifies resource namespace.","type":"string"},"preconditions":{"description":"AnyAllConditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}},"x-kubernetes-preserve-unknown-fields":true},"uid":{"description":"UID specifies the resource uid.","type":"string"}}}},"generateExisting":{"description":"GenerateExisting controls whether to trigger the rule in existing resources\nIf is set to \"true\" the rule will be triggered and applied to existing matched resources.","type":"boolean"},"kind":{"description":"Kind specifies resource kind.","type":"string"},"name":{"description":"Name specifies the resource name.","type":"string"},"namespace":{"description":"Namespace specifies resource namespace.","type":"string"},"orphanDownstreamOnPolicyDelete":{"description":"OrphanDownstreamOnPolicyDelete controls whether generated resources should be deleted when the rule that generated\nthem is deleted with synchronization enabled. This option is only applicable to generate rules of the data type.\nSee https://kyverno.io/docs/writing-policies/generate/#data-examples.\nDefaults to \"false\" if not specified.","type":"boolean"},"synchronize":{"description":"Synchronize controls if generated resources should be kept in-sync with their source resource.\nIf Synchronize is set to \"true\" changes to generated resources will be overwritten with resource\ndata from Data or the resource specified in the Clone declaration.\nOptional. Defaults to \"false\" if not specified.","type":"boolean"},"uid":{"description":"UID specifies the resource uid.","type":"string"}}},"imageExtractors":{"description":"ImageExtractors defines a mapping from kinds to ImageExtractorConfigs.\nThis config is only valid for verifyImages rules.","type":"object","additionalProperties":{"type":"array","items":{"type":"object","required":["path"],"properties":{"jmesPath":{"description":"JMESPath is an optional JMESPath expression to apply to the image value.\nThis is useful when the extracted image begins with a prefix like 'docker://'.\nThe 'trim_prefix' function may be used to trim the prefix: trim_prefix(@, 'docker://').\nNote - Image digest mutation may not be used when applying a JMESPAth to an image.","type":"string"},"key":{"description":"Key is an optional name of the field within 'path' that will be used to uniquely identify an image.\nNote - this field MUST be unique.","type":"string"},"name":{"description":"Name is the entry the image will be available under 'images.\u003cname\u003e' in the context.\nIf this field is not defined, image entries will appear under 'images.custom'.","type":"string"},"path":{"description":"Path is the path to the object containing the image field in a custom resource.\nIt should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'.\nWildcard keys are expanded in case of arrays or objects.","type":"string"},"value":{"description":"Value is an optional name of the field within 'path' that points to the image URI.\nThis is useful when a custom 'key' is also defined.","type":"string"}}}}},"match":{"description":"MatchResources defines when this policy rule should be applied. The match\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the user name or role.\nAt least one kind is required.","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}}}},"mutate":{"description":"Mutation is used to modify matching resources.","type":"object","properties":{"foreach":{"description":"ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"array","items":{"description":"ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"object","properties":{"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"foreach":{"description":"Foreach declares a nested foreach iterator","x-kubernetes-preserve-unknown-fields":true},"list":{"description":"List specifies a JMESPath expression that results in one or more elements\nto which the validation logic is applied.","type":"string"},"order":{"description":"Order defines the iteration order on the list.\nCan be Ascending to iterate from first to last element or Descending to iterate in from last to first element.","type":"string","enum":["Ascending","Descending"]},"patchStrategicMerge":{"description":"PatchStrategicMerge is a strategic merge patch used to modify resources.\nSee https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/\nand https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.","x-kubernetes-preserve-unknown-fields":true},"patchesJson6902":{"description":"PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources.\nSee https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.","type":"string"},"preconditions":{"description":"AnyAllConditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}},"x-kubernetes-preserve-unknown-fields":true}}}},"mutateExistingOnPolicyUpdate":{"description":"MutateExistingOnPolicyUpdate controls if the mutateExisting rule will be applied on policy events.","type":"boolean"},"patchStrategicMerge":{"description":"PatchStrategicMerge is a strategic merge patch used to modify resources.\nSee https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/\nand https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.","x-kubernetes-preserve-unknown-fields":true},"patchesJson6902":{"description":"PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources.\nSee https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.","type":"string"},"targets":{"description":"Targets defines the target resources to be mutated.","type":"array","items":{"description":"TargetResourceSpec defines targets for mutating existing resources.","type":"object","properties":{"apiVersion":{"description":"APIVersion specifies resource apiVersion.","type":"string"},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"kind":{"description":"Kind specifies resource kind.","type":"string"},"name":{"description":"Name specifies the resource name.","type":"string"},"namespace":{"description":"Namespace specifies resource namespace.","type":"string"},"preconditions":{"description":"Preconditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements. A direct list\nof conditions (without `any` or `all` statements is supported for backwards compatibility but\nwill be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","x-kubernetes-preserve-unknown-fields":true},"selector":{"description":"Selector allows you to select target resources with their labels.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"uid":{"description":"UID specifies the resource uid.","type":"string"}}}}}},"name":{"description":"Name is a label to identify the rule, It must be unique within the policy.","type":"string","maxLength":63},"preconditions":{"description":"Preconditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}}},"skipBackgroundRequests":{"description":"SkipBackgroundRequests bypasses admission requests that are sent by the background controller.\nThe default value is set to \"true\", it must be set to \"false\" to apply\ngenerate and mutateExisting rules to those requests.","type":"boolean","default":true},"validate":{"description":"Validation is used to validate matching resources.","type":"object","properties":{"anyPattern":{"description":"AnyPattern specifies list of validation patterns. At least one of the patterns\nmust be satisfied for the validation rule to succeed.","x-kubernetes-preserve-unknown-fields":true},"assert":{"description":"Assert defines a kyverno-json assertion tree.","type":"object","x-kubernetes-preserve-unknown-fields":true},"cel":{"description":"CEL allows validation checks using the Common Expression Language (https://kubernetes.io/docs/reference/using-api/cel/).","type":"object","properties":{"auditAnnotations":{"description":"AuditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request.","type":"array","items":{"description":"AuditAnnotation describes how to produce an audit annotation for an API request.","type":"object","required":["key","valueExpression"],"properties":{"key":{"description":"key specifies the audit annotation key. The audit annotation keys of\na ValidatingAdmissionPolicy must be unique. The key must be a qualified\nname ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.\n\nThe key is combined with the resource name of the\nValidatingAdmissionPolicy to construct an audit annotation key:\n\"{ValidatingAdmissionPolicy name}/{key}\".\n\nIf an admission webhook uses the same resource name as this ValidatingAdmissionPolicy\nand the same audit annotation key, the annotation key will be identical.\nIn this case, the first annotation written with the key will be included\nin the audit event and all subsequent annotations with the same key\nwill be discarded.\n\nRequired.","type":"string"},"valueExpression":{"description":"valueExpression represents the expression which is evaluated by CEL to\nproduce an audit annotation value. The expression must evaluate to either\na string or null value. If the expression evaluates to a string, the\naudit annotation is included with the string value. If the expression\nevaluates to null or empty string the audit annotation will be omitted.\nThe valueExpression may be no longer than 5kb in length.\nIf the result of the valueExpression is more than 10kb in length, it\nwill be truncated to 10kb.\n\nIf multiple ValidatingAdmissionPolicyBinding resources match an\nAPI request, then the valueExpression will be evaluated for\neach binding. All unique values produced by the valueExpressions\nwill be joined together in a comma-separated list.\n\nRequired.","type":"string"}}}},"expressions":{"description":"Expressions is a list of CELExpression types.","type":"array","items":{"description":"Validation specifies the CEL expression which is used to apply the validation.","type":"object","required":["expression"],"properties":{"expression":{"description":"Expression represents the expression which will be evaluated by CEL.\nref: https://github.com/google/cel-spec\nCEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables:\n\n- 'object' - The object from the incoming request. The value is null for DELETE requests.\n- 'oldObject' - The existing object. The value is null for CREATE requests.\n- 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)).\n- 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind.\n- 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources.\n- 'variables' - Map of composited variables, from its name to its lazily evaluated value.\n  For example, a variable named 'foo' can be accessed as 'variables.foo'.\n- 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n- 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the\nobject. No other metadata properties are accessible.\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible.\nAccessible property names are escaped according to the following rules when accessed in the expression:\n- '__' escapes to '__underscores__'\n- '.' escapes to '__dot__'\n- '-' escapes to '__dash__'\n- '/' escapes to '__slash__'\n- Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ \u003e 0\"}\n  - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop \u003e 0\"}\n  - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d \u003e 0\"}\n\nEquality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1].\nConcatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n  - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\n    non-intersecting elements in `Y` are appended, retaining their partial order.\n  - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\n    are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\n    non-intersecting keys are appended, retaining their partial order.\nRequired.","type":"string"},"message":{"description":"Message represents the message displayed when validation fails. The message is required if the Expression contains\nline breaks. The message must not contain line breaks.\nIf unset, the message is \"failed rule: {Rule}\".\ne.g. \"must be a URL with the host matching spec.host\"\nIf the Expression contains line breaks. Message is required.\nThe message must not contain line breaks.\nIf unset, the message is \"failed Expression: {Expression}\".","type":"string"},"messageExpression":{"description":"messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails.\nSince messageExpression is used as a failure message, it must evaluate to a string.\nIf both message and messageExpression are present on a validation, then messageExpression will be used if validation fails.\nIf messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced\nas if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string\nthat contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and\nthe fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged.\nmessageExpression has access to all the same variables as the `expression` except for 'authorizer' and 'authorizer.requestResource'.\nExample:\n\"object.x must be less than max (\"+string(params.max)+\")\"","type":"string"},"reason":{"description":"Reason represents a machine-readable description of why this validation failed.\nIf this is the first validation in the list to fail, this reason, as well as the\ncorresponding HTTP response code, are used in the\nHTTP response to the client.\nThe currently supported reasons are: \"Unauthorized\", \"Forbidden\", \"Invalid\", \"RequestEntityTooLarge\".\nIf not set, StatusReasonInvalid is used in the response to the client.","type":"string"}}}},"paramKind":{"description":"ParamKind is a tuple of Group Kind and Version.","type":"object","properties":{"apiVersion":{"description":"APIVersion is the API group version the resources belong to.\nIn format of \"group/version\".\nRequired.","type":"string"},"kind":{"description":"Kind is the API kind the resources belong to.\nRequired.","type":"string"}},"x-kubernetes-map-type":"atomic"},"paramRef":{"description":"ParamRef references a parameter resource.","type":"object","properties":{"name":{"description":"name is the name of the resource being referenced.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are\nmutually exclusive properties. If one is set, the other must be unset.\n\nA single parameter used for all admission requests can be configured\nby setting the `name` field, leaving `selector` blank, and setting namespace\nif `paramKind` is namespace-scoped.","type":"string"},"namespace":{"description":"namespace is the namespace of the referenced resource. Allows limiting\nthe search for params to a specific namespace. Applies to both `name` and\n`selector` fields.\n\nA per-namespace parameter may be used by specifying a namespace-scoped\n`paramKind` in the policy and leaving this field empty.\n\n- If `paramKind` is cluster-scoped, this field MUST be unset. Setting this\nfield results in a configuration error.\n\n- If `paramKind` is namespace-scoped, the namespace of the object being\nevaluated for admission will be used when this field is left unset. Take\ncare that if this is left empty the binding must not match any cluster-scoped\nresources, which will result in an error.","type":"string"},"parameterNotFoundAction":{"description":"`parameterNotFoundAction` controls the behavior of the binding when the resource\nexists, and name or selector is valid, but there are no parameters\nmatched by the binding. If the value is set to `Allow`, then no\nmatched parameters will be treated as successful validation by the binding.\nIf set to `Deny`, then no matched parameters will be subject to the\n`failurePolicy` of the policy.\n\nAllowed values are `Allow` or `Deny`\n\nRequired","type":"string"},"selector":{"description":"selector can be used to match multiple param objects based on their labels.\nSupply selector: {} to match all resources of the ParamKind.\n\nIf multiple params are found, they are all evaluated with the policy expressions\nand the results are ANDed together.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are\nmutually exclusive properties. If one is set, the other must be unset.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}},"x-kubernetes-map-type":"atomic"},"variables":{"description":"Variables contain definitions of variables that can be used in composition of other expressions.\nEach variable is defined as a named CEL expression.\nThe variables defined here will be available under `variables` in other expressions of the policy.","type":"array","items":{"description":"Variable is the definition of a variable that is used for composition. A variable is defined as a named expression.","type":"object","required":["expression","name"],"properties":{"expression":{"description":"Expression is the expression that will be evaluated as the value of the variable.\nThe CEL expression has access to the same identifiers as the CEL expressions in Validation.","type":"string"},"name":{"description":"Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables.\nThe variable can be accessed in other expressions through `variables`\nFor example, if name is \"foo\", the variable will be available as `variables.foo`","type":"string"}},"x-kubernetes-map-type":"atomic"}}}},"deny":{"description":"Deny defines conditions used to pass or fail a validation rule.","type":"object","properties":{"conditions":{"description":"Multiple conditions can be declared under an `any` or `all` statement.\nSee: https://kyverno.io/docs/writing-policies/validate/#deny-rules","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}}}}},"failureAction":{"description":"FailureAction defines if a validation policy rule violation should block\nthe admission review request (Enforce), or allow (Audit) the admission review request\nand report an error in a policy report. Optional.\nAllowed values are Audit or Enforce.","type":"string","enum":["Audit","Enforce"]},"failureActionOverrides":{"description":"FailureActionOverrides is a Cluster Policy attribute that specifies FailureAction\nnamespace-wise. It overrides FailureAction for the specified namespaces.","type":"array","items":{"type":"object","properties":{"action":{"description":"ValidationFailureAction defines the policy validation failure action","type":"string","enum":["audit","enforce","Audit","Enforce"]},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"type":"array","items":{"type":"string"}}}}},"foreach":{"description":"ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"array","items":{"description":"ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"object","properties":{"anyPattern":{"description":"AnyPattern specifies list of validation patterns. At least one of the patterns\nmust be satisfied for the validation rule to succeed.","x-kubernetes-preserve-unknown-fields":true},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"deny":{"description":"Deny defines conditions used to pass or fail a validation rule.","type":"object","properties":{"conditions":{"description":"Multiple conditions can be declared under an `any` or `all` statement. A direct list\nof conditions (without `any` or `all` statements) is also supported for backwards compatibility\nbut will be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/validate/#deny-rules","x-kubernetes-preserve-unknown-fields":true}}},"elementScope":{"description":"ElementScope specifies whether to use the current list element as the scope for validation. Defaults to \"true\" if not specified.\nWhen set to \"false\", \"request.object\" is used as the validation scope within the foreach\nblock to allow referencing other elements in the subtree.","type":"boolean"},"foreach":{"description":"Foreach declares a nested foreach iterator","x-kubernetes-preserve-unknown-fields":true},"list":{"description":"List specifies a JMESPath expression that results in one or more elements\nto which the validation logic is applied.","type":"string"},"pattern":{"description":"Pattern specifies an overlay-style pattern used to check resources.","x-kubernetes-preserve-unknown-fields":true},"preconditions":{"description":"AnyAllConditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}},"x-kubernetes-preserve-unknown-fields":true}}}},"manifests":{"description":"Manifest specifies conditions for manifest verification","type":"object","properties":{"annotationDomain":{"description":"AnnotationDomain is custom domain of annotation for message and signature. Default is \"cosign.sigstore.dev\".","type":"string"},"attestors":{"description":"Attestors specified the required attestors (i.e. authorities)","type":"array","items":{"type":"object","properties":{"count":{"description":"Count specifies the required number of entries that must match. If the count is null, all entries must match\n(a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a\nvalue N, then N must be less than or equal to the size of entries, and at least N entries must match.","type":"integer","minimum":1},"entries":{"description":"Entries contains the available attestors. An attestor can be a static key,\nattributes for keyless verification, or a nested attestor declaration.","type":"array","items":{"type":"object","properties":{"annotations":{"description":"Annotations are used for image verification.\nEvery specified key-value pair must exist and match in the verified payload.\nThe payload may contain other key-value pairs.","type":"object","additionalProperties":{"type":"string"}},"attestor":{"description":"Attestor is a nested set of Attestor used to specify a more complex set of match authorities.","x-kubernetes-preserve-unknown-fields":true},"certificates":{"description":"Certificates specifies one or more certificates.","type":"object","properties":{"cert":{"description":"Cert is an optional PEM-encoded public certificate.","type":"string"},"certChain":{"description":"CertChain is an optional PEM encoded set of certificates used to verify.","type":"string"},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}}}},"keyless":{"description":"Keyless is a set of attribute used to verify a Sigstore keyless attestor.\nSee https://github.com/sigstore/cosign/blob/main/KEYLESS.md.","type":"object","properties":{"additionalExtensions":{"description":"AdditionalExtensions are certificate-extensions used for keyless signing.","type":"object","additionalProperties":{"type":"string"}},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"issuer":{"description":"Issuer is the certificate issuer used for keyless signing.","type":"string"},"issuerRegExp":{"description":"IssuerRegExp is the regular expression to match certificate issuer used for keyless signing.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"roots":{"description":"Roots is an optional set of PEM encoded trusted root certificates.\nIf not provided, the system roots are used.","type":"string"},"subject":{"description":"Subject is the verified identity used for keyless signing, for example the email address.","type":"string"},"subjectRegExp":{"description":"SubjectRegExp is the regular expression to match identity used for keyless signing, for example the email address.","type":"string"}}},"keys":{"description":"Keys specifies one or more public keys.","type":"object","properties":{"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"kms":{"description":"KMS provides the URI to the public key stored in a Key Management System. See:\nhttps://github.com/sigstore/cosign/blob/main/KMS.md","type":"string"},"publicKeys":{"description":"Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly\nspecified or can be a variable reference to a key specified in a ConfigMap (see\nhttps://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret\nelsewhere in the cluster by specifying it in the format \"k8s://\u003cnamespace\u003e/\u003csecret_name\u003e\".\nThe named Secret must specify a key `cosign.pub` containing the public key used for\nverification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret).\nWhen multiple keys are specified each key is processed as a separate staticKey entry\n(.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"secret":{"description":"Reference to a Secret resource that contains a public key","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret. The provided secret must contain a key named cosign.pub.","type":"string"},"namespace":{"description":"Namespace name where the Secret exists.","type":"string"}}},"signatureAlgorithm":{"description":"Deprecated. Use attestor.signatureAlgorithm instead.","type":"string","default":"sha256"}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule.\nIf specified Repository will override other OCI image repository locations for this Attestor.","type":"string"},"signatureAlgorithm":{"description":"Specify signature algorithm for public keys. Supported values are sha224, sha256, sha384 and sha512.","type":"string","default":"sha256"}}}}}}},"dryRun":{"description":"DryRun configuration","type":"object","properties":{"enable":{"type":"boolean"},"namespace":{"type":"string"}}},"ignoreFields":{"description":"Fields which will be ignored while comparing manifests.","type":"array","items":{"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"}},"objects":{"type":"array","items":{"type":"object","properties":{"group":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"},"namespace":{"type":"string"},"version":{"type":"string"}}}}}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for resource bundle reference.\nThe repository can be overridden per Attestor or Attestation.","type":"string"}}},"message":{"description":"Message specifies a custom message to be displayed on failure.","type":"string"},"pattern":{"description":"Pattern specifies an overlay-style pattern used to check resources.","x-kubernetes-preserve-unknown-fields":true},"podSecurity":{"description":"PodSecurity applies exemptions for Kubernetes Pod Security admission\nby specifying exclusions for Pod Security Standards controls.","type":"object","properties":{"exclude":{"description":"Exclude specifies the Pod Security Standard controls to be excluded.","type":"array","items":{"description":"PodSecurityStandard specifies the Pod Security Standard controls to be excluded.","type":"object","required":["controlName"],"properties":{"controlName":{"description":"ControlName specifies the name of the Pod Security Standard control.\nSee: https://kubernetes.io/docs/concepts/security/pod-security-standards/","type":"string","enum":["HostProcess","Host Namespaces","Privileged Containers","Capabilities","HostPath Volumes","Host Ports","AppArmor","SELinux","/proc Mount Type","Seccomp","Sysctls","Volume Types","Privilege Escalation","Running as Non-root","Running as Non-root user"]},"images":{"description":"Images selects matching containers and applies the container level PSS.\nEach image is the image name consisting of the registry address, repository, image, and tag.\nEmpty list matches no containers, PSS checks are applied at the pod level only.\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"restrictedField":{"description":"RestrictedField selects the field for the given Pod Security Standard control.\nWhen not set, all restricted fields for the control are selected.","type":"string"},"values":{"description":"Values defines the allowed values that can be excluded.","type":"array","items":{"type":"string"}}}}},"level":{"description":"Level defines the Pod Security Standard level to be applied to workloads.\nAllowed values are privileged, baseline, and restricted.","type":"string","enum":["privileged","baseline","restricted"]},"version":{"description":"Version defines the Pod Security Standard versions that Kubernetes supports.\nAllowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, v1.27, v1.28, v1.29, latest. Defaults to latest.","type":"string","enum":["v1.19","v1.20","v1.21","v1.22","v1.23","v1.24","v1.25","v1.26","v1.27","v1.28","v1.29","latest"]}}}}},"verifyImages":{"description":"VerifyImages is used to verify image signatures and mutate them to add a digest","type":"array","items":{"description":"ImageVerification validates that images that match the specified pattern\nare signed with the supplied public key. Once the image is verified it is\nmutated to include the SHA digest retrieved during the registration.","type":"object","properties":{"attestations":{"description":"Attestations are optional checks for signed in-toto Statements used to verify the image.\nSee https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the\nOCI registry and decodes them into a list of Statement declarations.","type":"array","items":{"description":"Attestation are checks for signed in-toto Statements that are used to verify the image.\nSee https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the\nOCI registry and decodes them into a list of Statements.","type":"object","properties":{"attestors":{"description":"Attestors specify the required attestors (i.e. authorities).","type":"array","items":{"type":"object","properties":{"count":{"description":"Count specifies the required number of entries that must match. If the count is null, all entries must match\n(a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a\nvalue N, then N must be less than or equal to the size of entries, and at least N entries must match.","type":"integer","minimum":1},"entries":{"description":"Entries contains the available attestors. An attestor can be a static key,\nattributes for keyless verification, or a nested attestor declaration.","type":"array","items":{"type":"object","properties":{"annotations":{"description":"Annotations are used for image verification.\nEvery specified key-value pair must exist and match in the verified payload.\nThe payload may contain other key-value pairs.","type":"object","additionalProperties":{"type":"string"}},"attestor":{"description":"Attestor is a nested set of Attestor used to specify a more complex set of match authorities.","x-kubernetes-preserve-unknown-fields":true},"certificates":{"description":"Certificates specifies one or more certificates.","type":"object","properties":{"cert":{"description":"Cert is an optional PEM-encoded public certificate.","type":"string"},"certChain":{"description":"CertChain is an optional PEM encoded set of certificates used to verify.","type":"string"},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}}}},"keyless":{"description":"Keyless is a set of attribute used to verify a Sigstore keyless attestor.\nSee https://github.com/sigstore/cosign/blob/main/KEYLESS.md.","type":"object","properties":{"additionalExtensions":{"description":"AdditionalExtensions are certificate-extensions used for keyless signing.","type":"object","additionalProperties":{"type":"string"}},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"issuer":{"description":"Issuer is the certificate issuer used for keyless signing.","type":"string"},"issuerRegExp":{"description":"IssuerRegExp is the regular expression to match certificate issuer used for keyless signing.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"roots":{"description":"Roots is an optional set of PEM encoded trusted root certificates.\nIf not provided, the system roots are used.","type":"string"},"subject":{"description":"Subject is the verified identity used for keyless signing, for example the email address.","type":"string"},"subjectRegExp":{"description":"SubjectRegExp is the regular expression to match identity used for keyless signing, for example the email address.","type":"string"}}},"keys":{"description":"Keys specifies one or more public keys.","type":"object","properties":{"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"kms":{"description":"KMS provides the URI to the public key stored in a Key Management System. See:\nhttps://github.com/sigstore/cosign/blob/main/KMS.md","type":"string"},"publicKeys":{"description":"Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly\nspecified or can be a variable reference to a key specified in a ConfigMap (see\nhttps://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret\nelsewhere in the cluster by specifying it in the format \"k8s://\u003cnamespace\u003e/\u003csecret_name\u003e\".\nThe named Secret must specify a key `cosign.pub` containing the public key used for\nverification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret).\nWhen multiple keys are specified each key is processed as a separate staticKey entry\n(.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"secret":{"description":"Reference to a Secret resource that contains a public key","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret. The provided secret must contain a key named cosign.pub.","type":"string"},"namespace":{"description":"Namespace name where the Secret exists.","type":"string"}}},"signatureAlgorithm":{"description":"Deprecated. Use attestor.signatureAlgorithm instead.","type":"string","default":"sha256"}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule.\nIf specified Repository will override other OCI image repository locations for this Attestor.","type":"string"},"signatureAlgorithm":{"description":"Specify signature algorithm for public keys. Supported values are sha224, sha256, sha384 and sha512.","type":"string","default":"sha256"}}}}}}},"conditions":{"description":"Conditions are used to verify attributes within a Predicate. If no Conditions are specified\nthe attestation check is satisfied as long there are predicates that match the predicate type.","type":"array","items":{"description":"AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled.\nAnyConditions get fulfilled when at least one of its sub-conditions passes.\nAllConditions get fulfilled only when all of its sub-conditions pass.","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}}}},"name":{"description":"Name is the variable name.","type":"string"},"predicateType":{"description":"Deprecated in favour of 'Type', to be removed soon","type":"string"},"type":{"description":"Type defines the type of attestation contained within the Statement.","type":"string"}}}},"attestors":{"description":"Attestors specified the required attestors (i.e. authorities)","type":"array","items":{"type":"object","properties":{"count":{"description":"Count specifies the required number of entries that must match. If the count is null, all entries must match\n(a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a\nvalue N, then N must be less than or equal to the size of entries, and at least N entries must match.","type":"integer","minimum":1},"entries":{"description":"Entries contains the available attestors. An attestor can be a static key,\nattributes for keyless verification, or a nested attestor declaration.","type":"array","items":{"type":"object","properties":{"annotations":{"description":"Annotations are used for image verification.\nEvery specified key-value pair must exist and match in the verified payload.\nThe payload may contain other key-value pairs.","type":"object","additionalProperties":{"type":"string"}},"attestor":{"description":"Attestor is a nested set of Attestor used to specify a more complex set of match authorities.","x-kubernetes-preserve-unknown-fields":true},"certificates":{"description":"Certificates specifies one or more certificates.","type":"object","properties":{"cert":{"description":"Cert is an optional PEM-encoded public certificate.","type":"string"},"certChain":{"description":"CertChain is an optional PEM encoded set of certificates used to verify.","type":"string"},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}}}},"keyless":{"description":"Keyless is a set of attribute used to verify a Sigstore keyless attestor.\nSee https://github.com/sigstore/cosign/blob/main/KEYLESS.md.","type":"object","properties":{"additionalExtensions":{"description":"AdditionalExtensions are certificate-extensions used for keyless signing.","type":"object","additionalProperties":{"type":"string"}},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"issuer":{"description":"Issuer is the certificate issuer used for keyless signing.","type":"string"},"issuerRegExp":{"description":"IssuerRegExp is the regular expression to match certificate issuer used for keyless signing.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"roots":{"description":"Roots is an optional set of PEM encoded trusted root certificates.\nIf not provided, the system roots are used.","type":"string"},"subject":{"description":"Subject is the verified identity used for keyless signing, for example the email address.","type":"string"},"subjectRegExp":{"description":"SubjectRegExp is the regular expression to match identity used for keyless signing, for example the email address.","type":"string"}}},"keys":{"description":"Keys specifies one or more public keys.","type":"object","properties":{"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"kms":{"description":"KMS provides the URI to the public key stored in a Key Management System. See:\nhttps://github.com/sigstore/cosign/blob/main/KMS.md","type":"string"},"publicKeys":{"description":"Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly\nspecified or can be a variable reference to a key specified in a ConfigMap (see\nhttps://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret\nelsewhere in the cluster by specifying it in the format \"k8s://\u003cnamespace\u003e/\u003csecret_name\u003e\".\nThe named Secret must specify a key `cosign.pub` containing the public key used for\nverification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret).\nWhen multiple keys are specified each key is processed as a separate staticKey entry\n(.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"secret":{"description":"Reference to a Secret resource that contains a public key","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret. The provided secret must contain a key named cosign.pub.","type":"string"},"namespace":{"description":"Namespace name where the Secret exists.","type":"string"}}},"signatureAlgorithm":{"description":"Deprecated. Use attestor.signatureAlgorithm instead.","type":"string","default":"sha256"}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule.\nIf specified Repository will override other OCI image repository locations for this Attestor.","type":"string"},"signatureAlgorithm":{"description":"Specify signature algorithm for public keys. Supported values are sha224, sha256, sha384 and sha512.","type":"string","default":"sha256"}}}}}}},"failureAction":{"description":"Allowed values are Audit or Enforce.","type":"string","enum":["Audit","Enforce"]},"imageReferences":{"description":"ImageReferences is a list of matching image reference patterns. At least one pattern in the\nlist must match the image for the rule to apply. Each image reference consists of a registry\naddress (defaults to docker.io), repository, image, and tag (defaults to latest).\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"mutateDigest":{"description":"MutateDigest enables replacement of image tags with digests.\nDefaults to true.","type":"boolean","default":true},"repository":{"description":"Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule.\nIf specified Repository will override the default OCI image repository configured for the installation.\nThe repository can also be overridden per Attestor or Attestation.","type":"string"},"required":{"description":"Required validates that images are verified i.e. have matched passed a signature or attestation check.","type":"boolean","default":true},"skipImageReferences":{"description":"SkipImageReferences is a list of matching image reference patterns that should be skipped.\nAt least one pattern in the list must match the image for the rule to be skipped. Each image reference\nconsists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest).\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"type":{"description":"Type specifies the method of signature validation. The allowed options\nare Cosign and Notary. By default Cosign is used if a type is not specified.","type":"string","enum":["Cosign","SigstoreBundle","Notary"]},"useCache":{"description":"UseCache enables caching of image verify responses for this rule","type":"boolean","default":true},"validate":{"description":"Validation checks conditions across multiple image\nverification attestations or context entries","type":"object","properties":{"deny":{"description":"Deny defines conditions used to pass or fail a validation rule.","type":"object","properties":{"conditions":{"description":"Multiple conditions can be declared under an `any` or `all` statement. A direct list\nof conditions (without `any` or `all` statements) is also supported for backwards compatibility\nbut will be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/validate/#deny-rules","x-kubernetes-preserve-unknown-fields":true}}},"message":{"description":"Message specifies a custom message to be displayed on failure.","type":"string"}}},"verifyDigest":{"description":"VerifyDigest validates that images have a digest.","type":"boolean","default":true}}}}}}},"schemaValidation":{"description":"Deprecated.","type":"boolean"},"useServerSideApply":{"description":"UseServerSideApply controls whether to use server-side apply for generate rules\nIf is set to \"true\" create \u0026 update for generate rules will use apply instead of create/update.\nDefaults to \"false\" if not specified.","type":"boolean"},"validationFailureAction":{"description":"Deprecated, use validationFailureAction under the validate rule instead.","type":"string","default":"Audit","enum":["audit","enforce","Audit","Enforce"]},"validationFailureActionOverrides":{"description":"Deprecated, use validationFailureActionOverrides under the validate rule instead.","type":"array","items":{"type":"object","properties":{"action":{"description":"ValidationFailureAction defines the policy validation failure action","type":"string","enum":["audit","enforce","Audit","Enforce"]},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"type":"array","items":{"type":"string"}}}}},"webhookConfiguration":{"description":"WebhookConfiguration specifies the custom configuration for Kubernetes admission webhookconfiguration.","type":"object","properties":{"failurePolicy":{"description":"FailurePolicy defines how unexpected policy errors and webhook response timeout errors are handled.\nRules within the same policy share the same failure behavior.\nThis field should not be accessed directly, instead `GetFailurePolicy()` should be used.\nAllowed values are Ignore or Fail. Defaults to Fail.","type":"string","enum":["Ignore","Fail"]},"matchConditions":{"description":"MatchCondition configures admission webhook matchConditions.\nRequires Kubernetes 1.27 or later.","type":"array","items":{"description":"MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.","type":"object","required":["expression","name"],"properties":{"expression":{"description":"Expression represents the expression which will be evaluated by CEL. Must evaluate to bool.\nCEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests.\n'oldObject' - The existing object. The value is null for CREATE requests.\n'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest).\n'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.","type":"string"},"name":{"description":"Name is an identifier for this match condition, used for strategic merging of MatchConditions,\nas well as providing an identifier for logging purposes. A good name should be descriptive of\nthe associated expression.\nName must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and\nmust start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or\n'123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an\noptional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.","type":"string"}}}},"timeoutSeconds":{"description":"TimeoutSeconds specifies the maximum time in seconds allowed to apply this policy.\nAfter the configured time expires, the admission request may fail, or may simply ignore the policy results,\nbased on the failure policy. The default timeout is 10s, the value must be between 1 and 30 seconds.","type":"integer","format":"int32"}}},"webhookTimeoutSeconds":{"description":"Deprecated, use webhookTimeoutSeconds under webhookConfiguration instead.","type":"integer","format":"int32"}}},"status":{"description":"Status contains policy runtime data.","type":"object","properties":{"autogen":{"description":"AutogenStatus contains autogen status information.","type":"object","properties":{"rules":{"description":"Rules is a list of Rule instances. It contains auto generated rules added for pod controllers","type":"array","items":{"description":"Rule defines a validation, mutation, or generation control for matching resources.\nEach rules contains a match declaration to select resources, and an optional exclude\ndeclaration to specify which resources to exclude.","type":"object","required":["match","name"],"properties":{"celPreconditions":{"description":"CELPreconditions are used to determine if a policy rule should be applied by evaluating a\nset of CEL conditions. It can only be used with the validate.cel subrule","type":"array","items":{"description":"MatchCondition represents a condition which must be fulfilled for a request to be sent to a webhook.","type":"object","required":["expression","name"],"properties":{"expression":{"description":"Expression represents the expression which will be evaluated by CEL. Must evaluate to bool.\nCEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests.\n'oldObject' - The existing object. The value is null for CREATE requests.\n'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest).\n'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.","type":"string"},"name":{"description":"Name is an identifier for this match condition, used for strategic merging of MatchConditions,\nas well as providing an identifier for logging purposes. A good name should be descriptive of\nthe associated expression.\nName must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and\nmust start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or\n'123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an\noptional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.","type":"string"}}}},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"exclude":{"description":"ExcludeResources defines when this policy rule should not be applied. The exclude\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the name or role.","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.\nRequires at least one tag to be specified when under MatchResources.\nSpecifying ResourceDescription directly under match is being deprecated.\nPlease specify under \"any\" or \"all\" instead.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}},"generate":{"description":"Generation is used to create new resources.","type":"object","properties":{"apiVersion":{"description":"APIVersion specifies resource apiVersion.","type":"string"},"clone":{"description":"Clone specifies the source resource used to populate each generated resource.\nAt most one of Data or Clone can be specified. If neither are provided, the generated\nresource will be created with default data only.","type":"object","properties":{"name":{"description":"Name specifies name of the resource.","type":"string"},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"}}},"cloneList":{"description":"CloneList specifies the list of source resource used to populate each generated resource.","type":"object","properties":{"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels`.\nwildcard characters are not supported.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"data":{"description":"Data provides the resource declaration used to populate each generated resource.\nAt most one of Data or Clone must be specified. If neither are provided, the generated\nresource will be created with default data only.","x-kubernetes-preserve-unknown-fields":true},"foreach":{"description":"ForEach applies generate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"array","items":{"type":"object","properties":{"apiVersion":{"description":"APIVersion specifies resource apiVersion.","type":"string"},"clone":{"description":"Clone specifies the source resource used to populate each generated resource.\nAt most one of Data or Clone can be specified. If neither are provided, the generated\nresource will be created with default data only.","type":"object","properties":{"name":{"description":"Name specifies name of the resource.","type":"string"},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"}}},"cloneList":{"description":"CloneList specifies the list of source resource used to populate each generated resource.","type":"object","properties":{"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels`.\nwildcard characters are not supported.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"data":{"description":"Data provides the resource declaration used to populate each generated resource.\nAt most one of Data or Clone must be specified. If neither are provided, the generated\nresource will be created with default data only.","x-kubernetes-preserve-unknown-fields":true},"kind":{"description":"Kind specifies resource kind.","type":"string"},"list":{"description":"List specifies a JMESPath expression that results in one or more elements\nto which the validation logic is applied.","type":"string"},"name":{"description":"Name specifies the resource name.","type":"string"},"namespace":{"description":"Namespace specifies resource namespace.","type":"string"},"preconditions":{"description":"AnyAllConditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}},"x-kubernetes-preserve-unknown-fields":true},"uid":{"description":"UID specifies the resource uid.","type":"string"}}}},"generateExisting":{"description":"GenerateExisting controls whether to trigger the rule in existing resources\nIf is set to \"true\" the rule will be triggered and applied to existing matched resources.","type":"boolean"},"kind":{"description":"Kind specifies resource kind.","type":"string"},"name":{"description":"Name specifies the resource name.","type":"string"},"namespace":{"description":"Namespace specifies resource namespace.","type":"string"},"orphanDownstreamOnPolicyDelete":{"description":"OrphanDownstreamOnPolicyDelete controls whether generated resources should be deleted when the rule that generated\nthem is deleted with synchronization enabled. This option is only applicable to generate rules of the data type.\nSee https://kyverno.io/docs/writing-policies/generate/#data-examples.\nDefaults to \"false\" if not specified.","type":"boolean"},"synchronize":{"description":"Synchronize controls if generated resources should be kept in-sync with their source resource.\nIf Synchronize is set to \"true\" changes to generated resources will be overwritten with resource\ndata from Data or the resource specified in the Clone declaration.\nOptional. Defaults to \"false\" if not specified.","type":"boolean"},"uid":{"description":"UID specifies the resource uid.","type":"string"}}},"imageExtractors":{"description":"ImageExtractors defines a mapping from kinds to ImageExtractorConfigs.\nThis config is only valid for verifyImages rules.","type":"object","additionalProperties":{"type":"array","items":{"type":"object","required":["path"],"properties":{"jmesPath":{"description":"JMESPath is an optional JMESPath expression to apply to the image value.\nThis is useful when the extracted image begins with a prefix like 'docker://'.\nThe 'trim_prefix' function may be used to trim the prefix: trim_prefix(@, 'docker://').\nNote - Image digest mutation may not be used when applying a JMESPAth to an image.","type":"string"},"key":{"description":"Key is an optional name of the field within 'path' that will be used to uniquely identify an image.\nNote - this field MUST be unique.","type":"string"},"name":{"description":"Name is the entry the image will be available under 'images.\u003cname\u003e' in the context.\nIf this field is not defined, image entries will appear under 'images.custom'.","type":"string"},"path":{"description":"Path is the path to the object containing the image field in a custom resource.\nIt should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'.\nWildcard keys are expanded in case of arrays or objects.","type":"string"},"value":{"description":"Value is an optional name of the field within 'path' that points to the image URI.\nThis is useful when a custom 'key' is also defined.","type":"string"}}}}},"match":{"description":"MatchResources defines when this policy rule should be applied. The match\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the user name or role.\nAt least one kind is required.","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.\nRequires at least one tag to be specified when under MatchResources.\nSpecifying ResourceDescription directly under match is being deprecated.\nPlease specify under \"any\" or \"all\" instead.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}},"mutate":{"description":"Mutation is used to modify matching resources.","type":"object","properties":{"foreach":{"description":"ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"array","items":{"description":"ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"object","properties":{"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"foreach":{"description":"Foreach declares a nested foreach iterator","x-kubernetes-preserve-unknown-fields":true},"list":{"description":"List specifies a JMESPath expression that results in one or more elements\nto which the validation logic is applied.","type":"string"},"order":{"description":"Order defines the iteration order on the list.\nCan be Ascending to iterate from first to last element or Descending to iterate in from last to first element.","type":"string","enum":["Ascending","Descending"]},"patchStrategicMerge":{"description":"PatchStrategicMerge is a strategic merge patch used to modify resources.\nSee https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/\nand https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.","x-kubernetes-preserve-unknown-fields":true},"patchesJson6902":{"description":"PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources.\nSee https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.","type":"string"},"preconditions":{"description":"AnyAllConditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}},"x-kubernetes-preserve-unknown-fields":true}}}},"mutateExistingOnPolicyUpdate":{"description":"MutateExistingOnPolicyUpdate controls if the mutateExisting rule will be applied on policy events.","type":"boolean"},"patchStrategicMerge":{"description":"PatchStrategicMerge is a strategic merge patch used to modify resources.\nSee https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/\nand https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.","x-kubernetes-preserve-unknown-fields":true},"patchesJson6902":{"description":"PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources.\nSee https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.","type":"string"},"targets":{"description":"Targets defines the target resources to be mutated.","type":"array","items":{"description":"TargetResourceSpec defines targets for mutating existing resources.","type":"object","properties":{"apiVersion":{"description":"APIVersion specifies resource apiVersion.","type":"string"},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"kind":{"description":"Kind specifies resource kind.","type":"string"},"name":{"description":"Name specifies the resource name.","type":"string"},"namespace":{"description":"Namespace specifies resource namespace.","type":"string"},"preconditions":{"description":"Preconditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements. A direct list\nof conditions (without `any` or `all` statements is supported for backwards compatibility but\nwill be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","x-kubernetes-preserve-unknown-fields":true},"selector":{"description":"Selector allows you to select target resources with their labels.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"uid":{"description":"UID specifies the resource uid.","type":"string"}}}}}},"name":{"description":"Name is a label to identify the rule, It must be unique within the policy.","type":"string","maxLength":63},"preconditions":{"description":"Preconditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements. A direct list\nof conditions (without `any` or `all` statements is supported for backwards compatibility but\nwill be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","x-kubernetes-preserve-unknown-fields":true},"reportProperties":{"description":"ReportProperties are the additional properties from the rule that will be added to the policy report result","type":"object","additionalProperties":{"type":"string"}},"skipBackgroundRequests":{"description":"SkipBackgroundRequests bypasses admission requests that are sent by the background controller.\nThe default value is set to \"true\", it must be set to \"false\" to apply\ngenerate and mutateExisting rules to those requests.","type":"boolean","default":true},"validate":{"description":"Validation is used to validate matching resources.","type":"object","properties":{"allowExistingViolations":{"description":"AllowExistingViolations allows prexisting violating resources to continue violating a policy.","type":"boolean","default":true},"anyPattern":{"description":"AnyPattern specifies list of validation patterns. At least one of the patterns\nmust be satisfied for the validation rule to succeed.","x-kubernetes-preserve-unknown-fields":true},"assert":{"description":"Assert defines a kyverno-json assertion tree.","type":"object","x-kubernetes-preserve-unknown-fields":true},"cel":{"description":"CEL allows validation checks using the Common Expression Language (https://kubernetes.io/docs/reference/using-api/cel/).","type":"object","properties":{"auditAnnotations":{"description":"AuditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request.","type":"array","items":{"description":"AuditAnnotation describes how to produce an audit annotation for an API request.","type":"object","required":["key","valueExpression"],"properties":{"key":{"description":"key specifies the audit annotation key. The audit annotation keys of\na ValidatingAdmissionPolicy must be unique. The key must be a qualified\nname ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.\n\nThe key is combined with the resource name of the\nValidatingAdmissionPolicy to construct an audit annotation key:\n\"{ValidatingAdmissionPolicy name}/{key}\".\n\nIf an admission webhook uses the same resource name as this ValidatingAdmissionPolicy\nand the same audit annotation key, the annotation key will be identical.\nIn this case, the first annotation written with the key will be included\nin the audit event and all subsequent annotations with the same key\nwill be discarded.\n\nRequired.","type":"string"},"valueExpression":{"description":"valueExpression represents the expression which is evaluated by CEL to\nproduce an audit annotation value. The expression must evaluate to either\na string or null value. If the expression evaluates to a string, the\naudit annotation is included with the string value. If the expression\nevaluates to null or empty string the audit annotation will be omitted.\nThe valueExpression may be no longer than 5kb in length.\nIf the result of the valueExpression is more than 10kb in length, it\nwill be truncated to 10kb.\n\nIf multiple ValidatingAdmissionPolicyBinding resources match an\nAPI request, then the valueExpression will be evaluated for\neach binding. All unique values produced by the valueExpressions\nwill be joined together in a comma-separated list.\n\nRequired.","type":"string"}}}},"expressions":{"description":"Expressions is a list of CELExpression types.","type":"array","items":{"description":"Validation specifies the CEL expression which is used to apply the validation.","type":"object","required":["expression"],"properties":{"expression":{"description":"Expression represents the expression which will be evaluated by CEL.\nref: https://github.com/google/cel-spec\nCEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables:\n\n- 'object' - The object from the incoming request. The value is null for DELETE requests.\n- 'oldObject' - The existing object. The value is null for CREATE requests.\n- 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)).\n- 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind.\n- 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources.\n- 'variables' - Map of composited variables, from its name to its lazily evaluated value.\n  For example, a variable named 'foo' can be accessed as 'variables.foo'.\n- 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n- 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the\nobject. No other metadata properties are accessible.\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible.\nAccessible property names are escaped according to the following rules when accessed in the expression:\n- '__' escapes to '__underscores__'\n- '.' escapes to '__dot__'\n- '-' escapes to '__dash__'\n- '/' escapes to '__slash__'\n- Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ \u003e 0\"}\n  - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop \u003e 0\"}\n  - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d \u003e 0\"}\n\nEquality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1].\nConcatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n  - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\n    non-intersecting elements in `Y` are appended, retaining their partial order.\n  - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\n    are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\n    non-intersecting keys are appended, retaining their partial order.\nRequired.","type":"string"},"message":{"description":"Message represents the message displayed when validation fails. The message is required if the Expression contains\nline breaks. The message must not contain line breaks.\nIf unset, the message is \"failed rule: {Rule}\".\ne.g. \"must be a URL with the host matching spec.host\"\nIf the Expression contains line breaks. Message is required.\nThe message must not contain line breaks.\nIf unset, the message is \"failed Expression: {Expression}\".","type":"string"},"messageExpression":{"description":"messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails.\nSince messageExpression is used as a failure message, it must evaluate to a string.\nIf both message and messageExpression are present on a validation, then messageExpression will be used if validation fails.\nIf messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced\nas if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string\nthat contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and\nthe fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged.\nmessageExpression has access to all the same variables as the `expression` except for 'authorizer' and 'authorizer.requestResource'.\nExample:\n\"object.x must be less than max (\"+string(params.max)+\")\"","type":"string"},"reason":{"description":"Reason represents a machine-readable description of why this validation failed.\nIf this is the first validation in the list to fail, this reason, as well as the\ncorresponding HTTP response code, are used in the\nHTTP response to the client.\nThe currently supported reasons are: \"Unauthorized\", \"Forbidden\", \"Invalid\", \"RequestEntityTooLarge\".\nIf not set, StatusReasonInvalid is used in the response to the client.","type":"string"}}}},"paramKind":{"description":"ParamKind is a tuple of Group Kind and Version.","type":"object","properties":{"apiVersion":{"description":"APIVersion is the API group version the resources belong to.\nIn format of \"group/version\".\nRequired.","type":"string"},"kind":{"description":"Kind is the API kind the resources belong to.\nRequired.","type":"string"}},"x-kubernetes-map-type":"atomic"},"paramRef":{"description":"ParamRef references a parameter resource.","type":"object","properties":{"name":{"description":"name is the name of the resource being referenced.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are\nmutually exclusive properties. If one is set, the other must be unset.\n\nA single parameter used for all admission requests can be configured\nby setting the `name` field, leaving `selector` blank, and setting namespace\nif `paramKind` is namespace-scoped.","type":"string"},"namespace":{"description":"namespace is the namespace of the referenced resource. Allows limiting\nthe search for params to a specific namespace. Applies to both `name` and\n`selector` fields.\n\nA per-namespace parameter may be used by specifying a namespace-scoped\n`paramKind` in the policy and leaving this field empty.\n\n- If `paramKind` is cluster-scoped, this field MUST be unset. Setting this\nfield results in a configuration error.\n\n- If `paramKind` is namespace-scoped, the namespace of the object being\nevaluated for admission will be used when this field is left unset. Take\ncare that if this is left empty the binding must not match any cluster-scoped\nresources, which will result in an error.","type":"string"},"parameterNotFoundAction":{"description":"`parameterNotFoundAction` controls the behavior of the binding when the resource\nexists, and name or selector is valid, but there are no parameters\nmatched by the binding. If the value is set to `Allow`, then no\nmatched parameters will be treated as successful validation by the binding.\nIf set to `Deny`, then no matched parameters will be subject to the\n`failurePolicy` of the policy.\n\nAllowed values are `Allow` or `Deny`\n\nRequired","type":"string"},"selector":{"description":"selector can be used to match multiple param objects based on their labels.\nSupply selector: {} to match all resources of the ParamKind.\n\nIf multiple params are found, they are all evaluated with the policy expressions\nand the results are ANDed together.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are\nmutually exclusive properties. If one is set, the other must be unset.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}},"x-kubernetes-map-type":"atomic"},"variables":{"description":"Variables contain definitions of variables that can be used in composition of other expressions.\nEach variable is defined as a named CEL expression.\nThe variables defined here will be available under `variables` in other expressions of the policy.","type":"array","items":{"description":"Variable is the definition of a variable that is used for composition. A variable is defined as a named expression.","type":"object","required":["expression","name"],"properties":{"expression":{"description":"Expression is the expression that will be evaluated as the value of the variable.\nThe CEL expression has access to the same identifiers as the CEL expressions in Validation.","type":"string"},"name":{"description":"Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables.\nThe variable can be accessed in other expressions through `variables`\nFor example, if name is \"foo\", the variable will be available as `variables.foo`","type":"string"}},"x-kubernetes-map-type":"atomic"}}}},"deny":{"description":"Deny defines conditions used to pass or fail a validation rule.","type":"object","properties":{"conditions":{"description":"Multiple conditions can be declared under an `any` or `all` statement. A direct list\nof conditions (without `any` or `all` statements) is also supported for backwards compatibility\nbut will be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/validate/#deny-rules","x-kubernetes-preserve-unknown-fields":true}}},"failureAction":{"description":"FailureAction defines if a validation policy rule violation should block\nthe admission review request (Enforce), or allow (Audit) the admission review request\nand report an error in a policy report. Optional.\nAllowed values are Audit or Enforce.","type":"string","enum":["Audit","Enforce"]},"failureActionOverrides":{"description":"FailureActionOverrides is a Cluster Policy attribute that specifies FailureAction\nnamespace-wise. It overrides FailureAction for the specified namespaces.","type":"array","items":{"type":"object","properties":{"action":{"description":"ValidationFailureAction defines the policy validation failure action","type":"string","enum":["audit","enforce","Audit","Enforce"]},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"type":"array","items":{"type":"string"}}}}},"foreach":{"description":"ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"array","items":{"description":"ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"object","properties":{"anyPattern":{"description":"AnyPattern specifies list of validation patterns. At least one of the patterns\nmust be satisfied for the validation rule to succeed.","x-kubernetes-preserve-unknown-fields":true},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"deny":{"description":"Deny defines conditions used to pass or fail a validation rule.","type":"object","properties":{"conditions":{"description":"Multiple conditions can be declared under an `any` or `all` statement. A direct list\nof conditions (without `any` or `all` statements) is also supported for backwards compatibility\nbut will be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/validate/#deny-rules","x-kubernetes-preserve-unknown-fields":true}}},"elementScope":{"description":"ElementScope specifies whether to use the current list element as the scope for validation. Defaults to \"true\" if not specified.\nWhen set to \"false\", \"request.object\" is used as the validation scope within the foreach\nblock to allow referencing other elements in the subtree.","type":"boolean"},"foreach":{"description":"Foreach declares a nested foreach iterator","x-kubernetes-preserve-unknown-fields":true},"list":{"description":"List specifies a JMESPath expression that results in one or more elements\nto which the validation logic is applied.","type":"string"},"pattern":{"description":"Pattern specifies an overlay-style pattern used to check resources.","x-kubernetes-preserve-unknown-fields":true},"preconditions":{"description":"AnyAllConditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}},"x-kubernetes-preserve-unknown-fields":true}}}},"manifests":{"description":"Manifest specifies conditions for manifest verification","type":"object","properties":{"annotationDomain":{"description":"AnnotationDomain is custom domain of annotation for message and signature. Default is \"cosign.sigstore.dev\".","type":"string"},"attestors":{"description":"Attestors specified the required attestors (i.e. authorities)","type":"array","items":{"type":"object","properties":{"count":{"description":"Count specifies the required number of entries that must match. If the count is null, all entries must match\n(a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a\nvalue N, then N must be less than or equal to the size of entries, and at least N entries must match.","type":"integer","minimum":1},"entries":{"description":"Entries contains the available attestors. An attestor can be a static key,\nattributes for keyless verification, or a nested attestor declaration.","type":"array","items":{"type":"object","properties":{"annotations":{"description":"Annotations are used for image verification.\nEvery specified key-value pair must exist and match in the verified payload.\nThe payload may contain other key-value pairs.","type":"object","additionalProperties":{"type":"string"}},"attestor":{"description":"Attestor is a nested set of Attestor used to specify a more complex set of match authorities.","x-kubernetes-preserve-unknown-fields":true},"certificates":{"description":"Certificates specifies one or more certificates.","type":"object","properties":{"cert":{"description":"Cert is an optional PEM-encoded public certificate.","type":"string"},"certChain":{"description":"CertChain is an optional PEM encoded set of certificates used to verify.","type":"string"},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}}}},"keyless":{"description":"Keyless is a set of attribute used to verify a Sigstore keyless attestor.\nSee https://github.com/sigstore/cosign/blob/main/KEYLESS.md.","type":"object","properties":{"additionalExtensions":{"description":"AdditionalExtensions are certificate-extensions used for keyless signing.","type":"object","additionalProperties":{"type":"string"}},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"issuer":{"description":"Issuer is the certificate issuer used for keyless signing.","type":"string"},"issuerRegExp":{"description":"IssuerRegExp is the regular expression to match certificate issuer used for keyless signing.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"roots":{"description":"Roots is an optional set of PEM encoded trusted root certificates.\nIf not provided, the system roots are used.","type":"string"},"subject":{"description":"Subject is the verified identity used for keyless signing, for example the email address.","type":"string"},"subjectRegExp":{"description":"SubjectRegExp is the regular expression to match identity used for keyless signing, for example the email address.","type":"string"}}},"keys":{"description":"Keys specifies one or more public keys.","type":"object","properties":{"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"kms":{"description":"KMS provides the URI to the public key stored in a Key Management System. See:\nhttps://github.com/sigstore/cosign/blob/main/KMS.md","type":"string"},"publicKeys":{"description":"Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly\nspecified or can be a variable reference to a key specified in a ConfigMap (see\nhttps://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret\nelsewhere in the cluster by specifying it in the format \"k8s://\u003cnamespace\u003e/\u003csecret_name\u003e\".\nThe named Secret must specify a key `cosign.pub` containing the public key used for\nverification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret).\nWhen multiple keys are specified each key is processed as a separate staticKey entry\n(.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"secret":{"description":"Reference to a Secret resource that contains a public key","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret. The provided secret must contain a key named cosign.pub.","type":"string"},"namespace":{"description":"Namespace name where the Secret exists.","type":"string"}}},"signatureAlgorithm":{"description":"Deprecated. Use attestor.signatureAlgorithm instead.","type":"string","default":"sha256"}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule.\nIf specified Repository will override other OCI image repository locations for this Attestor.","type":"string"},"signatureAlgorithm":{"description":"Specify signature algorithm for public keys. Supported values are sha224, sha256, sha384 and sha512.","type":"string","default":"sha256"}}}}}}},"dryRun":{"description":"DryRun configuration","type":"object","properties":{"enable":{"type":"boolean"},"namespace":{"type":"string"}}},"ignoreFields":{"description":"Fields which will be ignored while comparing manifests.","type":"array","items":{"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"}},"objects":{"type":"array","items":{"type":"object","properties":{"group":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"},"namespace":{"type":"string"},"version":{"type":"string"}}}}}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for resource bundle reference.\nThe repository can be overridden per Attestor or Attestation.","type":"string"}}},"message":{"description":"Message specifies a custom message to be displayed on failure.","type":"string"},"pattern":{"description":"Pattern specifies an overlay-style pattern used to check resources.","x-kubernetes-preserve-unknown-fields":true},"podSecurity":{"description":"PodSecurity applies exemptions for Kubernetes Pod Security admission\nby specifying exclusions for Pod Security Standards controls.","type":"object","properties":{"exclude":{"description":"Exclude specifies the Pod Security Standard controls to be excluded.","type":"array","items":{"description":"PodSecurityStandard specifies the Pod Security Standard controls to be excluded.","type":"object","required":["controlName"],"properties":{"controlName":{"description":"ControlName specifies the name of the Pod Security Standard control.\nSee: https://kubernetes.io/docs/concepts/security/pod-security-standards/","type":"string","enum":["HostProcess","Host Namespaces","Privileged Containers","Capabilities","HostPath Volumes","Host Ports","AppArmor","SELinux","/proc Mount Type","Seccomp","Sysctls","Volume Types","Privilege Escalation","Running as Non-root","Running as Non-root user"]},"images":{"description":"Images selects matching containers and applies the container level PSS.\nEach image is the image name consisting of the registry address, repository, image, and tag.\nEmpty list matches no containers, PSS checks are applied at the pod level only.\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"restrictedField":{"description":"RestrictedField selects the field for the given Pod Security Standard control.\nWhen not set, all restricted fields for the control are selected.","type":"string"},"values":{"description":"Values defines the allowed values that can be excluded.","type":"array","items":{"type":"string"}}}}},"level":{"description":"Level defines the Pod Security Standard level to be applied to workloads.\nAllowed values are privileged, baseline, and restricted.","type":"string","enum":["privileged","baseline","restricted"]},"version":{"description":"Version defines the Pod Security Standard versions that Kubernetes supports.\nAllowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, v1.27, v1.28, v1.29, latest. Defaults to latest.","type":"string","enum":["v1.19","v1.20","v1.21","v1.22","v1.23","v1.24","v1.25","v1.26","v1.27","v1.28","v1.29","latest"]}}}}},"verifyImages":{"description":"VerifyImages is used to verify image signatures and mutate them to add a digest","type":"array","items":{"description":"ImageVerification validates that images that match the specified pattern\nare signed with the supplied public key. Once the image is verified it is\nmutated to include the SHA digest retrieved during the registration.","type":"object","properties":{"additionalExtensions":{"description":"Deprecated.","type":"object","additionalProperties":{"type":"string"}},"annotations":{"description":"Deprecated. Use annotations per Attestor instead.","type":"object","additionalProperties":{"type":"string"}},"attestations":{"description":"Attestations are optional checks for signed in-toto Statements used to verify the image.\nSee https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the\nOCI registry and decodes them into a list of Statement declarations.","type":"array","items":{"description":"Attestation are checks for signed in-toto Statements that are used to verify the image.\nSee https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the\nOCI registry and decodes them into a list of Statements.","type":"object","properties":{"attestors":{"description":"Attestors specify the required attestors (i.e. authorities).","type":"array","items":{"type":"object","properties":{"count":{"description":"Count specifies the required number of entries that must match. If the count is null, all entries must match\n(a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a\nvalue N, then N must be less than or equal to the size of entries, and at least N entries must match.","type":"integer","minimum":1},"entries":{"description":"Entries contains the available attestors. An attestor can be a static key,\nattributes for keyless verification, or a nested attestor declaration.","type":"array","items":{"type":"object","properties":{"annotations":{"description":"Annotations are used for image verification.\nEvery specified key-value pair must exist and match in the verified payload.\nThe payload may contain other key-value pairs.","type":"object","additionalProperties":{"type":"string"}},"attestor":{"description":"Attestor is a nested set of Attestor used to specify a more complex set of match authorities.","x-kubernetes-preserve-unknown-fields":true},"certificates":{"description":"Certificates specifies one or more certificates.","type":"object","properties":{"cert":{"description":"Cert is an optional PEM-encoded public certificate.","type":"string"},"certChain":{"description":"CertChain is an optional PEM encoded set of certificates used to verify.","type":"string"},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}}}},"keyless":{"description":"Keyless is a set of attribute used to verify a Sigstore keyless attestor.\nSee https://github.com/sigstore/cosign/blob/main/KEYLESS.md.","type":"object","properties":{"additionalExtensions":{"description":"AdditionalExtensions are certificate-extensions used for keyless signing.","type":"object","additionalProperties":{"type":"string"}},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"issuer":{"description":"Issuer is the certificate issuer used for keyless signing.","type":"string"},"issuerRegExp":{"description":"IssuerRegExp is the regular expression to match certificate issuer used for keyless signing.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"roots":{"description":"Roots is an optional set of PEM encoded trusted root certificates.\nIf not provided, the system roots are used.","type":"string"},"subject":{"description":"Subject is the verified identity used for keyless signing, for example the email address.","type":"string"},"subjectRegExp":{"description":"SubjectRegExp is the regular expression to match identity used for keyless signing, for example the email address.","type":"string"}}},"keys":{"description":"Keys specifies one or more public keys.","type":"object","properties":{"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"kms":{"description":"KMS provides the URI to the public key stored in a Key Management System. See:\nhttps://github.com/sigstore/cosign/blob/main/KMS.md","type":"string"},"publicKeys":{"description":"Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly\nspecified or can be a variable reference to a key specified in a ConfigMap (see\nhttps://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret\nelsewhere in the cluster by specifying it in the format \"k8s://\u003cnamespace\u003e/\u003csecret_name\u003e\".\nThe named Secret must specify a key `cosign.pub` containing the public key used for\nverification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret).\nWhen multiple keys are specified each key is processed as a separate staticKey entry\n(.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"secret":{"description":"Reference to a Secret resource that contains a public key","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret. The provided secret must contain a key named cosign.pub.","type":"string"},"namespace":{"description":"Namespace name where the Secret exists.","type":"string"}}},"signatureAlgorithm":{"description":"Deprecated. Use attestor.signatureAlgorithm instead.","type":"string","default":"sha256"}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule.\nIf specified Repository will override other OCI image repository locations for this Attestor.","type":"string"},"signatureAlgorithm":{"description":"Specify signature algorithm for public keys. Supported values are sha224, sha256, sha384 and sha512.","type":"string","default":"sha256"}}}}}}},"conditions":{"description":"Conditions are used to verify attributes within a Predicate. If no Conditions are specified\nthe attestation check is satisfied as long there are predicates that match the predicate type.","type":"array","items":{"description":"AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled.\nAnyConditions get fulfilled when at least one of its sub-conditions passes.\nAllConditions get fulfilled only when all of its sub-conditions pass.","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}}}},"name":{"description":"Name is the variable name.","type":"string"},"predicateType":{"description":"Deprecated in favour of 'Type', to be removed soon","type":"string"},"type":{"description":"Type defines the type of attestation contained within the Statement.","type":"string"}}}},"attestors":{"description":"Attestors specified the required attestors (i.e. authorities)","type":"array","items":{"type":"object","properties":{"count":{"description":"Count specifies the required number of entries that must match. If the count is null, all entries must match\n(a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a\nvalue N, then N must be less than or equal to the size of entries, and at least N entries must match.","type":"integer","minimum":1},"entries":{"description":"Entries contains the available attestors. An attestor can be a static key,\nattributes for keyless verification, or a nested attestor declaration.","type":"array","items":{"type":"object","properties":{"annotations":{"description":"Annotations are used for image verification.\nEvery specified key-value pair must exist and match in the verified payload.\nThe payload may contain other key-value pairs.","type":"object","additionalProperties":{"type":"string"}},"attestor":{"description":"Attestor is a nested set of Attestor used to specify a more complex set of match authorities.","x-kubernetes-preserve-unknown-fields":true},"certificates":{"description":"Certificates specifies one or more certificates.","type":"object","properties":{"cert":{"description":"Cert is an optional PEM-encoded public certificate.","type":"string"},"certChain":{"description":"CertChain is an optional PEM encoded set of certificates used to verify.","type":"string"},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}}}},"keyless":{"description":"Keyless is a set of attribute used to verify a Sigstore keyless attestor.\nSee https://github.com/sigstore/cosign/blob/main/KEYLESS.md.","type":"object","properties":{"additionalExtensions":{"description":"AdditionalExtensions are certificate-extensions used for keyless signing.","type":"object","additionalProperties":{"type":"string"}},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"issuer":{"description":"Issuer is the certificate issuer used for keyless signing.","type":"string"},"issuerRegExp":{"description":"IssuerRegExp is the regular expression to match certificate issuer used for keyless signing.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"roots":{"description":"Roots is an optional set of PEM encoded trusted root certificates.\nIf not provided, the system roots are used.","type":"string"},"subject":{"description":"Subject is the verified identity used for keyless signing, for example the email address.","type":"string"},"subjectRegExp":{"description":"SubjectRegExp is the regular expression to match identity used for keyless signing, for example the email address.","type":"string"}}},"keys":{"description":"Keys specifies one or more public keys.","type":"object","properties":{"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"kms":{"description":"KMS provides the URI to the public key stored in a Key Management System. See:\nhttps://github.com/sigstore/cosign/blob/main/KMS.md","type":"string"},"publicKeys":{"description":"Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly\nspecified or can be a variable reference to a key specified in a ConfigMap (see\nhttps://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret\nelsewhere in the cluster by specifying it in the format \"k8s://\u003cnamespace\u003e/\u003csecret_name\u003e\".\nThe named Secret must specify a key `cosign.pub` containing the public key used for\nverification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret).\nWhen multiple keys are specified each key is processed as a separate staticKey entry\n(.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"secret":{"description":"Reference to a Secret resource that contains a public key","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret. The provided secret must contain a key named cosign.pub.","type":"string"},"namespace":{"description":"Namespace name where the Secret exists.","type":"string"}}},"signatureAlgorithm":{"description":"Deprecated. Use attestor.signatureAlgorithm instead.","type":"string","default":"sha256"}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule.\nIf specified Repository will override other OCI image repository locations for this Attestor.","type":"string"},"signatureAlgorithm":{"description":"Specify signature algorithm for public keys. Supported values are sha224, sha256, sha384 and sha512.","type":"string","default":"sha256"}}}}}}},"cosignOCI11":{"description":"CosignOCI11 enables the experimental OCI 1.1 behaviour in cosign image verification.\nDefaults to false.","type":"boolean"},"failureAction":{"description":"Allowed values are Audit or Enforce.","type":"string","enum":["Audit","Enforce"]},"image":{"description":"Deprecated. Use ImageReferences instead.","type":"string"},"imageReferences":{"description":"ImageReferences is a list of matching image reference patterns. At least one pattern in the\nlist must match the image for the rule to apply. Each image reference consists of a registry\naddress (defaults to docker.io), repository, image, and tag (defaults to latest).\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry.","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"issuer":{"description":"Deprecated. Use KeylessAttestor instead.","type":"string"},"key":{"description":"Deprecated. Use StaticKeyAttestor instead.","type":"string"},"mutateDigest":{"description":"MutateDigest enables replacement of image tags with digests.\nDefaults to true.","type":"boolean","default":true},"repository":{"description":"Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule.\nIf specified Repository will override the default OCI image repository configured for the installation.\nThe repository can also be overridden per Attestor or Attestation.","type":"string"},"required":{"description":"Required validates that images are verified i.e. have matched passed a signature or attestation check.","type":"boolean","default":true},"roots":{"description":"Deprecated. Use KeylessAttestor instead.","type":"string"},"skipImageReferences":{"description":"SkipImageReferences is a list of matching image reference patterns that should be skipped.\nAt least one pattern in the list must match the image for the rule to be skipped. Each image reference\nconsists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest).\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"subject":{"description":"Deprecated. Use KeylessAttestor instead.","type":"string"},"type":{"description":"Type specifies the method of signature validation. The allowed options\nare Cosign, Sigstore Bundle and Notary. By default Cosign is used if a type is not specified.","type":"string","enum":["Cosign","SigstoreBundle","Notary"]},"useCache":{"description":"UseCache enables caching of image verify responses for this rule.","type":"boolean","default":true},"validate":{"description":"Validation checks conditions across multiple image\nverification attestations or context entries","type":"object","properties":{"deny":{"description":"Deny defines conditions used to pass or fail a validation rule.","type":"object","properties":{"conditions":{"description":"Multiple conditions can be declared under an `any` or `all` statement. A direct list\nof conditions (without `any` or `all` statements) is also supported for backwards compatibility\nbut will be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/validate/#deny-rules","x-kubernetes-preserve-unknown-fields":true}}},"message":{"description":"Message specifies a custom message to be displayed on failure.","type":"string"}}},"verifyDigest":{"description":"VerifyDigest validates that images have a digest.","type":"boolean","default":true}}}}}}}}},"conditions":{"type":"array","items":{"description":"Condition contains details for one aspect of the current state of this API Resource.","type":"object","required":["lastTransitionTime","message","reason","status","type"],"properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","type":"string","format":"date-time"},"message":{"description":"message is a human readable message indicating details about the transition.\nThis may be an empty string.","type":"string","maxLength":32768},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.","type":"integer","format":"int64","minimum":0},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.","type":"string","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"},"status":{"description":"status of the condition, one of True, False, Unknown.","type":"string","enum":["True","False","Unknown"]},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase.","type":"string","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"}}}},"ready":{"description":"Deprecated in favor of Conditions","type":"boolean"},"rulecount":{"description":"RuleCountStatus contains four variables which describes counts for\nvalidate, generate, mutate and verify images rules","type":"object","required":["generate","mutate","validate","verifyimages"],"properties":{"generate":{"description":"Count for generate rules in policy","type":"integer"},"mutate":{"description":"Count for mutate rules in policy","type":"integer"},"validate":{"description":"Count for validate rules in policy","type":"integer"},"verifyimages":{"description":"Count for verify image rules in policy","type":"integer"}}},"validatingadmissionpolicy":{"description":"ValidatingAdmissionPolicy contains status information","type":"object","required":["generated","message"],"properties":{"generated":{"description":"Generated indicates whether a validating admission policy is generated from the policy or not","type":"boolean"},"message":{"description":"Message is a human readable message indicating details about the generation of validating admission policy\nIt is an empty string when validating admission policy is successfully generated.","type":"string"}}}}}},"x-kubernetes-group-version-kind":[{"group":"kyverno.io","kind":"ClusterPolicy","version":"v2beta1"}],"x-kubernetes-selectable-fields":[]},"io.kyverno.v2beta1.ClusterPolicyList":{"description":"ClusterPolicyList is a list of ClusterPolicy","type":"object","required":["items"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of clusterpolicies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md","type":"array","items":{"$ref":"#/components/schemas/io.kyverno.v2beta1.ClusterPolicy"}},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"}]}},"x-kubernetes-group-version-kind":[{"group":"kyverno.io","kind":"ClusterPolicyList","version":"v2beta1"}],"x-kubernetes-selectable-fields":[]},"io.kyverno.v2beta1.Policy":{"description":"Policy declares validation, mutation, and generation behaviors for matching resources.\nSee: https://kyverno.io/docs/writing-policies/ for more information.","type":"object","required":["spec"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"}]},"spec":{"description":"Spec defines policy behaviors and contains one or more rules.","type":"object","properties":{"admission":{"description":"Admission controls if rules are applied during admission.\nOptional. Default value is \"true\".","type":"boolean","default":true},"applyRules":{"description":"ApplyRules controls how rules in a policy are applied. Rule are processed in\nthe order of declaration. When set to `One` processing stops after a rule has\nbeen applied i.e. the rule matches and results in a pass, fail, or error. When\nset to `All` all rules in the policy are processed. The default is `All`.","type":"string","enum":["All","One"]},"background":{"description":"Background controls if rules are applied to existing resources during a background scan.\nOptional. Default value is \"true\". The value must be set to \"false\" if the policy rule\nuses variables that are only available in the admission review request (e.g. user name).","type":"boolean","default":true},"failurePolicy":{"description":"Deprecated, use failurePolicy under the webhookConfiguration instead.","type":"string","enum":["Ignore","Fail"]},"generateExisting":{"description":"Deprecated, use generateExisting under the generate rule instead","type":"boolean"},"generateExistingOnPolicyUpdate":{"description":"Deprecated, use generateExisting instead","type":"boolean"},"mutateExistingOnPolicyUpdate":{"description":"Deprecated, use mutateExistingOnPolicyUpdate under the mutate rule instead","type":"boolean"},"rules":{"description":"Rules is a list of Rule instances. A Policy contains multiple rules and\neach rule can validate, mutate, or generate resources.","type":"array","items":{"description":"Rule defines a validation, mutation, or generation control for matching resources.\nEach rules contains a match declaration to select resources, and an optional exclude\ndeclaration to specify which resources to exclude.","type":"object","required":["match","name"],"properties":{"celPreconditions":{"description":"CELPreconditions are used to determine if a policy rule should be applied by evaluating a\nset of CEL conditions. It can only be used with the validate.cel subrule","type":"array","items":{"description":"MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.","type":"object","required":["expression","name"],"properties":{"expression":{"description":"Expression represents the expression which will be evaluated by CEL. Must evaluate to bool.\nCEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests.\n'oldObject' - The existing object. The value is null for CREATE requests.\n'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest).\n'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.","type":"string"},"name":{"description":"Name is an identifier for this match condition, used for strategic merging of MatchConditions,\nas well as providing an identifier for logging purposes. A good name should be descriptive of\nthe associated expression.\nName must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and\nmust start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or\n'123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an\noptional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.","type":"string"}}}},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"exclude":{"description":"ExcludeResources defines when this policy rule should not be applied. The exclude\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the name or role.","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}}}},"generate":{"description":"Generation is used to create new resources.","type":"object","properties":{"apiVersion":{"description":"APIVersion specifies resource apiVersion.","type":"string"},"clone":{"description":"Clone specifies the source resource used to populate each generated resource.\nAt most one of Data or Clone can be specified. If neither are provided, the generated\nresource will be created with default data only.","type":"object","properties":{"name":{"description":"Name specifies name of the resource.","type":"string"},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"}}},"cloneList":{"description":"CloneList specifies the list of source resource used to populate each generated resource.","type":"object","properties":{"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels`.\nwildcard characters are not supported.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"data":{"description":"Data provides the resource declaration used to populate each generated resource.\nAt most one of Data or Clone must be specified. If neither are provided, the generated\nresource will be created with default data only.","x-kubernetes-preserve-unknown-fields":true},"foreach":{"description":"ForEach applies generate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"array","items":{"type":"object","properties":{"apiVersion":{"description":"APIVersion specifies resource apiVersion.","type":"string"},"clone":{"description":"Clone specifies the source resource used to populate each generated resource.\nAt most one of Data or Clone can be specified. If neither are provided, the generated\nresource will be created with default data only.","type":"object","properties":{"name":{"description":"Name specifies name of the resource.","type":"string"},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"}}},"cloneList":{"description":"CloneList specifies the list of source resource used to populate each generated resource.","type":"object","properties":{"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels`.\nwildcard characters are not supported.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"data":{"description":"Data provides the resource declaration used to populate each generated resource.\nAt most one of Data or Clone must be specified. If neither are provided, the generated\nresource will be created with default data only.","x-kubernetes-preserve-unknown-fields":true},"kind":{"description":"Kind specifies resource kind.","type":"string"},"list":{"description":"List specifies a JMESPath expression that results in one or more elements\nto which the validation logic is applied.","type":"string"},"name":{"description":"Name specifies the resource name.","type":"string"},"namespace":{"description":"Namespace specifies resource namespace.","type":"string"},"preconditions":{"description":"AnyAllConditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}},"x-kubernetes-preserve-unknown-fields":true},"uid":{"description":"UID specifies the resource uid.","type":"string"}}}},"generateExisting":{"description":"GenerateExisting controls whether to trigger the rule in existing resources\nIf is set to \"true\" the rule will be triggered and applied to existing matched resources.","type":"boolean"},"kind":{"description":"Kind specifies resource kind.","type":"string"},"name":{"description":"Name specifies the resource name.","type":"string"},"namespace":{"description":"Namespace specifies resource namespace.","type":"string"},"orphanDownstreamOnPolicyDelete":{"description":"OrphanDownstreamOnPolicyDelete controls whether generated resources should be deleted when the rule that generated\nthem is deleted with synchronization enabled. This option is only applicable to generate rules of the data type.\nSee https://kyverno.io/docs/writing-policies/generate/#data-examples.\nDefaults to \"false\" if not specified.","type":"boolean"},"synchronize":{"description":"Synchronize controls if generated resources should be kept in-sync with their source resource.\nIf Synchronize is set to \"true\" changes to generated resources will be overwritten with resource\ndata from Data or the resource specified in the Clone declaration.\nOptional. Defaults to \"false\" if not specified.","type":"boolean"},"uid":{"description":"UID specifies the resource uid.","type":"string"}}},"imageExtractors":{"description":"ImageExtractors defines a mapping from kinds to ImageExtractorConfigs.\nThis config is only valid for verifyImages rules.","type":"object","additionalProperties":{"type":"array","items":{"type":"object","required":["path"],"properties":{"jmesPath":{"description":"JMESPath is an optional JMESPath expression to apply to the image value.\nThis is useful when the extracted image begins with a prefix like 'docker://'.\nThe 'trim_prefix' function may be used to trim the prefix: trim_prefix(@, 'docker://').\nNote - Image digest mutation may not be used when applying a JMESPAth to an image.","type":"string"},"key":{"description":"Key is an optional name of the field within 'path' that will be used to uniquely identify an image.\nNote - this field MUST be unique.","type":"string"},"name":{"description":"Name is the entry the image will be available under 'images.\u003cname\u003e' in the context.\nIf this field is not defined, image entries will appear under 'images.custom'.","type":"string"},"path":{"description":"Path is the path to the object containing the image field in a custom resource.\nIt should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'.\nWildcard keys are expanded in case of arrays or objects.","type":"string"},"value":{"description":"Value is an optional name of the field within 'path' that points to the image URI.\nThis is useful when a custom 'key' is also defined.","type":"string"}}}}},"match":{"description":"MatchResources defines when this policy rule should be applied. The match\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the user name or role.\nAt least one kind is required.","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}}}},"mutate":{"description":"Mutation is used to modify matching resources.","type":"object","properties":{"foreach":{"description":"ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"array","items":{"description":"ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"object","properties":{"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"foreach":{"description":"Foreach declares a nested foreach iterator","x-kubernetes-preserve-unknown-fields":true},"list":{"description":"List specifies a JMESPath expression that results in one or more elements\nto which the validation logic is applied.","type":"string"},"order":{"description":"Order defines the iteration order on the list.\nCan be Ascending to iterate from first to last element or Descending to iterate in from last to first element.","type":"string","enum":["Ascending","Descending"]},"patchStrategicMerge":{"description":"PatchStrategicMerge is a strategic merge patch used to modify resources.\nSee https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/\nand https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.","x-kubernetes-preserve-unknown-fields":true},"patchesJson6902":{"description":"PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources.\nSee https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.","type":"string"},"preconditions":{"description":"AnyAllConditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}},"x-kubernetes-preserve-unknown-fields":true}}}},"mutateExistingOnPolicyUpdate":{"description":"MutateExistingOnPolicyUpdate controls if the mutateExisting rule will be applied on policy events.","type":"boolean"},"patchStrategicMerge":{"description":"PatchStrategicMerge is a strategic merge patch used to modify resources.\nSee https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/\nand https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.","x-kubernetes-preserve-unknown-fields":true},"patchesJson6902":{"description":"PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources.\nSee https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.","type":"string"},"targets":{"description":"Targets defines the target resources to be mutated.","type":"array","items":{"description":"TargetResourceSpec defines targets for mutating existing resources.","type":"object","properties":{"apiVersion":{"description":"APIVersion specifies resource apiVersion.","type":"string"},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"kind":{"description":"Kind specifies resource kind.","type":"string"},"name":{"description":"Name specifies the resource name.","type":"string"},"namespace":{"description":"Namespace specifies resource namespace.","type":"string"},"preconditions":{"description":"Preconditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements. A direct list\nof conditions (without `any` or `all` statements is supported for backwards compatibility but\nwill be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","x-kubernetes-preserve-unknown-fields":true},"selector":{"description":"Selector allows you to select target resources with their labels.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"uid":{"description":"UID specifies the resource uid.","type":"string"}}}}}},"name":{"description":"Name is a label to identify the rule, It must be unique within the policy.","type":"string","maxLength":63},"preconditions":{"description":"Preconditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}}},"skipBackgroundRequests":{"description":"SkipBackgroundRequests bypasses admission requests that are sent by the background controller.\nThe default value is set to \"true\", it must be set to \"false\" to apply\ngenerate and mutateExisting rules to those requests.","type":"boolean","default":true},"validate":{"description":"Validation is used to validate matching resources.","type":"object","properties":{"anyPattern":{"description":"AnyPattern specifies list of validation patterns. At least one of the patterns\nmust be satisfied for the validation rule to succeed.","x-kubernetes-preserve-unknown-fields":true},"assert":{"description":"Assert defines a kyverno-json assertion tree.","type":"object","x-kubernetes-preserve-unknown-fields":true},"cel":{"description":"CEL allows validation checks using the Common Expression Language (https://kubernetes.io/docs/reference/using-api/cel/).","type":"object","properties":{"auditAnnotations":{"description":"AuditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request.","type":"array","items":{"description":"AuditAnnotation describes how to produce an audit annotation for an API request.","type":"object","required":["key","valueExpression"],"properties":{"key":{"description":"key specifies the audit annotation key. The audit annotation keys of\na ValidatingAdmissionPolicy must be unique. The key must be a qualified\nname ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.\n\nThe key is combined with the resource name of the\nValidatingAdmissionPolicy to construct an audit annotation key:\n\"{ValidatingAdmissionPolicy name}/{key}\".\n\nIf an admission webhook uses the same resource name as this ValidatingAdmissionPolicy\nand the same audit annotation key, the annotation key will be identical.\nIn this case, the first annotation written with the key will be included\nin the audit event and all subsequent annotations with the same key\nwill be discarded.\n\nRequired.","type":"string"},"valueExpression":{"description":"valueExpression represents the expression which is evaluated by CEL to\nproduce an audit annotation value. The expression must evaluate to either\na string or null value. If the expression evaluates to a string, the\naudit annotation is included with the string value. If the expression\nevaluates to null or empty string the audit annotation will be omitted.\nThe valueExpression may be no longer than 5kb in length.\nIf the result of the valueExpression is more than 10kb in length, it\nwill be truncated to 10kb.\n\nIf multiple ValidatingAdmissionPolicyBinding resources match an\nAPI request, then the valueExpression will be evaluated for\neach binding. All unique values produced by the valueExpressions\nwill be joined together in a comma-separated list.\n\nRequired.","type":"string"}}}},"expressions":{"description":"Expressions is a list of CELExpression types.","type":"array","items":{"description":"Validation specifies the CEL expression which is used to apply the validation.","type":"object","required":["expression"],"properties":{"expression":{"description":"Expression represents the expression which will be evaluated by CEL.\nref: https://github.com/google/cel-spec\nCEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables:\n\n- 'object' - The object from the incoming request. The value is null for DELETE requests.\n- 'oldObject' - The existing object. The value is null for CREATE requests.\n- 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)).\n- 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind.\n- 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources.\n- 'variables' - Map of composited variables, from its name to its lazily evaluated value.\n  For example, a variable named 'foo' can be accessed as 'variables.foo'.\n- 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n- 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the\nobject. No other metadata properties are accessible.\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible.\nAccessible property names are escaped according to the following rules when accessed in the expression:\n- '__' escapes to '__underscores__'\n- '.' escapes to '__dot__'\n- '-' escapes to '__dash__'\n- '/' escapes to '__slash__'\n- Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ \u003e 0\"}\n  - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop \u003e 0\"}\n  - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d \u003e 0\"}\n\nEquality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1].\nConcatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n  - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\n    non-intersecting elements in `Y` are appended, retaining their partial order.\n  - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\n    are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\n    non-intersecting keys are appended, retaining their partial order.\nRequired.","type":"string"},"message":{"description":"Message represents the message displayed when validation fails. The message is required if the Expression contains\nline breaks. The message must not contain line breaks.\nIf unset, the message is \"failed rule: {Rule}\".\ne.g. \"must be a URL with the host matching spec.host\"\nIf the Expression contains line breaks. Message is required.\nThe message must not contain line breaks.\nIf unset, the message is \"failed Expression: {Expression}\".","type":"string"},"messageExpression":{"description":"messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails.\nSince messageExpression is used as a failure message, it must evaluate to a string.\nIf both message and messageExpression are present on a validation, then messageExpression will be used if validation fails.\nIf messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced\nas if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string\nthat contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and\nthe fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged.\nmessageExpression has access to all the same variables as the `expression` except for 'authorizer' and 'authorizer.requestResource'.\nExample:\n\"object.x must be less than max (\"+string(params.max)+\")\"","type":"string"},"reason":{"description":"Reason represents a machine-readable description of why this validation failed.\nIf this is the first validation in the list to fail, this reason, as well as the\ncorresponding HTTP response code, are used in the\nHTTP response to the client.\nThe currently supported reasons are: \"Unauthorized\", \"Forbidden\", \"Invalid\", \"RequestEntityTooLarge\".\nIf not set, StatusReasonInvalid is used in the response to the client.","type":"string"}}}},"paramKind":{"description":"ParamKind is a tuple of Group Kind and Version.","type":"object","properties":{"apiVersion":{"description":"APIVersion is the API group version the resources belong to.\nIn format of \"group/version\".\nRequired.","type":"string"},"kind":{"description":"Kind is the API kind the resources belong to.\nRequired.","type":"string"}},"x-kubernetes-map-type":"atomic"},"paramRef":{"description":"ParamRef references a parameter resource.","type":"object","properties":{"name":{"description":"name is the name of the resource being referenced.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are\nmutually exclusive properties. If one is set, the other must be unset.\n\nA single parameter used for all admission requests can be configured\nby setting the `name` field, leaving `selector` blank, and setting namespace\nif `paramKind` is namespace-scoped.","type":"string"},"namespace":{"description":"namespace is the namespace of the referenced resource. Allows limiting\nthe search for params to a specific namespace. Applies to both `name` and\n`selector` fields.\n\nA per-namespace parameter may be used by specifying a namespace-scoped\n`paramKind` in the policy and leaving this field empty.\n\n- If `paramKind` is cluster-scoped, this field MUST be unset. Setting this\nfield results in a configuration error.\n\n- If `paramKind` is namespace-scoped, the namespace of the object being\nevaluated for admission will be used when this field is left unset. Take\ncare that if this is left empty the binding must not match any cluster-scoped\nresources, which will result in an error.","type":"string"},"parameterNotFoundAction":{"description":"`parameterNotFoundAction` controls the behavior of the binding when the resource\nexists, and name or selector is valid, but there are no parameters\nmatched by the binding. If the value is set to `Allow`, then no\nmatched parameters will be treated as successful validation by the binding.\nIf set to `Deny`, then no matched parameters will be subject to the\n`failurePolicy` of the policy.\n\nAllowed values are `Allow` or `Deny`\n\nRequired","type":"string"},"selector":{"description":"selector can be used to match multiple param objects based on their labels.\nSupply selector: {} to match all resources of the ParamKind.\n\nIf multiple params are found, they are all evaluated with the policy expressions\nand the results are ANDed together.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are\nmutually exclusive properties. If one is set, the other must be unset.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}},"x-kubernetes-map-type":"atomic"},"variables":{"description":"Variables contain definitions of variables that can be used in composition of other expressions.\nEach variable is defined as a named CEL expression.\nThe variables defined here will be available under `variables` in other expressions of the policy.","type":"array","items":{"description":"Variable is the definition of a variable that is used for composition. A variable is defined as a named expression.","type":"object","required":["expression","name"],"properties":{"expression":{"description":"Expression is the expression that will be evaluated as the value of the variable.\nThe CEL expression has access to the same identifiers as the CEL expressions in Validation.","type":"string"},"name":{"description":"Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables.\nThe variable can be accessed in other expressions through `variables`\nFor example, if name is \"foo\", the variable will be available as `variables.foo`","type":"string"}},"x-kubernetes-map-type":"atomic"}}}},"deny":{"description":"Deny defines conditions used to pass or fail a validation rule.","type":"object","properties":{"conditions":{"description":"Multiple conditions can be declared under an `any` or `all` statement.\nSee: https://kyverno.io/docs/writing-policies/validate/#deny-rules","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}}}}},"failureAction":{"description":"FailureAction defines if a validation policy rule violation should block\nthe admission review request (Enforce), or allow (Audit) the admission review request\nand report an error in a policy report. Optional.\nAllowed values are Audit or Enforce.","type":"string","enum":["Audit","Enforce"]},"failureActionOverrides":{"description":"FailureActionOverrides is a Cluster Policy attribute that specifies FailureAction\nnamespace-wise. It overrides FailureAction for the specified namespaces.","type":"array","items":{"type":"object","properties":{"action":{"description":"ValidationFailureAction defines the policy validation failure action","type":"string","enum":["audit","enforce","Audit","Enforce"]},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"type":"array","items":{"type":"string"}}}}},"foreach":{"description":"ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"array","items":{"description":"ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"object","properties":{"anyPattern":{"description":"AnyPattern specifies list of validation patterns. At least one of the patterns\nmust be satisfied for the validation rule to succeed.","x-kubernetes-preserve-unknown-fields":true},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"deny":{"description":"Deny defines conditions used to pass or fail a validation rule.","type":"object","properties":{"conditions":{"description":"Multiple conditions can be declared under an `any` or `all` statement. A direct list\nof conditions (without `any` or `all` statements) is also supported for backwards compatibility\nbut will be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/validate/#deny-rules","x-kubernetes-preserve-unknown-fields":true}}},"elementScope":{"description":"ElementScope specifies whether to use the current list element as the scope for validation. Defaults to \"true\" if not specified.\nWhen set to \"false\", \"request.object\" is used as the validation scope within the foreach\nblock to allow referencing other elements in the subtree.","type":"boolean"},"foreach":{"description":"Foreach declares a nested foreach iterator","x-kubernetes-preserve-unknown-fields":true},"list":{"description":"List specifies a JMESPath expression that results in one or more elements\nto which the validation logic is applied.","type":"string"},"pattern":{"description":"Pattern specifies an overlay-style pattern used to check resources.","x-kubernetes-preserve-unknown-fields":true},"preconditions":{"description":"AnyAllConditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}},"x-kubernetes-preserve-unknown-fields":true}}}},"manifests":{"description":"Manifest specifies conditions for manifest verification","type":"object","properties":{"annotationDomain":{"description":"AnnotationDomain is custom domain of annotation for message and signature. Default is \"cosign.sigstore.dev\".","type":"string"},"attestors":{"description":"Attestors specified the required attestors (i.e. authorities)","type":"array","items":{"type":"object","properties":{"count":{"description":"Count specifies the required number of entries that must match. If the count is null, all entries must match\n(a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a\nvalue N, then N must be less than or equal to the size of entries, and at least N entries must match.","type":"integer","minimum":1},"entries":{"description":"Entries contains the available attestors. An attestor can be a static key,\nattributes for keyless verification, or a nested attestor declaration.","type":"array","items":{"type":"object","properties":{"annotations":{"description":"Annotations are used for image verification.\nEvery specified key-value pair must exist and match in the verified payload.\nThe payload may contain other key-value pairs.","type":"object","additionalProperties":{"type":"string"}},"attestor":{"description":"Attestor is a nested set of Attestor used to specify a more complex set of match authorities.","x-kubernetes-preserve-unknown-fields":true},"certificates":{"description":"Certificates specifies one or more certificates.","type":"object","properties":{"cert":{"description":"Cert is an optional PEM-encoded public certificate.","type":"string"},"certChain":{"description":"CertChain is an optional PEM encoded set of certificates used to verify.","type":"string"},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}}}},"keyless":{"description":"Keyless is a set of attribute used to verify a Sigstore keyless attestor.\nSee https://github.com/sigstore/cosign/blob/main/KEYLESS.md.","type":"object","properties":{"additionalExtensions":{"description":"AdditionalExtensions are certificate-extensions used for keyless signing.","type":"object","additionalProperties":{"type":"string"}},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"issuer":{"description":"Issuer is the certificate issuer used for keyless signing.","type":"string"},"issuerRegExp":{"description":"IssuerRegExp is the regular expression to match certificate issuer used for keyless signing.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"roots":{"description":"Roots is an optional set of PEM encoded trusted root certificates.\nIf not provided, the system roots are used.","type":"string"},"subject":{"description":"Subject is the verified identity used for keyless signing, for example the email address.","type":"string"},"subjectRegExp":{"description":"SubjectRegExp is the regular expression to match identity used for keyless signing, for example the email address.","type":"string"}}},"keys":{"description":"Keys specifies one or more public keys.","type":"object","properties":{"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"kms":{"description":"KMS provides the URI to the public key stored in a Key Management System. See:\nhttps://github.com/sigstore/cosign/blob/main/KMS.md","type":"string"},"publicKeys":{"description":"Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly\nspecified or can be a variable reference to a key specified in a ConfigMap (see\nhttps://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret\nelsewhere in the cluster by specifying it in the format \"k8s://\u003cnamespace\u003e/\u003csecret_name\u003e\".\nThe named Secret must specify a key `cosign.pub` containing the public key used for\nverification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret).\nWhen multiple keys are specified each key is processed as a separate staticKey entry\n(.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"secret":{"description":"Reference to a Secret resource that contains a public key","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret. The provided secret must contain a key named cosign.pub.","type":"string"},"namespace":{"description":"Namespace name where the Secret exists.","type":"string"}}},"signatureAlgorithm":{"description":"Deprecated. Use attestor.signatureAlgorithm instead.","type":"string","default":"sha256"}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule.\nIf specified Repository will override other OCI image repository locations for this Attestor.","type":"string"},"signatureAlgorithm":{"description":"Specify signature algorithm for public keys. Supported values are sha224, sha256, sha384 and sha512.","type":"string","default":"sha256"}}}}}}},"dryRun":{"description":"DryRun configuration","type":"object","properties":{"enable":{"type":"boolean"},"namespace":{"type":"string"}}},"ignoreFields":{"description":"Fields which will be ignored while comparing manifests.","type":"array","items":{"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"}},"objects":{"type":"array","items":{"type":"object","properties":{"group":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"},"namespace":{"type":"string"},"version":{"type":"string"}}}}}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for resource bundle reference.\nThe repository can be overridden per Attestor or Attestation.","type":"string"}}},"message":{"description":"Message specifies a custom message to be displayed on failure.","type":"string"},"pattern":{"description":"Pattern specifies an overlay-style pattern used to check resources.","x-kubernetes-preserve-unknown-fields":true},"podSecurity":{"description":"PodSecurity applies exemptions for Kubernetes Pod Security admission\nby specifying exclusions for Pod Security Standards controls.","type":"object","properties":{"exclude":{"description":"Exclude specifies the Pod Security Standard controls to be excluded.","type":"array","items":{"description":"PodSecurityStandard specifies the Pod Security Standard controls to be excluded.","type":"object","required":["controlName"],"properties":{"controlName":{"description":"ControlName specifies the name of the Pod Security Standard control.\nSee: https://kubernetes.io/docs/concepts/security/pod-security-standards/","type":"string","enum":["HostProcess","Host Namespaces","Privileged Containers","Capabilities","HostPath Volumes","Host Ports","AppArmor","SELinux","/proc Mount Type","Seccomp","Sysctls","Volume Types","Privilege Escalation","Running as Non-root","Running as Non-root user"]},"images":{"description":"Images selects matching containers and applies the container level PSS.\nEach image is the image name consisting of the registry address, repository, image, and tag.\nEmpty list matches no containers, PSS checks are applied at the pod level only.\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"restrictedField":{"description":"RestrictedField selects the field for the given Pod Security Standard control.\nWhen not set, all restricted fields for the control are selected.","type":"string"},"values":{"description":"Values defines the allowed values that can be excluded.","type":"array","items":{"type":"string"}}}}},"level":{"description":"Level defines the Pod Security Standard level to be applied to workloads.\nAllowed values are privileged, baseline, and restricted.","type":"string","enum":["privileged","baseline","restricted"]},"version":{"description":"Version defines the Pod Security Standard versions that Kubernetes supports.\nAllowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, v1.27, v1.28, v1.29, latest. Defaults to latest.","type":"string","enum":["v1.19","v1.20","v1.21","v1.22","v1.23","v1.24","v1.25","v1.26","v1.27","v1.28","v1.29","latest"]}}}}},"verifyImages":{"description":"VerifyImages is used to verify image signatures and mutate them to add a digest","type":"array","items":{"description":"ImageVerification validates that images that match the specified pattern\nare signed with the supplied public key. Once the image is verified it is\nmutated to include the SHA digest retrieved during the registration.","type":"object","properties":{"attestations":{"description":"Attestations are optional checks for signed in-toto Statements used to verify the image.\nSee https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the\nOCI registry and decodes them into a list of Statement declarations.","type":"array","items":{"description":"Attestation are checks for signed in-toto Statements that are used to verify the image.\nSee https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the\nOCI registry and decodes them into a list of Statements.","type":"object","properties":{"attestors":{"description":"Attestors specify the required attestors (i.e. authorities).","type":"array","items":{"type":"object","properties":{"count":{"description":"Count specifies the required number of entries that must match. If the count is null, all entries must match\n(a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a\nvalue N, then N must be less than or equal to the size of entries, and at least N entries must match.","type":"integer","minimum":1},"entries":{"description":"Entries contains the available attestors. An attestor can be a static key,\nattributes for keyless verification, or a nested attestor declaration.","type":"array","items":{"type":"object","properties":{"annotations":{"description":"Annotations are used for image verification.\nEvery specified key-value pair must exist and match in the verified payload.\nThe payload may contain other key-value pairs.","type":"object","additionalProperties":{"type":"string"}},"attestor":{"description":"Attestor is a nested set of Attestor used to specify a more complex set of match authorities.","x-kubernetes-preserve-unknown-fields":true},"certificates":{"description":"Certificates specifies one or more certificates.","type":"object","properties":{"cert":{"description":"Cert is an optional PEM-encoded public certificate.","type":"string"},"certChain":{"description":"CertChain is an optional PEM encoded set of certificates used to verify.","type":"string"},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}}}},"keyless":{"description":"Keyless is a set of attribute used to verify a Sigstore keyless attestor.\nSee https://github.com/sigstore/cosign/blob/main/KEYLESS.md.","type":"object","properties":{"additionalExtensions":{"description":"AdditionalExtensions are certificate-extensions used for keyless signing.","type":"object","additionalProperties":{"type":"string"}},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"issuer":{"description":"Issuer is the certificate issuer used for keyless signing.","type":"string"},"issuerRegExp":{"description":"IssuerRegExp is the regular expression to match certificate issuer used for keyless signing.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"roots":{"description":"Roots is an optional set of PEM encoded trusted root certificates.\nIf not provided, the system roots are used.","type":"string"},"subject":{"description":"Subject is the verified identity used for keyless signing, for example the email address.","type":"string"},"subjectRegExp":{"description":"SubjectRegExp is the regular expression to match identity used for keyless signing, for example the email address.","type":"string"}}},"keys":{"description":"Keys specifies one or more public keys.","type":"object","properties":{"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"kms":{"description":"KMS provides the URI to the public key stored in a Key Management System. See:\nhttps://github.com/sigstore/cosign/blob/main/KMS.md","type":"string"},"publicKeys":{"description":"Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly\nspecified or can be a variable reference to a key specified in a ConfigMap (see\nhttps://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret\nelsewhere in the cluster by specifying it in the format \"k8s://\u003cnamespace\u003e/\u003csecret_name\u003e\".\nThe named Secret must specify a key `cosign.pub` containing the public key used for\nverification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret).\nWhen multiple keys are specified each key is processed as a separate staticKey entry\n(.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"secret":{"description":"Reference to a Secret resource that contains a public key","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret. The provided secret must contain a key named cosign.pub.","type":"string"},"namespace":{"description":"Namespace name where the Secret exists.","type":"string"}}},"signatureAlgorithm":{"description":"Deprecated. Use attestor.signatureAlgorithm instead.","type":"string","default":"sha256"}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule.\nIf specified Repository will override other OCI image repository locations for this Attestor.","type":"string"},"signatureAlgorithm":{"description":"Specify signature algorithm for public keys. Supported values are sha224, sha256, sha384 and sha512.","type":"string","default":"sha256"}}}}}}},"conditions":{"description":"Conditions are used to verify attributes within a Predicate. If no Conditions are specified\nthe attestation check is satisfied as long there are predicates that match the predicate type.","type":"array","items":{"description":"AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled.\nAnyConditions get fulfilled when at least one of its sub-conditions passes.\nAllConditions get fulfilled only when all of its sub-conditions pass.","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}}}},"name":{"description":"Name is the variable name.","type":"string"},"predicateType":{"description":"Deprecated in favour of 'Type', to be removed soon","type":"string"},"type":{"description":"Type defines the type of attestation contained within the Statement.","type":"string"}}}},"attestors":{"description":"Attestors specified the required attestors (i.e. authorities)","type":"array","items":{"type":"object","properties":{"count":{"description":"Count specifies the required number of entries that must match. If the count is null, all entries must match\n(a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a\nvalue N, then N must be less than or equal to the size of entries, and at least N entries must match.","type":"integer","minimum":1},"entries":{"description":"Entries contains the available attestors. An attestor can be a static key,\nattributes for keyless verification, or a nested attestor declaration.","type":"array","items":{"type":"object","properties":{"annotations":{"description":"Annotations are used for image verification.\nEvery specified key-value pair must exist and match in the verified payload.\nThe payload may contain other key-value pairs.","type":"object","additionalProperties":{"type":"string"}},"attestor":{"description":"Attestor is a nested set of Attestor used to specify a more complex set of match authorities.","x-kubernetes-preserve-unknown-fields":true},"certificates":{"description":"Certificates specifies one or more certificates.","type":"object","properties":{"cert":{"description":"Cert is an optional PEM-encoded public certificate.","type":"string"},"certChain":{"description":"CertChain is an optional PEM encoded set of certificates used to verify.","type":"string"},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}}}},"keyless":{"description":"Keyless is a set of attribute used to verify a Sigstore keyless attestor.\nSee https://github.com/sigstore/cosign/blob/main/KEYLESS.md.","type":"object","properties":{"additionalExtensions":{"description":"AdditionalExtensions are certificate-extensions used for keyless signing.","type":"object","additionalProperties":{"type":"string"}},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"issuer":{"description":"Issuer is the certificate issuer used for keyless signing.","type":"string"},"issuerRegExp":{"description":"IssuerRegExp is the regular expression to match certificate issuer used for keyless signing.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"roots":{"description":"Roots is an optional set of PEM encoded trusted root certificates.\nIf not provided, the system roots are used.","type":"string"},"subject":{"description":"Subject is the verified identity used for keyless signing, for example the email address.","type":"string"},"subjectRegExp":{"description":"SubjectRegExp is the regular expression to match identity used for keyless signing, for example the email address.","type":"string"}}},"keys":{"description":"Keys specifies one or more public keys.","type":"object","properties":{"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"kms":{"description":"KMS provides the URI to the public key stored in a Key Management System. See:\nhttps://github.com/sigstore/cosign/blob/main/KMS.md","type":"string"},"publicKeys":{"description":"Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly\nspecified or can be a variable reference to a key specified in a ConfigMap (see\nhttps://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret\nelsewhere in the cluster by specifying it in the format \"k8s://\u003cnamespace\u003e/\u003csecret_name\u003e\".\nThe named Secret must specify a key `cosign.pub` containing the public key used for\nverification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret).\nWhen multiple keys are specified each key is processed as a separate staticKey entry\n(.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"secret":{"description":"Reference to a Secret resource that contains a public key","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret. The provided secret must contain a key named cosign.pub.","type":"string"},"namespace":{"description":"Namespace name where the Secret exists.","type":"string"}}},"signatureAlgorithm":{"description":"Deprecated. Use attestor.signatureAlgorithm instead.","type":"string","default":"sha256"}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule.\nIf specified Repository will override other OCI image repository locations for this Attestor.","type":"string"},"signatureAlgorithm":{"description":"Specify signature algorithm for public keys. Supported values are sha224, sha256, sha384 and sha512.","type":"string","default":"sha256"}}}}}}},"failureAction":{"description":"Allowed values are Audit or Enforce.","type":"string","enum":["Audit","Enforce"]},"imageReferences":{"description":"ImageReferences is a list of matching image reference patterns. At least one pattern in the\nlist must match the image for the rule to apply. Each image reference consists of a registry\naddress (defaults to docker.io), repository, image, and tag (defaults to latest).\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"mutateDigest":{"description":"MutateDigest enables replacement of image tags with digests.\nDefaults to true.","type":"boolean","default":true},"repository":{"description":"Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule.\nIf specified Repository will override the default OCI image repository configured for the installation.\nThe repository can also be overridden per Attestor or Attestation.","type":"string"},"required":{"description":"Required validates that images are verified i.e. have matched passed a signature or attestation check.","type":"boolean","default":true},"skipImageReferences":{"description":"SkipImageReferences is a list of matching image reference patterns that should be skipped.\nAt least one pattern in the list must match the image for the rule to be skipped. Each image reference\nconsists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest).\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"type":{"description":"Type specifies the method of signature validation. The allowed options\nare Cosign and Notary. By default Cosign is used if a type is not specified.","type":"string","enum":["Cosign","SigstoreBundle","Notary"]},"useCache":{"description":"UseCache enables caching of image verify responses for this rule","type":"boolean","default":true},"validate":{"description":"Validation checks conditions across multiple image\nverification attestations or context entries","type":"object","properties":{"deny":{"description":"Deny defines conditions used to pass or fail a validation rule.","type":"object","properties":{"conditions":{"description":"Multiple conditions can be declared under an `any` or `all` statement. A direct list\nof conditions (without `any` or `all` statements) is also supported for backwards compatibility\nbut will be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/validate/#deny-rules","x-kubernetes-preserve-unknown-fields":true}}},"message":{"description":"Message specifies a custom message to be displayed on failure.","type":"string"}}},"verifyDigest":{"description":"VerifyDigest validates that images have a digest.","type":"boolean","default":true}}}}}}},"schemaValidation":{"description":"Deprecated.","type":"boolean"},"useServerSideApply":{"description":"UseServerSideApply controls whether to use server-side apply for generate rules\nIf is set to \"true\" create \u0026 update for generate rules will use apply instead of create/update.\nDefaults to \"false\" if not specified.","type":"boolean"},"validationFailureAction":{"description":"Deprecated, use validationFailureAction under the validate rule instead.","type":"string","default":"Audit","enum":["audit","enforce","Audit","Enforce"]},"validationFailureActionOverrides":{"description":"Deprecated, use validationFailureActionOverrides under the validate rule instead.","type":"array","items":{"type":"object","properties":{"action":{"description":"ValidationFailureAction defines the policy validation failure action","type":"string","enum":["audit","enforce","Audit","Enforce"]},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"type":"array","items":{"type":"string"}}}}},"webhookConfiguration":{"description":"WebhookConfiguration specifies the custom configuration for Kubernetes admission webhookconfiguration.","type":"object","properties":{"failurePolicy":{"description":"FailurePolicy defines how unexpected policy errors and webhook response timeout errors are handled.\nRules within the same policy share the same failure behavior.\nThis field should not be accessed directly, instead `GetFailurePolicy()` should be used.\nAllowed values are Ignore or Fail. Defaults to Fail.","type":"string","enum":["Ignore","Fail"]},"matchConditions":{"description":"MatchCondition configures admission webhook matchConditions.\nRequires Kubernetes 1.27 or later.","type":"array","items":{"description":"MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.","type":"object","required":["expression","name"],"properties":{"expression":{"description":"Expression represents the expression which will be evaluated by CEL. Must evaluate to bool.\nCEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests.\n'oldObject' - The existing object. The value is null for CREATE requests.\n'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest).\n'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.","type":"string"},"name":{"description":"Name is an identifier for this match condition, used for strategic merging of MatchConditions,\nas well as providing an identifier for logging purposes. A good name should be descriptive of\nthe associated expression.\nName must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and\nmust start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or\n'123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an\noptional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.","type":"string"}}}},"timeoutSeconds":{"description":"TimeoutSeconds specifies the maximum time in seconds allowed to apply this policy.\nAfter the configured time expires, the admission request may fail, or may simply ignore the policy results,\nbased on the failure policy. The default timeout is 10s, the value must be between 1 and 30 seconds.","type":"integer","format":"int32"}}},"webhookTimeoutSeconds":{"description":"Deprecated, use webhookTimeoutSeconds under webhookConfiguration instead.","type":"integer","format":"int32"}}},"status":{"description":"Status contains policy runtime data.","type":"object","properties":{"autogen":{"description":"AutogenStatus contains autogen status information.","type":"object","properties":{"rules":{"description":"Rules is a list of Rule instances. It contains auto generated rules added for pod controllers","type":"array","items":{"description":"Rule defines a validation, mutation, or generation control for matching resources.\nEach rules contains a match declaration to select resources, and an optional exclude\ndeclaration to specify which resources to exclude.","type":"object","required":["match","name"],"properties":{"celPreconditions":{"description":"CELPreconditions are used to determine if a policy rule should be applied by evaluating a\nset of CEL conditions. It can only be used with the validate.cel subrule","type":"array","items":{"description":"MatchCondition represents a condition which must be fulfilled for a request to be sent to a webhook.","type":"object","required":["expression","name"],"properties":{"expression":{"description":"Expression represents the expression which will be evaluated by CEL. Must evaluate to bool.\nCEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:\n\n'object' - The object from the incoming request. The value is null for DELETE requests.\n'oldObject' - The existing object. The value is null for CREATE requests.\n'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest).\n'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\nDocumentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/\n\nRequired.","type":"string"},"name":{"description":"Name is an identifier for this match condition, used for strategic merging of MatchConditions,\nas well as providing an identifier for logging purposes. A good name should be descriptive of\nthe associated expression.\nName must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and\nmust start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or\n'123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an\noptional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')\n\nRequired.","type":"string"}}}},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"exclude":{"description":"ExcludeResources defines when this policy rule should not be applied. The exclude\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the name or role.","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.\nRequires at least one tag to be specified when under MatchResources.\nSpecifying ResourceDescription directly under match is being deprecated.\nPlease specify under \"any\" or \"all\" instead.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}},"generate":{"description":"Generation is used to create new resources.","type":"object","properties":{"apiVersion":{"description":"APIVersion specifies resource apiVersion.","type":"string"},"clone":{"description":"Clone specifies the source resource used to populate each generated resource.\nAt most one of Data or Clone can be specified. If neither are provided, the generated\nresource will be created with default data only.","type":"object","properties":{"name":{"description":"Name specifies name of the resource.","type":"string"},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"}}},"cloneList":{"description":"CloneList specifies the list of source resource used to populate each generated resource.","type":"object","properties":{"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels`.\nwildcard characters are not supported.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"data":{"description":"Data provides the resource declaration used to populate each generated resource.\nAt most one of Data or Clone must be specified. If neither are provided, the generated\nresource will be created with default data only.","x-kubernetes-preserve-unknown-fields":true},"foreach":{"description":"ForEach applies generate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"array","items":{"type":"object","properties":{"apiVersion":{"description":"APIVersion specifies resource apiVersion.","type":"string"},"clone":{"description":"Clone specifies the source resource used to populate each generated resource.\nAt most one of Data or Clone can be specified. If neither are provided, the generated\nresource will be created with default data only.","type":"object","properties":{"name":{"description":"Name specifies name of the resource.","type":"string"},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"}}},"cloneList":{"description":"CloneList specifies the list of source resource used to populate each generated resource.","type":"object","properties":{"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"namespace":{"description":"Namespace specifies source resource namespace.","type":"string"},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels`.\nwildcard characters are not supported.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"data":{"description":"Data provides the resource declaration used to populate each generated resource.\nAt most one of Data or Clone must be specified. If neither are provided, the generated\nresource will be created with default data only.","x-kubernetes-preserve-unknown-fields":true},"kind":{"description":"Kind specifies resource kind.","type":"string"},"list":{"description":"List specifies a JMESPath expression that results in one or more elements\nto which the validation logic is applied.","type":"string"},"name":{"description":"Name specifies the resource name.","type":"string"},"namespace":{"description":"Namespace specifies resource namespace.","type":"string"},"preconditions":{"description":"AnyAllConditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}},"x-kubernetes-preserve-unknown-fields":true},"uid":{"description":"UID specifies the resource uid.","type":"string"}}}},"generateExisting":{"description":"GenerateExisting controls whether to trigger the rule in existing resources\nIf is set to \"true\" the rule will be triggered and applied to existing matched resources.","type":"boolean"},"kind":{"description":"Kind specifies resource kind.","type":"string"},"name":{"description":"Name specifies the resource name.","type":"string"},"namespace":{"description":"Namespace specifies resource namespace.","type":"string"},"orphanDownstreamOnPolicyDelete":{"description":"OrphanDownstreamOnPolicyDelete controls whether generated resources should be deleted when the rule that generated\nthem is deleted with synchronization enabled. This option is only applicable to generate rules of the data type.\nSee https://kyverno.io/docs/writing-policies/generate/#data-examples.\nDefaults to \"false\" if not specified.","type":"boolean"},"synchronize":{"description":"Synchronize controls if generated resources should be kept in-sync with their source resource.\nIf Synchronize is set to \"true\" changes to generated resources will be overwritten with resource\ndata from Data or the resource specified in the Clone declaration.\nOptional. Defaults to \"false\" if not specified.","type":"boolean"},"uid":{"description":"UID specifies the resource uid.","type":"string"}}},"imageExtractors":{"description":"ImageExtractors defines a mapping from kinds to ImageExtractorConfigs.\nThis config is only valid for verifyImages rules.","type":"object","additionalProperties":{"type":"array","items":{"type":"object","required":["path"],"properties":{"jmesPath":{"description":"JMESPath is an optional JMESPath expression to apply to the image value.\nThis is useful when the extracted image begins with a prefix like 'docker://'.\nThe 'trim_prefix' function may be used to trim the prefix: trim_prefix(@, 'docker://').\nNote - Image digest mutation may not be used when applying a JMESPAth to an image.","type":"string"},"key":{"description":"Key is an optional name of the field within 'path' that will be used to uniquely identify an image.\nNote - this field MUST be unique.","type":"string"},"name":{"description":"Name is the entry the image will be available under 'images.\u003cname\u003e' in the context.\nIf this field is not defined, image entries will appear under 'images.custom'.","type":"string"},"path":{"description":"Path is the path to the object containing the image field in a custom resource.\nIt should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'.\nWildcard keys are expanded in case of arrays or objects.","type":"string"},"value":{"description":"Value is an optional name of the field within 'path' that points to the image URI.\nThis is useful when a custom 'key' is also defined.","type":"string"}}}}},"match":{"description":"MatchResources defines when this policy rule should be applied. The match\ncriteria can include resource information (e.g. kind, name, namespace, labels)\nand admission review request information like the user name or role.\nAt least one kind is required.","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.\nRequires at least one tag to be specified when under MatchResources.\nSpecifying ResourceDescription directly under match is being deprecated.\nPlease specify under \"any\" or \"all\" instead.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}},"mutate":{"description":"Mutation is used to modify matching resources.","type":"object","properties":{"foreach":{"description":"ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"array","items":{"description":"ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"object","properties":{"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"foreach":{"description":"Foreach declares a nested foreach iterator","x-kubernetes-preserve-unknown-fields":true},"list":{"description":"List specifies a JMESPath expression that results in one or more elements\nto which the validation logic is applied.","type":"string"},"order":{"description":"Order defines the iteration order on the list.\nCan be Ascending to iterate from first to last element or Descending to iterate in from last to first element.","type":"string","enum":["Ascending","Descending"]},"patchStrategicMerge":{"description":"PatchStrategicMerge is a strategic merge patch used to modify resources.\nSee https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/\nand https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.","x-kubernetes-preserve-unknown-fields":true},"patchesJson6902":{"description":"PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources.\nSee https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.","type":"string"},"preconditions":{"description":"AnyAllConditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}},"x-kubernetes-preserve-unknown-fields":true}}}},"mutateExistingOnPolicyUpdate":{"description":"MutateExistingOnPolicyUpdate controls if the mutateExisting rule will be applied on policy events.","type":"boolean"},"patchStrategicMerge":{"description":"PatchStrategicMerge is a strategic merge patch used to modify resources.\nSee https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/\nand https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.","x-kubernetes-preserve-unknown-fields":true},"patchesJson6902":{"description":"PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources.\nSee https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.","type":"string"},"targets":{"description":"Targets defines the target resources to be mutated.","type":"array","items":{"description":"TargetResourceSpec defines targets for mutating existing resources.","type":"object","properties":{"apiVersion":{"description":"APIVersion specifies resource apiVersion.","type":"string"},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"kind":{"description":"Kind specifies resource kind.","type":"string"},"name":{"description":"Name specifies the resource name.","type":"string"},"namespace":{"description":"Namespace specifies resource namespace.","type":"string"},"preconditions":{"description":"Preconditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements. A direct list\nof conditions (without `any` or `all` statements is supported for backwards compatibility but\nwill be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","x-kubernetes-preserve-unknown-fields":true},"selector":{"description":"Selector allows you to select target resources with their labels.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"uid":{"description":"UID specifies the resource uid.","type":"string"}}}}}},"name":{"description":"Name is a label to identify the rule, It must be unique within the policy.","type":"string","maxLength":63},"preconditions":{"description":"Preconditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements. A direct list\nof conditions (without `any` or `all` statements is supported for backwards compatibility but\nwill be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","x-kubernetes-preserve-unknown-fields":true},"reportProperties":{"description":"ReportProperties are the additional properties from the rule that will be added to the policy report result","type":"object","additionalProperties":{"type":"string"}},"skipBackgroundRequests":{"description":"SkipBackgroundRequests bypasses admission requests that are sent by the background controller.\nThe default value is set to \"true\", it must be set to \"false\" to apply\ngenerate and mutateExisting rules to those requests.","type":"boolean","default":true},"validate":{"description":"Validation is used to validate matching resources.","type":"object","properties":{"allowExistingViolations":{"description":"AllowExistingViolations allows prexisting violating resources to continue violating a policy.","type":"boolean","default":true},"anyPattern":{"description":"AnyPattern specifies list of validation patterns. At least one of the patterns\nmust be satisfied for the validation rule to succeed.","x-kubernetes-preserve-unknown-fields":true},"assert":{"description":"Assert defines a kyverno-json assertion tree.","type":"object","x-kubernetes-preserve-unknown-fields":true},"cel":{"description":"CEL allows validation checks using the Common Expression Language (https://kubernetes.io/docs/reference/using-api/cel/).","type":"object","properties":{"auditAnnotations":{"description":"AuditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request.","type":"array","items":{"description":"AuditAnnotation describes how to produce an audit annotation for an API request.","type":"object","required":["key","valueExpression"],"properties":{"key":{"description":"key specifies the audit annotation key. The audit annotation keys of\na ValidatingAdmissionPolicy must be unique. The key must be a qualified\nname ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length.\n\nThe key is combined with the resource name of the\nValidatingAdmissionPolicy to construct an audit annotation key:\n\"{ValidatingAdmissionPolicy name}/{key}\".\n\nIf an admission webhook uses the same resource name as this ValidatingAdmissionPolicy\nand the same audit annotation key, the annotation key will be identical.\nIn this case, the first annotation written with the key will be included\nin the audit event and all subsequent annotations with the same key\nwill be discarded.\n\nRequired.","type":"string"},"valueExpression":{"description":"valueExpression represents the expression which is evaluated by CEL to\nproduce an audit annotation value. The expression must evaluate to either\na string or null value. If the expression evaluates to a string, the\naudit annotation is included with the string value. If the expression\nevaluates to null or empty string the audit annotation will be omitted.\nThe valueExpression may be no longer than 5kb in length.\nIf the result of the valueExpression is more than 10kb in length, it\nwill be truncated to 10kb.\n\nIf multiple ValidatingAdmissionPolicyBinding resources match an\nAPI request, then the valueExpression will be evaluated for\neach binding. All unique values produced by the valueExpressions\nwill be joined together in a comma-separated list.\n\nRequired.","type":"string"}}}},"expressions":{"description":"Expressions is a list of CELExpression types.","type":"array","items":{"description":"Validation specifies the CEL expression which is used to apply the validation.","type":"object","required":["expression"],"properties":{"expression":{"description":"Expression represents the expression which will be evaluated by CEL.\nref: https://github.com/google/cel-spec\nCEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables:\n\n- 'object' - The object from the incoming request. The value is null for DELETE requests.\n- 'oldObject' - The existing object. The value is null for CREATE requests.\n- 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)).\n- 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind.\n- 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources.\n- 'variables' - Map of composited variables, from its name to its lazily evaluated value.\n  For example, a variable named 'foo' can be accessed as 'variables.foo'.\n- 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.\n  See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz\n- 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the\n  request resource.\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the\nobject. No other metadata properties are accessible.\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible.\nAccessible property names are escaped according to the following rules when accessed in the expression:\n- '__' escapes to '__underscores__'\n- '.' escapes to '__dot__'\n- '-' escapes to '__dash__'\n- '/' escapes to '__slash__'\n- Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ \u003e 0\"}\n  - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop \u003e 0\"}\n  - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d \u003e 0\"}\n\nEquality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1].\nConcatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n  - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\n    non-intersecting elements in `Y` are appended, retaining their partial order.\n  - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\n    are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\n    non-intersecting keys are appended, retaining their partial order.\nRequired.","type":"string"},"message":{"description":"Message represents the message displayed when validation fails. The message is required if the Expression contains\nline breaks. The message must not contain line breaks.\nIf unset, the message is \"failed rule: {Rule}\".\ne.g. \"must be a URL with the host matching spec.host\"\nIf the Expression contains line breaks. Message is required.\nThe message must not contain line breaks.\nIf unset, the message is \"failed Expression: {Expression}\".","type":"string"},"messageExpression":{"description":"messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails.\nSince messageExpression is used as a failure message, it must evaluate to a string.\nIf both message and messageExpression are present on a validation, then messageExpression will be used if validation fails.\nIf messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced\nas if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string\nthat contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and\nthe fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged.\nmessageExpression has access to all the same variables as the `expression` except for 'authorizer' and 'authorizer.requestResource'.\nExample:\n\"object.x must be less than max (\"+string(params.max)+\")\"","type":"string"},"reason":{"description":"Reason represents a machine-readable description of why this validation failed.\nIf this is the first validation in the list to fail, this reason, as well as the\ncorresponding HTTP response code, are used in the\nHTTP response to the client.\nThe currently supported reasons are: \"Unauthorized\", \"Forbidden\", \"Invalid\", \"RequestEntityTooLarge\".\nIf not set, StatusReasonInvalid is used in the response to the client.","type":"string"}}}},"paramKind":{"description":"ParamKind is a tuple of Group Kind and Version.","type":"object","properties":{"apiVersion":{"description":"APIVersion is the API group version the resources belong to.\nIn format of \"group/version\".\nRequired.","type":"string"},"kind":{"description":"Kind is the API kind the resources belong to.\nRequired.","type":"string"}},"x-kubernetes-map-type":"atomic"},"paramRef":{"description":"ParamRef references a parameter resource.","type":"object","properties":{"name":{"description":"name is the name of the resource being referenced.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are\nmutually exclusive properties. If one is set, the other must be unset.\n\nA single parameter used for all admission requests can be configured\nby setting the `name` field, leaving `selector` blank, and setting namespace\nif `paramKind` is namespace-scoped.","type":"string"},"namespace":{"description":"namespace is the namespace of the referenced resource. Allows limiting\nthe search for params to a specific namespace. Applies to both `name` and\n`selector` fields.\n\nA per-namespace parameter may be used by specifying a namespace-scoped\n`paramKind` in the policy and leaving this field empty.\n\n- If `paramKind` is cluster-scoped, this field MUST be unset. Setting this\nfield results in a configuration error.\n\n- If `paramKind` is namespace-scoped, the namespace of the object being\nevaluated for admission will be used when this field is left unset. Take\ncare that if this is left empty the binding must not match any cluster-scoped\nresources, which will result in an error.","type":"string"},"parameterNotFoundAction":{"description":"`parameterNotFoundAction` controls the behavior of the binding when the resource\nexists, and name or selector is valid, but there are no parameters\nmatched by the binding. If the value is set to `Allow`, then no\nmatched parameters will be treated as successful validation by the binding.\nIf set to `Deny`, then no matched parameters will be subject to the\n`failurePolicy` of the policy.\n\nAllowed values are `Allow` or `Deny`\n\nRequired","type":"string"},"selector":{"description":"selector can be used to match multiple param objects based on their labels.\nSupply selector: {} to match all resources of the ParamKind.\n\nIf multiple params are found, they are all evaluated with the policy expressions\nand the results are ANDed together.\n\nOne of `name` or `selector` must be set, but `name` and `selector` are\nmutually exclusive properties. If one is set, the other must be unset.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}},"x-kubernetes-map-type":"atomic"},"variables":{"description":"Variables contain definitions of variables that can be used in composition of other expressions.\nEach variable is defined as a named CEL expression.\nThe variables defined here will be available under `variables` in other expressions of the policy.","type":"array","items":{"description":"Variable is the definition of a variable that is used for composition. A variable is defined as a named expression.","type":"object","required":["expression","name"],"properties":{"expression":{"description":"Expression is the expression that will be evaluated as the value of the variable.\nThe CEL expression has access to the same identifiers as the CEL expressions in Validation.","type":"string"},"name":{"description":"Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables.\nThe variable can be accessed in other expressions through `variables`\nFor example, if name is \"foo\", the variable will be available as `variables.foo`","type":"string"}},"x-kubernetes-map-type":"atomic"}}}},"deny":{"description":"Deny defines conditions used to pass or fail a validation rule.","type":"object","properties":{"conditions":{"description":"Multiple conditions can be declared under an `any` or `all` statement. A direct list\nof conditions (without `any` or `all` statements) is also supported for backwards compatibility\nbut will be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/validate/#deny-rules","x-kubernetes-preserve-unknown-fields":true}}},"failureAction":{"description":"FailureAction defines if a validation policy rule violation should block\nthe admission review request (Enforce), or allow (Audit) the admission review request\nand report an error in a policy report. Optional.\nAllowed values are Audit or Enforce.","type":"string","enum":["Audit","Enforce"]},"failureActionOverrides":{"description":"FailureActionOverrides is a Cluster Policy attribute that specifies FailureAction\nnamespace-wise. It overrides FailureAction for the specified namespaces.","type":"array","items":{"type":"object","properties":{"action":{"description":"ValidationFailureAction defines the policy validation failure action","type":"string","enum":["audit","enforce","Audit","Enforce"]},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"type":"array","items":{"type":"string"}}}}},"foreach":{"description":"ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"array","items":{"description":"ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.","type":"object","properties":{"anyPattern":{"description":"AnyPattern specifies list of validation patterns. At least one of the patterns\nmust be satisfied for the validation rule to succeed.","x-kubernetes-preserve-unknown-fields":true},"context":{"description":"Context defines variables and data sources that can be used during rule execution.","type":"array","items":{"description":"ContextEntry adds variables and data sources to a rule Context. Either a\nConfigMap reference or a APILookup must be provided.","type":"object","required":["name"],"oneOf":[{"required":["configMap"]},{"required":["apiCall"]},{"required":["imageRegistry"]},{"required":["variable"]},{"required":["globalReference"]}],"properties":{"apiCall":{"description":"APICall is an HTTP request to the Kubernetes API server, or other JSON web service.\nThe data returned is stored in the context with the name for the context entry.","type":"object","properties":{"data":{"description":"The data object specifies the POST data sent to the server.\nOnly applicable when the method field is set to POST.","type":"array","items":{"description":"RequestData contains the HTTP POST data","type":"object","required":["key","value"],"properties":{"key":{"description":"Key is a unique identifier for the data value","type":"string"},"value":{"description":"Value is the data value","x-kubernetes-preserve-unknown-fields":true}}}},"default":{"description":"Default is an optional arbitrary JSON object that the context\nvalue is set to, if the apiCall returns error.","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"method":{"description":"Method is the HTTP request type (GET or POST). Defaults to GET.","type":"string","default":"GET","enum":["GET","POST"]},"service":{"description":"Service is an API call to a JSON web service.\nThis is used for non-Kubernetes API server calls.\nIt's mutually exclusive with the URLPath field.","type":"object","required":["url"],"properties":{"caBundle":{"description":"CABundle is a PEM encoded CA bundle which will be used to validate\nthe server certificate.","type":"string"},"headers":{"description":"Headers is a list of optional HTTP headers to be included in the request.","type":"array","items":{"type":"object","required":["key","value"],"properties":{"key":{"description":"Key is the header key","type":"string"},"value":{"description":"Value is the header value","type":"string"}}}},"url":{"description":"URL is the JSON web service URL. A typical form is\n`https://{service}.{namespace}:{port}/{path}`.","type":"string"}}},"urlPath":{"description":"URLPath is the URL path to be used in the HTTP GET or POST request to the\nKubernetes API server (e.g. \"/api/v1/namespaces\" or  \"/apis/apps/v1/deployments\").\nThe format required is the same format used by the `kubectl get --raw` command.\nSee https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls\nfor details.\nIt's mutually exclusive with the Service field.","type":"string"}}},"configMap":{"description":"ConfigMap is the ConfigMap reference.","type":"object","required":["name"],"properties":{"name":{"description":"Name is the ConfigMap name.","type":"string"},"namespace":{"description":"Namespace is the ConfigMap namespace.","type":"string"}}},"globalReference":{"description":"GlobalContextEntryReference is a reference to a cached global context entry.","type":"object","required":["name"],"properties":{"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the JSON response returned from the server. For example\na JMESPath of \"items | length(@)\" applied to the API server response\nfor the URLPath \"/apis/apps/v1/deployments\" will return the total count\nof deployments across all namespaces.","type":"string"},"name":{"description":"Name of the global context entry","type":"string"}}},"imageRegistry":{"description":"ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image\ndetails.","type":"object","required":["reference"],"properties":{"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"jmesPath":{"description":"JMESPath is an optional JSON Match Expression that can be used to\ntransform the ImageData struct returned as a result of processing\nthe image reference.","type":"string"},"reference":{"description":"Reference is image reference to a container image in the registry.\nExample: ghcr.io/kyverno/kyverno:latest","type":"string"}}},"name":{"description":"Name is the variable name.","type":"string"},"variable":{"description":"Variable defines an arbitrary JMESPath context variable that can be defined inline.","type":"object","properties":{"default":{"description":"Default is an optional arbitrary JSON object that the variable may take if the JMESPath\nexpression evaluates to nil","x-kubernetes-preserve-unknown-fields":true},"jmesPath":{"description":"JMESPath is an optional JMESPath Expression that can be used to\ntransform the variable.","type":"string"},"value":{"description":"Value is any arbitrary JSON object representable in YAML or JSON form.","x-kubernetes-preserve-unknown-fields":true}}}}}},"deny":{"description":"Deny defines conditions used to pass or fail a validation rule.","type":"object","properties":{"conditions":{"description":"Multiple conditions can be declared under an `any` or `all` statement. A direct list\nof conditions (without `any` or `all` statements) is also supported for backwards compatibility\nbut will be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/validate/#deny-rules","x-kubernetes-preserve-unknown-fields":true}}},"elementScope":{"description":"ElementScope specifies whether to use the current list element as the scope for validation. Defaults to \"true\" if not specified.\nWhen set to \"false\", \"request.object\" is used as the validation scope within the foreach\nblock to allow referencing other elements in the subtree.","type":"boolean"},"foreach":{"description":"Foreach declares a nested foreach iterator","x-kubernetes-preserve-unknown-fields":true},"list":{"description":"List specifies a JMESPath expression that results in one or more elements\nto which the validation logic is applied.","type":"string"},"pattern":{"description":"Pattern specifies an overlay-style pattern used to check resources.","x-kubernetes-preserve-unknown-fields":true},"preconditions":{"description":"AnyAllConditions are used to determine if a policy rule should be applied by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.\nSee: https://kyverno.io/docs/writing-policies/preconditions/","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}},"x-kubernetes-preserve-unknown-fields":true}}}},"manifests":{"description":"Manifest specifies conditions for manifest verification","type":"object","properties":{"annotationDomain":{"description":"AnnotationDomain is custom domain of annotation for message and signature. Default is \"cosign.sigstore.dev\".","type":"string"},"attestors":{"description":"Attestors specified the required attestors (i.e. authorities)","type":"array","items":{"type":"object","properties":{"count":{"description":"Count specifies the required number of entries that must match. If the count is null, all entries must match\n(a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a\nvalue N, then N must be less than or equal to the size of entries, and at least N entries must match.","type":"integer","minimum":1},"entries":{"description":"Entries contains the available attestors. An attestor can be a static key,\nattributes for keyless verification, or a nested attestor declaration.","type":"array","items":{"type":"object","properties":{"annotations":{"description":"Annotations are used for image verification.\nEvery specified key-value pair must exist and match in the verified payload.\nThe payload may contain other key-value pairs.","type":"object","additionalProperties":{"type":"string"}},"attestor":{"description":"Attestor is a nested set of Attestor used to specify a more complex set of match authorities.","x-kubernetes-preserve-unknown-fields":true},"certificates":{"description":"Certificates specifies one or more certificates.","type":"object","properties":{"cert":{"description":"Cert is an optional PEM-encoded public certificate.","type":"string"},"certChain":{"description":"CertChain is an optional PEM encoded set of certificates used to verify.","type":"string"},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}}}},"keyless":{"description":"Keyless is a set of attribute used to verify a Sigstore keyless attestor.\nSee https://github.com/sigstore/cosign/blob/main/KEYLESS.md.","type":"object","properties":{"additionalExtensions":{"description":"AdditionalExtensions are certificate-extensions used for keyless signing.","type":"object","additionalProperties":{"type":"string"}},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"issuer":{"description":"Issuer is the certificate issuer used for keyless signing.","type":"string"},"issuerRegExp":{"description":"IssuerRegExp is the regular expression to match certificate issuer used for keyless signing.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"roots":{"description":"Roots is an optional set of PEM encoded trusted root certificates.\nIf not provided, the system roots are used.","type":"string"},"subject":{"description":"Subject is the verified identity used for keyless signing, for example the email address.","type":"string"},"subjectRegExp":{"description":"SubjectRegExp is the regular expression to match identity used for keyless signing, for example the email address.","type":"string"}}},"keys":{"description":"Keys specifies one or more public keys.","type":"object","properties":{"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"kms":{"description":"KMS provides the URI to the public key stored in a Key Management System. See:\nhttps://github.com/sigstore/cosign/blob/main/KMS.md","type":"string"},"publicKeys":{"description":"Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly\nspecified or can be a variable reference to a key specified in a ConfigMap (see\nhttps://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret\nelsewhere in the cluster by specifying it in the format \"k8s://\u003cnamespace\u003e/\u003csecret_name\u003e\".\nThe named Secret must specify a key `cosign.pub` containing the public key used for\nverification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret).\nWhen multiple keys are specified each key is processed as a separate staticKey entry\n(.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"secret":{"description":"Reference to a Secret resource that contains a public key","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret. The provided secret must contain a key named cosign.pub.","type":"string"},"namespace":{"description":"Namespace name where the Secret exists.","type":"string"}}},"signatureAlgorithm":{"description":"Deprecated. Use attestor.signatureAlgorithm instead.","type":"string","default":"sha256"}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule.\nIf specified Repository will override other OCI image repository locations for this Attestor.","type":"string"},"signatureAlgorithm":{"description":"Specify signature algorithm for public keys. Supported values are sha224, sha256, sha384 and sha512.","type":"string","default":"sha256"}}}}}}},"dryRun":{"description":"DryRun configuration","type":"object","properties":{"enable":{"type":"boolean"},"namespace":{"type":"string"}}},"ignoreFields":{"description":"Fields which will be ignored while comparing manifests.","type":"array","items":{"type":"object","properties":{"fields":{"type":"array","items":{"type":"string"}},"objects":{"type":"array","items":{"type":"object","properties":{"group":{"type":"string"},"kind":{"type":"string"},"name":{"type":"string"},"namespace":{"type":"string"},"version":{"type":"string"}}}}}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for resource bundle reference.\nThe repository can be overridden per Attestor or Attestation.","type":"string"}}},"message":{"description":"Message specifies a custom message to be displayed on failure.","type":"string"},"pattern":{"description":"Pattern specifies an overlay-style pattern used to check resources.","x-kubernetes-preserve-unknown-fields":true},"podSecurity":{"description":"PodSecurity applies exemptions for Kubernetes Pod Security admission\nby specifying exclusions for Pod Security Standards controls.","type":"object","properties":{"exclude":{"description":"Exclude specifies the Pod Security Standard controls to be excluded.","type":"array","items":{"description":"PodSecurityStandard specifies the Pod Security Standard controls to be excluded.","type":"object","required":["controlName"],"properties":{"controlName":{"description":"ControlName specifies the name of the Pod Security Standard control.\nSee: https://kubernetes.io/docs/concepts/security/pod-security-standards/","type":"string","enum":["HostProcess","Host Namespaces","Privileged Containers","Capabilities","HostPath Volumes","Host Ports","AppArmor","SELinux","/proc Mount Type","Seccomp","Sysctls","Volume Types","Privilege Escalation","Running as Non-root","Running as Non-root user"]},"images":{"description":"Images selects matching containers and applies the container level PSS.\nEach image is the image name consisting of the registry address, repository, image, and tag.\nEmpty list matches no containers, PSS checks are applied at the pod level only.\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"restrictedField":{"description":"RestrictedField selects the field for the given Pod Security Standard control.\nWhen not set, all restricted fields for the control are selected.","type":"string"},"values":{"description":"Values defines the allowed values that can be excluded.","type":"array","items":{"type":"string"}}}}},"level":{"description":"Level defines the Pod Security Standard level to be applied to workloads.\nAllowed values are privileged, baseline, and restricted.","type":"string","enum":["privileged","baseline","restricted"]},"version":{"description":"Version defines the Pod Security Standard versions that Kubernetes supports.\nAllowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, v1.27, v1.28, v1.29, latest. Defaults to latest.","type":"string","enum":["v1.19","v1.20","v1.21","v1.22","v1.23","v1.24","v1.25","v1.26","v1.27","v1.28","v1.29","latest"]}}}}},"verifyImages":{"description":"VerifyImages is used to verify image signatures and mutate them to add a digest","type":"array","items":{"description":"ImageVerification validates that images that match the specified pattern\nare signed with the supplied public key. Once the image is verified it is\nmutated to include the SHA digest retrieved during the registration.","type":"object","properties":{"additionalExtensions":{"description":"Deprecated.","type":"object","additionalProperties":{"type":"string"}},"annotations":{"description":"Deprecated. Use annotations per Attestor instead.","type":"object","additionalProperties":{"type":"string"}},"attestations":{"description":"Attestations are optional checks for signed in-toto Statements used to verify the image.\nSee https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the\nOCI registry and decodes them into a list of Statement declarations.","type":"array","items":{"description":"Attestation are checks for signed in-toto Statements that are used to verify the image.\nSee https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the\nOCI registry and decodes them into a list of Statements.","type":"object","properties":{"attestors":{"description":"Attestors specify the required attestors (i.e. authorities).","type":"array","items":{"type":"object","properties":{"count":{"description":"Count specifies the required number of entries that must match. If the count is null, all entries must match\n(a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a\nvalue N, then N must be less than or equal to the size of entries, and at least N entries must match.","type":"integer","minimum":1},"entries":{"description":"Entries contains the available attestors. An attestor can be a static key,\nattributes for keyless verification, or a nested attestor declaration.","type":"array","items":{"type":"object","properties":{"annotations":{"description":"Annotations are used for image verification.\nEvery specified key-value pair must exist and match in the verified payload.\nThe payload may contain other key-value pairs.","type":"object","additionalProperties":{"type":"string"}},"attestor":{"description":"Attestor is a nested set of Attestor used to specify a more complex set of match authorities.","x-kubernetes-preserve-unknown-fields":true},"certificates":{"description":"Certificates specifies one or more certificates.","type":"object","properties":{"cert":{"description":"Cert is an optional PEM-encoded public certificate.","type":"string"},"certChain":{"description":"CertChain is an optional PEM encoded set of certificates used to verify.","type":"string"},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}}}},"keyless":{"description":"Keyless is a set of attribute used to verify a Sigstore keyless attestor.\nSee https://github.com/sigstore/cosign/blob/main/KEYLESS.md.","type":"object","properties":{"additionalExtensions":{"description":"AdditionalExtensions are certificate-extensions used for keyless signing.","type":"object","additionalProperties":{"type":"string"}},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"issuer":{"description":"Issuer is the certificate issuer used for keyless signing.","type":"string"},"issuerRegExp":{"description":"IssuerRegExp is the regular expression to match certificate issuer used for keyless signing.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"roots":{"description":"Roots is an optional set of PEM encoded trusted root certificates.\nIf not provided, the system roots are used.","type":"string"},"subject":{"description":"Subject is the verified identity used for keyless signing, for example the email address.","type":"string"},"subjectRegExp":{"description":"SubjectRegExp is the regular expression to match identity used for keyless signing, for example the email address.","type":"string"}}},"keys":{"description":"Keys specifies one or more public keys.","type":"object","properties":{"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"kms":{"description":"KMS provides the URI to the public key stored in a Key Management System. See:\nhttps://github.com/sigstore/cosign/blob/main/KMS.md","type":"string"},"publicKeys":{"description":"Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly\nspecified or can be a variable reference to a key specified in a ConfigMap (see\nhttps://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret\nelsewhere in the cluster by specifying it in the format \"k8s://\u003cnamespace\u003e/\u003csecret_name\u003e\".\nThe named Secret must specify a key `cosign.pub` containing the public key used for\nverification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret).\nWhen multiple keys are specified each key is processed as a separate staticKey entry\n(.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"secret":{"description":"Reference to a Secret resource that contains a public key","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret. The provided secret must contain a key named cosign.pub.","type":"string"},"namespace":{"description":"Namespace name where the Secret exists.","type":"string"}}},"signatureAlgorithm":{"description":"Deprecated. Use attestor.signatureAlgorithm instead.","type":"string","default":"sha256"}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule.\nIf specified Repository will override other OCI image repository locations for this Attestor.","type":"string"},"signatureAlgorithm":{"description":"Specify signature algorithm for public keys. Supported values are sha224, sha256, sha384 and sha512.","type":"string","default":"sha256"}}}}}}},"conditions":{"description":"Conditions are used to verify attributes within a Predicate. If no Conditions are specified\nthe attestation check is satisfied as long there are predicates that match the predicate type.","type":"array","items":{"description":"AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled.\nAnyConditions get fulfilled when at least one of its sub-conditions passes.\nAllConditions get fulfilled only when all of its sub-conditions pass.","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass","type":"array","items":{"description":"Condition defines variable-based conditional criteria for rule execution.","type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","In","AnyIn","AllIn","NotIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}}}},"name":{"description":"Name is the variable name.","type":"string"},"predicateType":{"description":"Deprecated in favour of 'Type', to be removed soon","type":"string"},"type":{"description":"Type defines the type of attestation contained within the Statement.","type":"string"}}}},"attestors":{"description":"Attestors specified the required attestors (i.e. authorities)","type":"array","items":{"type":"object","properties":{"count":{"description":"Count specifies the required number of entries that must match. If the count is null, all entries must match\n(a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a\nvalue N, then N must be less than or equal to the size of entries, and at least N entries must match.","type":"integer","minimum":1},"entries":{"description":"Entries contains the available attestors. An attestor can be a static key,\nattributes for keyless verification, or a nested attestor declaration.","type":"array","items":{"type":"object","properties":{"annotations":{"description":"Annotations are used for image verification.\nEvery specified key-value pair must exist and match in the verified payload.\nThe payload may contain other key-value pairs.","type":"object","additionalProperties":{"type":"string"}},"attestor":{"description":"Attestor is a nested set of Attestor used to specify a more complex set of match authorities.","x-kubernetes-preserve-unknown-fields":true},"certificates":{"description":"Certificates specifies one or more certificates.","type":"object","properties":{"cert":{"description":"Cert is an optional PEM-encoded public certificate.","type":"string"},"certChain":{"description":"CertChain is an optional PEM encoded set of certificates used to verify.","type":"string"},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}}}},"keyless":{"description":"Keyless is a set of attribute used to verify a Sigstore keyless attestor.\nSee https://github.com/sigstore/cosign/blob/main/KEYLESS.md.","type":"object","properties":{"additionalExtensions":{"description":"AdditionalExtensions are certificate-extensions used for keyless signing.","type":"object","additionalProperties":{"type":"string"}},"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"issuer":{"description":"Issuer is the certificate issuer used for keyless signing.","type":"string"},"issuerRegExp":{"description":"IssuerRegExp is the regular expression to match certificate issuer used for keyless signing.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"roots":{"description":"Roots is an optional set of PEM encoded trusted root certificates.\nIf not provided, the system roots are used.","type":"string"},"subject":{"description":"Subject is the verified identity used for keyless signing, for example the email address.","type":"string"},"subjectRegExp":{"description":"SubjectRegExp is the regular expression to match identity used for keyless signing, for example the email address.","type":"string"}}},"keys":{"description":"Keys specifies one or more public keys.","type":"object","properties":{"ctlog":{"description":"CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate\nTimestamps (SCTs). If the value is unset, the default behavior by Cosign is used.","type":"object","properties":{"ignoreSCT":{"description":"IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate\ntimestamp. Default is false. Set to true if this was opted out during signing.","type":"boolean"},"pubkey":{"description":"PubKey, if set, is used to validate SCTs against a custom source.","type":"string"},"tsaCertChain":{"description":"TSACertChain, if set, is the PEM-encoded certificate chain file for the RFC3161 timestamp authority. Must\ncontain the root CA certificate. Optionally may contain intermediate CA certificates, and\nmay contain the leaf TSA certificate if not present in the timestamurce.","type":"string"}}},"kms":{"description":"KMS provides the URI to the public key stored in a Key Management System. See:\nhttps://github.com/sigstore/cosign/blob/main/KMS.md","type":"string"},"publicKeys":{"description":"Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly\nspecified or can be a variable reference to a key specified in a ConfigMap (see\nhttps://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret\nelsewhere in the cluster by specifying it in the format \"k8s://\u003cnamespace\u003e/\u003csecret_name\u003e\".\nThe named Secret must specify a key `cosign.pub` containing the public key used for\nverification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret).\nWhen multiple keys are specified each key is processed as a separate staticKey entry\n(.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.","type":"string"},"rekor":{"description":"Rekor provides configuration for the Rekor transparency log service. If an empty object\nis provided the public instance of Rekor (https://rekor.sigstore.dev) is used.","type":"object","properties":{"ignoreTlog":{"description":"IgnoreTlog skips transparency log verification.","type":"boolean"},"pubkey":{"description":"RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor.\nIf set, this will be used to validate transparency log signatures from a custom Rekor.","type":"string"},"url":{"description":"URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.","type":"string"}}},"secret":{"description":"Reference to a Secret resource that contains a public key","type":"object","required":["name","namespace"],"properties":{"name":{"description":"Name of the secret. The provided secret must contain a key named cosign.pub.","type":"string"},"namespace":{"description":"Namespace name where the Secret exists.","type":"string"}}},"signatureAlgorithm":{"description":"Deprecated. Use attestor.signatureAlgorithm instead.","type":"string","default":"sha256"}}},"repository":{"description":"Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule.\nIf specified Repository will override other OCI image repository locations for this Attestor.","type":"string"},"signatureAlgorithm":{"description":"Specify signature algorithm for public keys. Supported values are sha224, sha256, sha384 and sha512.","type":"string","default":"sha256"}}}}}}},"cosignOCI11":{"description":"CosignOCI11 enables the experimental OCI 1.1 behaviour in cosign image verification.\nDefaults to false.","type":"boolean"},"failureAction":{"description":"Allowed values are Audit or Enforce.","type":"string","enum":["Audit","Enforce"]},"image":{"description":"Deprecated. Use ImageReferences instead.","type":"string"},"imageReferences":{"description":"ImageReferences is a list of matching image reference patterns. At least one pattern in the\nlist must match the image for the rule to apply. Each image reference consists of a registry\naddress (defaults to docker.io), repository, image, and tag (defaults to latest).\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"imageRegistryCredentials":{"description":"ImageRegistryCredentials provides credentials that will be used for authentication with registry.","type":"object","properties":{"allowInsecureRegistry":{"description":"AllowInsecureRegistry allows insecure access to a registry.","type":"boolean"},"providers":{"description":"Providers specifies a list of OCI Registry names, whose authentication providers are provided.\nIt can be of one of these values: default,google,azure,amazon,github.","type":"array","items":{"description":"ImageRegistryCredentialsProvidersType provides the list of credential providers required.","type":"string","enum":["default","amazon","azure","google","github"]}},"secrets":{"description":"Secrets specifies a list of secrets that are provided for credentials.\nSecrets must live in the Kyverno namespace.","type":"array","items":{"type":"string"}}}},"issuer":{"description":"Deprecated. Use KeylessAttestor instead.","type":"string"},"key":{"description":"Deprecated. Use StaticKeyAttestor instead.","type":"string"},"mutateDigest":{"description":"MutateDigest enables replacement of image tags with digests.\nDefaults to true.","type":"boolean","default":true},"repository":{"description":"Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule.\nIf specified Repository will override the default OCI image repository configured for the installation.\nThe repository can also be overridden per Attestor or Attestation.","type":"string"},"required":{"description":"Required validates that images are verified i.e. have matched passed a signature or attestation check.","type":"boolean","default":true},"roots":{"description":"Deprecated. Use KeylessAttestor instead.","type":"string"},"skipImageReferences":{"description":"SkipImageReferences is a list of matching image reference patterns that should be skipped.\nAt least one pattern in the list must match the image for the rule to be skipped. Each image reference\nconsists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest).\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"subject":{"description":"Deprecated. Use KeylessAttestor instead.","type":"string"},"type":{"description":"Type specifies the method of signature validation. The allowed options\nare Cosign, Sigstore Bundle and Notary. By default Cosign is used if a type is not specified.","type":"string","enum":["Cosign","SigstoreBundle","Notary"]},"useCache":{"description":"UseCache enables caching of image verify responses for this rule.","type":"boolean","default":true},"validate":{"description":"Validation checks conditions across multiple image\nverification attestations or context entries","type":"object","properties":{"deny":{"description":"Deny defines conditions used to pass or fail a validation rule.","type":"object","properties":{"conditions":{"description":"Multiple conditions can be declared under an `any` or `all` statement. A direct list\nof conditions (without `any` or `all` statements) is also supported for backwards compatibility\nbut will be deprecated in the next major release.\nSee: https://kyverno.io/docs/writing-policies/validate/#deny-rules","x-kubernetes-preserve-unknown-fields":true}}},"message":{"description":"Message specifies a custom message to be displayed on failure.","type":"string"}}},"verifyDigest":{"description":"VerifyDigest validates that images have a digest.","type":"boolean","default":true}}}}}}}}},"conditions":{"type":"array","items":{"description":"Condition contains details for one aspect of the current state of this API Resource.","type":"object","required":["lastTransitionTime","message","reason","status","type"],"properties":{"lastTransitionTime":{"description":"lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.","type":"string","format":"date-time"},"message":{"description":"message is a human readable message indicating details about the transition.\nThis may be an empty string.","type":"string","maxLength":32768},"observedGeneration":{"description":"observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.","type":"integer","format":"int64","minimum":0},"reason":{"description":"reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.","type":"string","maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"},"status":{"description":"status of the condition, one of True, False, Unknown.","type":"string","enum":["True","False","Unknown"]},"type":{"description":"type of condition in CamelCase or in foo.example.com/CamelCase.","type":"string","maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"}}}},"ready":{"description":"Deprecated in favor of Conditions","type":"boolean"},"rulecount":{"description":"RuleCountStatus contains four variables which describes counts for\nvalidate, generate, mutate and verify images rules","type":"object","required":["generate","mutate","validate","verifyimages"],"properties":{"generate":{"description":"Count for generate rules in policy","type":"integer"},"mutate":{"description":"Count for mutate rules in policy","type":"integer"},"validate":{"description":"Count for validate rules in policy","type":"integer"},"verifyimages":{"description":"Count for verify image rules in policy","type":"integer"}}},"validatingadmissionpolicy":{"description":"ValidatingAdmissionPolicy contains status information","type":"object","required":["generated","message"],"properties":{"generated":{"description":"Generated indicates whether a validating admission policy is generated from the policy or not","type":"boolean"},"message":{"description":"Message is a human readable message indicating details about the generation of validating admission policy\nIt is an empty string when validating admission policy is successfully generated.","type":"string"}}}}}},"x-kubernetes-group-version-kind":[{"group":"kyverno.io","kind":"Policy","version":"v2beta1"}],"x-kubernetes-selectable-fields":[]},"io.kyverno.v2beta1.PolicyException":{"description":"PolicyException declares resources to be excluded from specified policies.","type":"object","required":["spec"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"}]},"spec":{"description":"Spec declares policy exception behaviors.","type":"object","required":["exceptions","match"],"properties":{"background":{"description":"Background controls if exceptions are applied to existing policies during a background scan.\nOptional. Default value is \"true\". The value must be set to \"false\" if the policy rule\nuses variables that are only available in the admission review request (e.g. user name).","type":"boolean"},"conditions":{"description":"Conditions are used to determine if a resource applies to the exception by evaluating a\nset of conditions. The declaration can contain nested `any` or `all` statements.","type":"object","properties":{"all":{"description":"AllConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, all of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}},"any":{"description":"AnyConditions enable variable-based conditional rule execution. This is useful for\nfiner control of when an rule is applied. A condition can reference object data\nusing JMESPath notation.\nHere, at least one of the conditions need to pass.","type":"array","items":{"type":"object","properties":{"key":{"description":"Key is the context entry (using JMESPath) for conditional rule evaluation.","x-kubernetes-preserve-unknown-fields":true},"message":{"description":"Message is an optional display message","type":"string"},"operator":{"description":"Operator is the conditional operation to perform. Valid operators are:\nEquals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals,\nGreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan,\nDurationLessThanOrEquals, DurationLessThan","type":"string","enum":["Equals","NotEquals","AnyIn","AllIn","AnyNotIn","AllNotIn","GreaterThanOrEquals","GreaterThan","LessThanOrEquals","LessThan","DurationGreaterThanOrEquals","DurationGreaterThan","DurationLessThanOrEquals","DurationLessThan"]},"value":{"description":"Value is the conditional value, or set of values. The values can be fixed set\nor can be variables declared using JMESPath.","x-kubernetes-preserve-unknown-fields":true}}}}}},"exceptions":{"description":"Exceptions is a list policy/rules to be excluded","type":"array","items":{"description":"Exception stores infos about a policy and rules","type":"object","required":["policyName","ruleNames"],"properties":{"policyName":{"description":"PolicyName identifies the policy to which the exception is applied.\nThe policy name uses the format \u003cnamespace\u003e/\u003cname\u003e unless it\nreferences a ClusterPolicy.","type":"string"},"ruleNames":{"description":"RuleNames identifies the rules to which the exception is applied.","type":"array","items":{"type":"string"}}}}},"match":{"description":"Match defines match clause used to check if a resource applies to the exception","type":"object","not":{"required":["any","all"]},"properties":{"all":{"description":"All allows specifying resources which will be ANDed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}},"any":{"description":"Any allows specifying resources which will be ORed","type":"array","items":{"description":"ResourceFilter allow users to \"AND\" or \"OR\" between resources","type":"object","properties":{"clusterRoles":{"description":"ClusterRoles is the list of cluster-wide role names for the user.","type":"array","items":{"type":"string"}},"resources":{"description":"ResourceDescription contains information about the resource being created or modified.","type":"object","not":{"required":["name","names"]},"properties":{"annotations":{"description":"Annotations is a  map of annotations (key-value pairs of type string). Annotation keys\nand values support the wildcard characters \"*\" (matches zero or many characters) and\n\"?\" (matches at least one character).","type":"object","additionalProperties":{"type":"string"}},"kinds":{"description":"Kinds is a list of resource kinds.","type":"array","items":{"type":"string"}},"name":{"description":"Name is the name of the resource. The name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).\nNOTE: \"Name\" is being deprecated in favor of \"Names\".","type":"string"},"names":{"description":"Names are the names of the resources. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"namespaceSelector":{"description":"NamespaceSelector is a label selector for the resource namespace. Label keys and values\nin `matchLabels` support the wildcard characters `*` (matches zero or many characters)\nand `?` (matches one character).Wildcards allows writing label selectors like\n[\"storage.k8s.io/*\": \"*\"]. Note that using [\"*\" : \"*\"] matches any key and value but\ndoes not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"},"namespaces":{"description":"Namespaces is a list of namespaces names. Each name supports wildcard characters\n\"*\" (matches zero or many characters) and \"?\" (at least one character).","type":"array","items":{"type":"string"}},"operations":{"description":"Operations can contain values [\"CREATE, \"UPDATE\", \"CONNECT\", \"DELETE\"], which are used to match a specific action.","type":"array","items":{"description":"AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.","type":"string","enum":["CREATE","CONNECT","UPDATE","DELETE"]}},"selector":{"description":"Selector is a label selector. Label keys and values in `matchLabels` support the wildcard\ncharacters `*` (matches zero or many characters) and `?` (matches one character).\nWildcards allows writing label selectors like [\"storage.k8s.io/*\": \"*\"]. Note that\nusing [\"*\" : \"*\"] matches any key and value but does not match an empty label set.","type":"object","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","type":"array","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","type":"object","required":["key","operator"],"properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","type":"array","items":{"type":"string"},"x-kubernetes-list-type":"atomic"}}},"x-kubernetes-list-type":"atomic"},"matchLabels":{"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object","additionalProperties":{"type":"string"}}},"x-kubernetes-map-type":"atomic"}}},"roles":{"description":"Roles is the list of namespaced role names for the user.","type":"array","items":{"type":"string"}},"subjects":{"description":"Subjects is the list of subject names like users, user groups, and service accounts.","type":"array","items":{"description":"Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.","type":"object","required":["kind","name"],"properties":{"apiGroup":{"description":"APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.","type":"string"},"kind":{"description":"Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.","type":"string"},"name":{"description":"Name of the object being referenced.","type":"string"},"namespace":{"description":"Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.","type":"string"}},"x-kubernetes-map-type":"atomic"}}}}}}},"podSecurity":{"description":"PodSecurity specifies the Pod Security Standard controls to be excluded.\nApplicable only to policies that have validate.podSecurity subrule.","type":"array","items":{"description":"PodSecurityStandard specifies the Pod Security Standard controls to be excluded.","type":"object","required":["controlName"],"properties":{"controlName":{"description":"ControlName specifies the name of the Pod Security Standard control.\nSee: https://kubernetes.io/docs/concepts/security/pod-security-standards/","type":"string","enum":["HostProcess","Host Namespaces","Privileged Containers","Capabilities","HostPath Volumes","Host Ports","AppArmor","SELinux","/proc Mount Type","Seccomp","Sysctls","Volume Types","Privilege Escalation","Running as Non-root","Running as Non-root user"]},"images":{"description":"Images selects matching containers and applies the container level PSS.\nEach image is the image name consisting of the registry address, repository, image, and tag.\nEmpty list matches no containers, PSS checks are applied at the pod level only.\nWildcards ('*' and '?') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.","type":"array","items":{"type":"string"}},"restrictedField":{"description":"RestrictedField selects the field for the given Pod Security Standard control.\nWhen not set, all restricted fields for the control are selected.","type":"string"},"values":{"description":"Values defines the allowed values that can be excluded.","type":"array","items":{"type":"string"}}}}}}}},"x-kubernetes-group-version-kind":[{"group":"kyverno.io","kind":"PolicyException","version":"v2beta1"}],"x-kubernetes-selectable-fields":[]},"io.kyverno.v2beta1.PolicyExceptionList":{"description":"PolicyExceptionList is a list of PolicyException","type":"object","required":["items"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of policyexceptions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md","type":"array","items":{"$ref":"#/components/schemas/io.kyverno.v2beta1.PolicyException"}},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"}]}},"x-kubernetes-group-version-kind":[{"group":"kyverno.io","kind":"PolicyExceptionList","version":"v2beta1"}],"x-kubernetes-selectable-fields":[]},"io.kyverno.v2beta1.PolicyList":{"description":"PolicyList is a list of Policy","type":"object","required":["items"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of policies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md","type":"array","items":{"$ref":"#/components/schemas/io.kyverno.v2beta1.Policy"}},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"}]}},"x-kubernetes-group-version-kind":[{"group":"kyverno.io","kind":"PolicyList","version":"v2beta1"}],"x-kubernetes-selectable-fields":[]}}}}